
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007024  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407024  00407024  00017024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  0040702c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000036c  204009d0  004079fc  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400d3c  00407d68  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402d40  00409d6c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00017f39  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000367c  00000000  00000000  00038990  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005695  00000000  00000000  0003c00c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000898  00000000  00000000  000416a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000910  00000000  00000000  00041f39  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00009cd4  00000000  00000000  00042849  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000e7f3  00000000  00000000  0004c51d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000901dd  00000000  00000000  0005ad10  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001f08  00000000  00000000  000eaef0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	40 2d 40 20 b9 12 40 00 b5 12 40 00 b5 12 40 00     @-@ ..@...@...@.
  400010:	b5 12 40 00 b5 12 40 00 b5 12 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	b5 12 40 00 b5 12 40 00 00 00 00 00 b5 12 40 00     ..@...@.......@.
  40003c:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  40004c:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  40005c:	b5 12 40 00 b5 12 40 00 00 00 00 00 19 0e 40 00     ..@...@.......@.
  40006c:	2d 0e 40 00 41 0e 40 00 b5 12 40 00 b5 12 40 00     -.@.A.@...@...@.
  40007c:	b5 12 40 00 55 0e 40 00 69 0e 40 00 b5 12 40 00     ..@.U.@.i.@...@.
  40008c:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  40009c:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  4000ac:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  4000bc:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  4000cc:	b5 12 40 00 00 00 00 00 b5 12 40 00 00 00 00 00     ..@.......@.....
  4000dc:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  4000ec:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  4000fc:	b5 12 40 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ..@...@...@...@.
  40010c:	b5 12 40 00 b5 12 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 b5 12 40 00 b5 12 40 00 b5 12 40 00     ......@...@...@.
  40012c:	b5 12 40 00 b5 12 40 00 00 00 00 00 b5 12 40 00     ..@...@.......@.
  40013c:	b5 12 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	0040702c 	.word	0x0040702c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040702c 	.word	0x0040702c
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	0040702c 	.word	0x0040702c
  4001a8:	00000000 	.word	0x00000000

004001ac <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4001ac:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4001ae:	4b07      	ldr	r3, [pc, #28]	; (4001cc <spi_enable_clock+0x20>)
  4001b0:	4298      	cmp	r0, r3
  4001b2:	d003      	beq.n	4001bc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4001b4:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <spi_enable_clock+0x24>)
  4001b6:	4298      	cmp	r0, r3
  4001b8:	d004      	beq.n	4001c4 <spi_enable_clock+0x18>
  4001ba:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4001bc:	2015      	movs	r0, #21
  4001be:	4b05      	ldr	r3, [pc, #20]	; (4001d4 <spi_enable_clock+0x28>)
  4001c0:	4798      	blx	r3
  4001c2:	bd08      	pop	{r3, pc}
  4001c4:	202a      	movs	r0, #42	; 0x2a
  4001c6:	4b03      	ldr	r3, [pc, #12]	; (4001d4 <spi_enable_clock+0x28>)
  4001c8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4001ca:	e7f6      	b.n	4001ba <spi_enable_clock+0xe>
  4001cc:	40008000 	.word	0x40008000
  4001d0:	40058000 	.word	0x40058000
  4001d4:	00400f9d 	.word	0x00400f9d

004001d8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4001d8:	6843      	ldr	r3, [r0, #4]
  4001da:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4001de:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4001e0:	6843      	ldr	r3, [r0, #4]
  4001e2:	0409      	lsls	r1, r1, #16
  4001e4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4001e8:	4319      	orrs	r1, r3
  4001ea:	6041      	str	r1, [r0, #4]
  4001ec:	4770      	bx	lr

004001ee <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4001ee:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4001f0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4001f4:	6905      	ldr	r5, [r0, #16]
  4001f6:	f015 0f02 	tst.w	r5, #2
  4001fa:	d103      	bne.n	400204 <spi_write+0x16>
		if (!timeout--) {
  4001fc:	3c01      	subs	r4, #1
  4001fe:	d1f9      	bne.n	4001f4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400200:	2001      	movs	r0, #1
  400202:	e00c      	b.n	40021e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400204:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400206:	f014 0f02 	tst.w	r4, #2
  40020a:	d006      	beq.n	40021a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40020c:	0412      	lsls	r2, r2, #16
  40020e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400212:	4311      	orrs	r1, r2
		if (uc_last) {
  400214:	b10b      	cbz	r3, 40021a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400216:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40021a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40021c:	2000      	movs	r0, #0
}
  40021e:	bc30      	pop	{r4, r5}
  400220:	4770      	bx	lr

00400222 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400222:	b932      	cbnz	r2, 400232 <spi_set_clock_polarity+0x10>
  400224:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400228:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40022a:	f023 0301 	bic.w	r3, r3, #1
  40022e:	6303      	str	r3, [r0, #48]	; 0x30
  400230:	4770      	bx	lr
  400232:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400236:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400238:	f043 0301 	orr.w	r3, r3, #1
  40023c:	6303      	str	r3, [r0, #48]	; 0x30
  40023e:	4770      	bx	lr

00400240 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400240:	b932      	cbnz	r2, 400250 <spi_set_clock_phase+0x10>
  400242:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400246:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400248:	f023 0302 	bic.w	r3, r3, #2
  40024c:	6303      	str	r3, [r0, #48]	; 0x30
  40024e:	4770      	bx	lr
  400250:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400254:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400256:	f043 0302 	orr.w	r3, r3, #2
  40025a:	6303      	str	r3, [r0, #48]	; 0x30
  40025c:	4770      	bx	lr

0040025e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40025e:	2a04      	cmp	r2, #4
  400260:	d003      	beq.n	40026a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400262:	b16a      	cbz	r2, 400280 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400264:	2a08      	cmp	r2, #8
  400266:	d016      	beq.n	400296 <spi_configure_cs_behavior+0x38>
  400268:	4770      	bx	lr
  40026a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40026e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400270:	f023 0308 	bic.w	r3, r3, #8
  400274:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400276:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400278:	f043 0304 	orr.w	r3, r3, #4
  40027c:	6303      	str	r3, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr
  400280:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400284:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400286:	f023 0308 	bic.w	r3, r3, #8
  40028a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40028c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40028e:	f023 0304 	bic.w	r3, r3, #4
  400292:	6303      	str	r3, [r0, #48]	; 0x30
  400294:	4770      	bx	lr
  400296:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40029a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40029c:	f043 0308 	orr.w	r3, r3, #8
  4002a0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4002a2:	e7e1      	b.n	400268 <spi_configure_cs_behavior+0xa>

004002a4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4002a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4002a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4002ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4002b0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002b2:	431a      	orrs	r2, r3
  4002b4:	630a      	str	r2, [r1, #48]	; 0x30
  4002b6:	4770      	bx	lr

004002b8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4002b8:	1e43      	subs	r3, r0, #1
  4002ba:	4419      	add	r1, r3
  4002bc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4002c0:	1e43      	subs	r3, r0, #1
  4002c2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4002c4:	bf94      	ite	ls
  4002c6:	b200      	sxthls	r0, r0
		return -1;
  4002c8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4002cc:	4770      	bx	lr

004002ce <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4002ce:	b17a      	cbz	r2, 4002f0 <spi_set_baudrate_div+0x22>
{
  4002d0:	b410      	push	{r4}
  4002d2:	4614      	mov	r4, r2
  4002d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4002d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4002de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4002e0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4002e2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4002e6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4002e8:	2000      	movs	r0, #0
}
  4002ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4002ee:	4770      	bx	lr
        return -1;
  4002f0:	f04f 30ff 	mov.w	r0, #4294967295
  4002f4:	4770      	bx	lr
	...

004002f8 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4002f8:	4b01      	ldr	r3, [pc, #4]	; (400300 <gfx_mono_set_framebuffer+0x8>)
  4002fa:	6018      	str	r0, [r3, #0]
  4002fc:	4770      	bx	lr
  4002fe:	bf00      	nop
  400300:	204009ec 	.word	0x204009ec

00400304 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400304:	4b02      	ldr	r3, [pc, #8]	; (400310 <gfx_mono_framebuffer_put_byte+0xc>)
  400306:	681b      	ldr	r3, [r3, #0]
  400308:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40030c:	5442      	strb	r2, [r0, r1]
  40030e:	4770      	bx	lr
  400310:	204009ec 	.word	0x204009ec

00400314 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400314:	4b02      	ldr	r3, [pc, #8]	; (400320 <gfx_mono_framebuffer_get_byte+0xc>)
  400316:	681b      	ldr	r3, [r3, #0]
  400318:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  40031c:	5c40      	ldrb	r0, [r0, r1]
  40031e:	4770      	bx	lr
  400320:	204009ec 	.word	0x204009ec

00400324 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400328:	1884      	adds	r4, r0, r2
  40032a:	2c80      	cmp	r4, #128	; 0x80
  40032c:	dd02      	ble.n	400334 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40032e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400332:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400334:	b322      	cbz	r2, 400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400336:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400338:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40033c:	2601      	movs	r6, #1
  40033e:	fa06 f101 	lsl.w	r1, r6, r1
  400342:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400344:	2b01      	cmp	r3, #1
  400346:	d01d      	beq.n	400384 <gfx_mono_generic_draw_horizontal_line+0x60>
  400348:	2b00      	cmp	r3, #0
  40034a:	d035      	beq.n	4003b8 <gfx_mono_generic_draw_horizontal_line+0x94>
  40034c:	2b02      	cmp	r3, #2
  40034e:	d117      	bne.n	400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400350:	3801      	subs	r0, #1
  400352:	b2c7      	uxtb	r7, r0
  400354:	19d4      	adds	r4, r2, r7
  400356:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400358:	f8df a090 	ldr.w	sl, [pc, #144]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40035c:	f04f 0900 	mov.w	r9, #0
  400360:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400364:	4621      	mov	r1, r4
  400366:	4628      	mov	r0, r5
  400368:	47d0      	blx	sl
			temp ^= pixelmask;
  40036a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40036e:	464b      	mov	r3, r9
  400370:	b2d2      	uxtb	r2, r2
  400372:	4621      	mov	r1, r4
  400374:	4628      	mov	r0, r5
  400376:	47c0      	blx	r8
  400378:	3c01      	subs	r4, #1
  40037a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40037c:	42bc      	cmp	r4, r7
  40037e:	d1f1      	bne.n	400364 <gfx_mono_generic_draw_horizontal_line+0x40>
  400380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400384:	3801      	subs	r0, #1
  400386:	b2c7      	uxtb	r7, r0
  400388:	19d4      	adds	r4, r2, r7
  40038a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40038c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400390:	f04f 0900 	mov.w	r9, #0
  400394:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400398:	4621      	mov	r1, r4
  40039a:	4628      	mov	r0, r5
  40039c:	47d0      	blx	sl
			temp |= pixelmask;
  40039e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003a2:	464b      	mov	r3, r9
  4003a4:	b2d2      	uxtb	r2, r2
  4003a6:	4621      	mov	r1, r4
  4003a8:	4628      	mov	r0, r5
  4003aa:	47c0      	blx	r8
  4003ac:	3c01      	subs	r4, #1
  4003ae:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003b0:	42bc      	cmp	r4, r7
  4003b2:	d1f1      	bne.n	400398 <gfx_mono_generic_draw_horizontal_line+0x74>
  4003b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003b8:	3801      	subs	r0, #1
  4003ba:	b2c7      	uxtb	r7, r0
  4003bc:	19d4      	adds	r4, r2, r7
  4003be:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4003c0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4003c4:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4003c6:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4003ca:	4621      	mov	r1, r4
  4003cc:	4628      	mov	r0, r5
  4003ce:	47c0      	blx	r8
			temp &= ~pixelmask;
  4003d0:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003d4:	2300      	movs	r3, #0
  4003d6:	b2d2      	uxtb	r2, r2
  4003d8:	4621      	mov	r1, r4
  4003da:	4628      	mov	r0, r5
  4003dc:	47c8      	blx	r9
  4003de:	3c01      	subs	r4, #1
  4003e0:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003e2:	42bc      	cmp	r4, r7
  4003e4:	d1f1      	bne.n	4003ca <gfx_mono_generic_draw_horizontal_line+0xa6>
  4003e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003ea:	bf00      	nop
  4003ec:	00400715 	.word	0x00400715
  4003f0:	00400611 	.word	0x00400611

004003f4 <gfx_mono_generic_draw_vertical_line>:
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
	if (length == 0) {
  4003f4:	2a00      	cmp	r2, #0
  4003f6:	d048      	beq.n	40048a <gfx_mono_generic_draw_vertical_line+0x96>
{
  4003f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4003fc:	4614      	mov	r4, r2
  4003fe:	461f      	mov	r7, r3
  400400:	4606      	mov	r6, r0
		return;
	}

	gfx_coord_t y2 = y + length - 1;
  400402:	1e4a      	subs	r2, r1, #1
  400404:	4422      	add	r2, r4
  400406:	b2d2      	uxtb	r2, r2

	if (y == y2) {
  400408:	4291      	cmp	r1, r2
  40040a:	d031      	beq.n	400470 <gfx_mono_generic_draw_vertical_line+0x7c>
  40040c:	2a1f      	cmp	r2, #31
  40040e:	bf28      	it	cs
  400410:	221f      	movcs	r2, #31
  400412:	4615      	mov	r5, r2

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
		y2 = GFX_MONO_LCD_HEIGHT - 1;
	}

	gfx_coord_t y1page = y / 8;
  400414:	08cc      	lsrs	r4, r1, #3
	gfx_coord_t y2page = y2 / 8;
  400416:	ea4f 08d2 	mov.w	r8, r2, lsr #3

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
  40041a:	f001 0207 	and.w	r2, r1, #7
  40041e:	23ff      	movs	r3, #255	; 0xff
  400420:	fa03 f202 	lsl.w	r2, r3, r2
  400424:	b2d2      	uxtb	r2, r2
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
  400426:	f005 0507 	and.w	r5, r5, #7
  40042a:	f1c5 0507 	rsb	r5, r5, #7
  40042e:	fa43 f505 	asr.w	r5, r3, r5
  400432:	b2ed      	uxtb	r5, r5

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
  400434:	4544      	cmp	r4, r8
  400436:	d020      	beq.n	40047a <gfx_mono_generic_draw_vertical_line+0x86>
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);
  400438:	463b      	mov	r3, r7
  40043a:	4601      	mov	r1, r0
  40043c:	4620      	mov	r0, r4
  40043e:	f8df 904c 	ldr.w	r9, [pc, #76]	; 40048c <gfx_mono_generic_draw_vertical_line+0x98>
  400442:	47c8      	blx	r9

		while (++y1page < y2page) {
  400444:	3401      	adds	r4, #1
  400446:	45a0      	cmp	r8, r4
  400448:	d90a      	bls.n	400460 <gfx_mono_generic_draw_vertical_line+0x6c>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
  40044a:	f04f 0aff 	mov.w	sl, #255	; 0xff
  40044e:	463b      	mov	r3, r7
  400450:	4652      	mov	r2, sl
  400452:	4631      	mov	r1, r6
  400454:	4620      	mov	r0, r4
  400456:	47c8      	blx	r9
		while (++y1page < y2page) {
  400458:	3401      	adds	r4, #1
  40045a:	b2e4      	uxtb	r4, r4
  40045c:	45a0      	cmp	r8, r4
  40045e:	d8f6      	bhi.n	40044e <gfx_mono_generic_draw_vertical_line+0x5a>
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
  400460:	463b      	mov	r3, r7
  400462:	462a      	mov	r2, r5
  400464:	4631      	mov	r1, r6
  400466:	4640      	mov	r0, r8
  400468:	4c08      	ldr	r4, [pc, #32]	; (40048c <gfx_mono_generic_draw_vertical_line+0x98>)
  40046a:	47a0      	blx	r4
  40046c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_draw_pixel(x, y, color);
  400470:	461a      	mov	r2, r3
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <gfx_mono_generic_draw_vertical_line+0x9c>)
  400474:	4798      	blx	r3
		return;
  400476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
  40047a:	463b      	mov	r3, r7
  40047c:	402a      	ands	r2, r5
  40047e:	4601      	mov	r1, r0
  400480:	4620      	mov	r0, r4
  400482:	4c02      	ldr	r4, [pc, #8]	; (40048c <gfx_mono_generic_draw_vertical_line+0x98>)
  400484:	47a0      	blx	r4
  400486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40048a:	4770      	bx	lr
  40048c:	00400721 	.word	0x00400721
  400490:	004006b1 	.word	0x004006b1

00400494 <gfx_mono_generic_draw_rect>:
 * \param[in] color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400498:	4604      	mov	r4, r0
  40049a:	460f      	mov	r7, r1
  40049c:	4616      	mov	r6, r2
  40049e:	4698      	mov	r8, r3
  4004a0:	f89d 5020 	ldrb.w	r5, [sp, #32]
	gfx_mono_draw_horizontal_line(x, y, width, color);
  4004a4:	462b      	mov	r3, r5
  4004a6:	f8df 9034 	ldr.w	r9, [pc, #52]	; 4004dc <gfx_mono_generic_draw_rect+0x48>
  4004aa:	47c8      	blx	r9
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
  4004ac:	f108 31ff 	add.w	r1, r8, #4294967295
  4004b0:	4439      	add	r1, r7
  4004b2:	462b      	mov	r3, r5
  4004b4:	4632      	mov	r2, r6
  4004b6:	b2c9      	uxtb	r1, r1
  4004b8:	4620      	mov	r0, r4
  4004ba:	47c8      	blx	r9

	gfx_mono_draw_vertical_line(x, y, height, color);
  4004bc:	462b      	mov	r3, r5
  4004be:	4642      	mov	r2, r8
  4004c0:	4639      	mov	r1, r7
  4004c2:	4620      	mov	r0, r4
  4004c4:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4004e0 <gfx_mono_generic_draw_rect+0x4c>
  4004c8:	47c8      	blx	r9
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
  4004ca:	1e70      	subs	r0, r6, #1
  4004cc:	4420      	add	r0, r4
  4004ce:	462b      	mov	r3, r5
  4004d0:	4642      	mov	r2, r8
  4004d2:	4639      	mov	r1, r7
  4004d4:	b2c0      	uxtb	r0, r0
  4004d6:	47c8      	blx	r9
  4004d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004dc:	00400325 	.word	0x00400325
  4004e0:	004003f5 	.word	0x004003f5

004004e4 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4004e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4004e8:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4004ec:	b18b      	cbz	r3, 400512 <gfx_mono_generic_draw_filled_rect+0x2e>
  4004ee:	461c      	mov	r4, r3
  4004f0:	4690      	mov	r8, r2
  4004f2:	4606      	mov	r6, r0
  4004f4:	1e4d      	subs	r5, r1, #1
  4004f6:	b2ed      	uxtb	r5, r5
  4004f8:	442c      	add	r4, r5
  4004fa:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4004fc:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400518 <gfx_mono_generic_draw_filled_rect+0x34>
  400500:	463b      	mov	r3, r7
  400502:	4642      	mov	r2, r8
  400504:	4621      	mov	r1, r4
  400506:	4630      	mov	r0, r6
  400508:	47c8      	blx	r9
  40050a:	3c01      	subs	r4, #1
  40050c:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40050e:	42ac      	cmp	r4, r5
  400510:	d1f6      	bne.n	400500 <gfx_mono_generic_draw_filled_rect+0x1c>
  400512:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400516:	bf00      	nop
  400518:	00400325 	.word	0x00400325

0040051c <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  40051c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400520:	b083      	sub	sp, #12
  400522:	4604      	mov	r4, r0
  400524:	4688      	mov	r8, r1
  400526:	4691      	mov	r9, r2
  400528:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  40052a:	7a5b      	ldrb	r3, [r3, #9]
  40052c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400530:	2100      	movs	r1, #0
  400532:	9100      	str	r1, [sp, #0]
  400534:	4649      	mov	r1, r9
  400536:	4640      	mov	r0, r8
  400538:	4d21      	ldr	r5, [pc, #132]	; (4005c0 <gfx_mono_draw_char+0xa4>)
  40053a:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  40053c:	f89b 3000 	ldrb.w	r3, [fp]
  400540:	b113      	cbz	r3, 400548 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400542:	b003      	add	sp, #12
  400544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400548:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40054c:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40054e:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400552:	bf18      	it	ne
  400554:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400556:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40055a:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40055e:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400560:	fb17 f70a 	smulbb	r7, r7, sl
  400564:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400568:	f8db 3004 	ldr.w	r3, [fp, #4]
  40056c:	fa13 f787 	uxtah	r7, r3, r7
  400570:	e01f      	b.n	4005b2 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400572:	0064      	lsls	r4, r4, #1
  400574:	b2e4      	uxtb	r4, r4
  400576:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400578:	b2eb      	uxtb	r3, r5
  40057a:	429e      	cmp	r6, r3
  40057c:	d910      	bls.n	4005a0 <gfx_mono_draw_char+0x84>
  40057e:	b2eb      	uxtb	r3, r5
  400580:	eb08 0003 	add.w	r0, r8, r3
  400584:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400586:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40058a:	bf08      	it	eq
  40058c:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400590:	f014 0f80 	tst.w	r4, #128	; 0x80
  400594:	d0ed      	beq.n	400572 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400596:	2201      	movs	r2, #1
  400598:	4649      	mov	r1, r9
  40059a:	4b0a      	ldr	r3, [pc, #40]	; (4005c4 <gfx_mono_draw_char+0xa8>)
  40059c:	4798      	blx	r3
  40059e:	e7e8      	b.n	400572 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  4005a0:	f109 0901 	add.w	r9, r9, #1
  4005a4:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4005a8:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4005ac:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4005b0:	d0c7      	beq.n	400542 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4005b2:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4005b6:	2e00      	cmp	r6, #0
  4005b8:	d0f2      	beq.n	4005a0 <gfx_mono_draw_char+0x84>
  4005ba:	2500      	movs	r5, #0
  4005bc:	462c      	mov	r4, r5
  4005be:	e7de      	b.n	40057e <gfx_mono_draw_char+0x62>
  4005c0:	004004e5 	.word	0x004004e5
  4005c4:	004006b1 	.word	0x004006b1

004005c8 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4005c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005cc:	4604      	mov	r4, r0
  4005ce:	4690      	mov	r8, r2
  4005d0:	461d      	mov	r5, r3
  4005d2:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4005d4:	4f0d      	ldr	r7, [pc, #52]	; (40060c <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4005d6:	460e      	mov	r6, r1
  4005d8:	e008      	b.n	4005ec <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4005da:	7a6a      	ldrb	r2, [r5, #9]
  4005dc:	3201      	adds	r2, #1
  4005de:	4442      	add	r2, r8
  4005e0:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4005e4:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4005e6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4005ea:	b16b      	cbz	r3, 400608 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4005ec:	7820      	ldrb	r0, [r4, #0]
  4005ee:	280a      	cmp	r0, #10
  4005f0:	d0f3      	beq.n	4005da <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4005f2:	280d      	cmp	r0, #13
  4005f4:	d0f7      	beq.n	4005e6 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4005f6:	462b      	mov	r3, r5
  4005f8:	4642      	mov	r2, r8
  4005fa:	4649      	mov	r1, r9
  4005fc:	47b8      	blx	r7
			x += font->width;
  4005fe:	7a2b      	ldrb	r3, [r5, #8]
  400600:	4499      	add	r9, r3
  400602:	fa5f f989 	uxtb.w	r9, r9
  400606:	e7ee      	b.n	4005e6 <gfx_mono_draw_string+0x1e>
}
  400608:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40060c:	0040051d 	.word	0x0040051d

00400610 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400610:	b570      	push	{r4, r5, r6, lr}
  400612:	4604      	mov	r4, r0
  400614:	460d      	mov	r5, r1
  400616:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400618:	b91b      	cbnz	r3, 400622 <gfx_mono_ssd1306_put_byte+0x12>
  40061a:	4b0d      	ldr	r3, [pc, #52]	; (400650 <gfx_mono_ssd1306_put_byte+0x40>)
  40061c:	4798      	blx	r3
  40061e:	42b0      	cmp	r0, r6
  400620:	d015      	beq.n	40064e <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  400622:	4632      	mov	r2, r6
  400624:	4629      	mov	r1, r5
  400626:	4620      	mov	r0, r4
  400628:	4b0a      	ldr	r3, [pc, #40]	; (400654 <gfx_mono_ssd1306_put_byte+0x44>)
  40062a:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  40062c:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400630:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400634:	4c08      	ldr	r4, [pc, #32]	; (400658 <gfx_mono_ssd1306_put_byte+0x48>)
  400636:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400638:	f3c5 1002 	ubfx	r0, r5, #4, #3
  40063c:	f040 0010 	orr.w	r0, r0, #16
  400640:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400642:	f005 000f 	and.w	r0, r5, #15
  400646:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400648:	4630      	mov	r0, r6
  40064a:	4b04      	ldr	r3, [pc, #16]	; (40065c <gfx_mono_ssd1306_put_byte+0x4c>)
  40064c:	4798      	blx	r3
  40064e:	bd70      	pop	{r4, r5, r6, pc}
  400650:	00400315 	.word	0x00400315
  400654:	00400305 	.word	0x00400305
  400658:	00400765 	.word	0x00400765
  40065c:	00400985 	.word	0x00400985

00400660 <gfx_mono_ssd1306_init>:
{
  400660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400664:	480d      	ldr	r0, [pc, #52]	; (40069c <gfx_mono_ssd1306_init+0x3c>)
  400666:	4b0e      	ldr	r3, [pc, #56]	; (4006a0 <gfx_mono_ssd1306_init+0x40>)
  400668:	4798      	blx	r3
	ssd1306_init();
  40066a:	4b0e      	ldr	r3, [pc, #56]	; (4006a4 <gfx_mono_ssd1306_init+0x44>)
  40066c:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40066e:	2040      	movs	r0, #64	; 0x40
  400670:	4b0d      	ldr	r3, [pc, #52]	; (4006a8 <gfx_mono_ssd1306_init+0x48>)
  400672:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400674:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400676:	f04f 0801 	mov.w	r8, #1
  40067a:	462f      	mov	r7, r5
  40067c:	4e0b      	ldr	r6, [pc, #44]	; (4006ac <gfx_mono_ssd1306_init+0x4c>)
{
  40067e:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400680:	4643      	mov	r3, r8
  400682:	463a      	mov	r2, r7
  400684:	b2e1      	uxtb	r1, r4
  400686:	4628      	mov	r0, r5
  400688:	47b0      	blx	r6
  40068a:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  40068c:	2c80      	cmp	r4, #128	; 0x80
  40068e:	d1f7      	bne.n	400680 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400690:	3501      	adds	r5, #1
  400692:	b2ed      	uxtb	r5, r5
  400694:	2d04      	cmp	r5, #4
  400696:	d1f2      	bne.n	40067e <gfx_mono_ssd1306_init+0x1e>
  400698:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40069c:	204009f0 	.word	0x204009f0
  4006a0:	004002f9 	.word	0x004002f9
  4006a4:	004007a5 	.word	0x004007a5
  4006a8:	00400765 	.word	0x00400765
  4006ac:	00400611 	.word	0x00400611

004006b0 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4006b0:	09c3      	lsrs	r3, r0, #7
  4006b2:	d12a      	bne.n	40070a <gfx_mono_ssd1306_draw_pixel+0x5a>
  4006b4:	291f      	cmp	r1, #31
  4006b6:	d828      	bhi.n	40070a <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4006b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4006bc:	4614      	mov	r4, r2
  4006be:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4006c0:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4006c2:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  4006c6:	2201      	movs	r2, #1
  4006c8:	fa02 f701 	lsl.w	r7, r2, r1
  4006cc:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4006d0:	4601      	mov	r1, r0
  4006d2:	4630      	mov	r0, r6
  4006d4:	4b0d      	ldr	r3, [pc, #52]	; (40070c <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4006d6:	4798      	blx	r3
  4006d8:	4602      	mov	r2, r0
	switch (color) {
  4006da:	2c01      	cmp	r4, #1
  4006dc:	d009      	beq.n	4006f2 <gfx_mono_ssd1306_draw_pixel+0x42>
  4006de:	b164      	cbz	r4, 4006fa <gfx_mono_ssd1306_draw_pixel+0x4a>
  4006e0:	2c02      	cmp	r4, #2
  4006e2:	d00e      	beq.n	400702 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4006e4:	2300      	movs	r3, #0
  4006e6:	4629      	mov	r1, r5
  4006e8:	4630      	mov	r0, r6
  4006ea:	4c09      	ldr	r4, [pc, #36]	; (400710 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4006ec:	47a0      	blx	r4
  4006ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4006f2:	ea48 0200 	orr.w	r2, r8, r0
  4006f6:	b2d2      	uxtb	r2, r2
		break;
  4006f8:	e7f4      	b.n	4006e4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4006fa:	ea20 0207 	bic.w	r2, r0, r7
  4006fe:	b2d2      	uxtb	r2, r2
		break;
  400700:	e7f0      	b.n	4006e4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  400702:	ea88 0200 	eor.w	r2, r8, r0
  400706:	b2d2      	uxtb	r2, r2
		break;
  400708:	e7ec      	b.n	4006e4 <gfx_mono_ssd1306_draw_pixel+0x34>
  40070a:	4770      	bx	lr
  40070c:	00400315 	.word	0x00400315
  400710:	00400611 	.word	0x00400611

00400714 <gfx_mono_ssd1306_get_byte>:
{
  400714:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400716:	4b01      	ldr	r3, [pc, #4]	; (40071c <gfx_mono_ssd1306_get_byte+0x8>)
  400718:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  40071a:	bd08      	pop	{r3, pc}
  40071c:	00400315 	.word	0x00400315

00400720 <gfx_mono_ssd1306_mask_byte>:
	gfx_mono_ssd1306_mask_byte(0,0,0xAA,GFX_PIXEL_XOR);
\endcode
 */
void gfx_mono_ssd1306_mask_byte(gfx_coord_t page, gfx_coord_t column,
		gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
  400720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400722:	4605      	mov	r5, r0
  400724:	460e      	mov	r6, r1
  400726:	4617      	mov	r7, r2
  400728:	461c      	mov	r4, r3
	return gfx_mono_framebuffer_get_byte(page, column);
  40072a:	4b0c      	ldr	r3, [pc, #48]	; (40075c <gfx_mono_ssd1306_mask_byte+0x3c>)
  40072c:	4798      	blx	r3
  40072e:	4602      	mov	r2, r0
	gfx_mono_color_t temp = gfx_mono_get_byte(page, column);

	switch (color) {
  400730:	2c01      	cmp	r4, #1
  400732:	d008      	beq.n	400746 <gfx_mono_ssd1306_mask_byte+0x26>
  400734:	b154      	cbz	r4, 40074c <gfx_mono_ssd1306_mask_byte+0x2c>
  400736:	2c02      	cmp	r4, #2
  400738:	d00c      	beq.n	400754 <gfx_mono_ssd1306_mask_byte+0x34>

	default:
		break;
	}

	gfx_mono_put_byte(page, column, temp);
  40073a:	2300      	movs	r3, #0
  40073c:	4631      	mov	r1, r6
  40073e:	4628      	mov	r0, r5
  400740:	4c07      	ldr	r4, [pc, #28]	; (400760 <gfx_mono_ssd1306_mask_byte+0x40>)
  400742:	47a0      	blx	r4
  400744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		temp |= pixel_mask;
  400746:	433a      	orrs	r2, r7
  400748:	b2d2      	uxtb	r2, r2
		break;
  40074a:	e7f6      	b.n	40073a <gfx_mono_ssd1306_mask_byte+0x1a>
		temp &= ~pixel_mask;
  40074c:	ea20 0207 	bic.w	r2, r0, r7
  400750:	b2d2      	uxtb	r2, r2
		break;
  400752:	e7f2      	b.n	40073a <gfx_mono_ssd1306_mask_byte+0x1a>
		temp ^= pixel_mask;
  400754:	407a      	eors	r2, r7
  400756:	b2d2      	uxtb	r2, r2
		break;
  400758:	e7ef      	b.n	40073a <gfx_mono_ssd1306_mask_byte+0x1a>
  40075a:	bf00      	nop
  40075c:	00400315 	.word	0x00400315
  400760:	00400611 	.word	0x00400611

00400764 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400764:	b538      	push	{r3, r4, r5, lr}
  400766:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400768:	2208      	movs	r2, #8
  40076a:	4b09      	ldr	r3, [pc, #36]	; (400790 <ssd1306_write_command+0x2c>)
  40076c:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40076e:	4c09      	ldr	r4, [pc, #36]	; (400794 <ssd1306_write_command+0x30>)
  400770:	2101      	movs	r1, #1
  400772:	4620      	mov	r0, r4
  400774:	4b08      	ldr	r3, [pc, #32]	; (400798 <ssd1306_write_command+0x34>)
  400776:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400778:	2301      	movs	r3, #1
  40077a:	461a      	mov	r2, r3
  40077c:	4629      	mov	r1, r5
  40077e:	4620      	mov	r0, r4
  400780:	4c06      	ldr	r4, [pc, #24]	; (40079c <ssd1306_write_command+0x38>)
  400782:	47a0      	blx	r4
	delay_us(10);
  400784:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400788:	4b05      	ldr	r3, [pc, #20]	; (4007a0 <ssd1306_write_command+0x3c>)
  40078a:	4798      	blx	r3
  40078c:	bd38      	pop	{r3, r4, r5, pc}
  40078e:	bf00      	nop
  400790:	400e1000 	.word	0x400e1000
  400794:	40008000 	.word	0x40008000
  400798:	004001d9 	.word	0x004001d9
  40079c:	004001ef 	.word	0x004001ef
  4007a0:	20400001 	.word	0x20400001

004007a4 <ssd1306_init>:
{
  4007a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007a8:	4d66      	ldr	r5, [pc, #408]	; (400944 <ssd1306_init+0x1a0>)
  4007aa:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4007ae:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007b0:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007b4:	4b64      	ldr	r3, [pc, #400]	; (400948 <ssd1306_init+0x1a4>)
  4007b6:	2708      	movs	r7, #8
  4007b8:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007ba:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4007be:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007c0:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007c4:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007c6:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4007c8:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4007cc:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  4007ce:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4007d2:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4007d4:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4007d6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4007da:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4007dc:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007de:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007e2:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007e4:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4007e6:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4007ea:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4007ec:	f022 0208 	bic.w	r2, r2, #8
  4007f0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4007f2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4007f4:	f022 0208 	bic.w	r2, r2, #8
  4007f8:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4007fa:	601f      	str	r7, [r3, #0]
  4007fc:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4007fe:	631f      	str	r7, [r3, #48]	; 0x30
  400800:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400802:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400980 <ssd1306_init+0x1dc>
  400806:	2300      	movs	r3, #0
  400808:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40080c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400810:	4640      	mov	r0, r8
  400812:	4c4e      	ldr	r4, [pc, #312]	; (40094c <ssd1306_init+0x1a8>)
  400814:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400816:	2300      	movs	r3, #0
  400818:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40081c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400820:	4640      	mov	r0, r8
  400822:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400824:	2300      	movs	r3, #0
  400826:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40082a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40082e:	4640      	mov	r0, r8
  400830:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400832:	2300      	movs	r3, #0
  400834:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400838:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40083c:	4640      	mov	r0, r8
  40083e:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400840:	2300      	movs	r3, #0
  400842:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400846:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40084a:	4640      	mov	r0, r8
  40084c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40084e:	2300      	movs	r3, #0
  400850:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400854:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400858:	4640      	mov	r0, r8
  40085a:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40085c:	4c3c      	ldr	r4, [pc, #240]	; (400950 <ssd1306_init+0x1ac>)
  40085e:	f04f 0902 	mov.w	r9, #2
  400862:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400866:	f04f 0880 	mov.w	r8, #128	; 0x80
  40086a:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40086e:	6863      	ldr	r3, [r4, #4]
  400870:	f043 0301 	orr.w	r3, r3, #1
  400874:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400876:	463a      	mov	r2, r7
  400878:	2101      	movs	r1, #1
  40087a:	4620      	mov	r0, r4
  40087c:	4b35      	ldr	r3, [pc, #212]	; (400954 <ssd1306_init+0x1b0>)
  40087e:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400880:	2200      	movs	r2, #0
  400882:	2101      	movs	r1, #1
  400884:	4620      	mov	r0, r4
  400886:	4b34      	ldr	r3, [pc, #208]	; (400958 <ssd1306_init+0x1b4>)
  400888:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  40088a:	2200      	movs	r2, #0
  40088c:	2101      	movs	r1, #1
  40088e:	4620      	mov	r0, r4
  400890:	4b32      	ldr	r3, [pc, #200]	; (40095c <ssd1306_init+0x1b8>)
  400892:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400894:	6863      	ldr	r3, [r4, #4]
  400896:	f023 0302 	bic.w	r3, r3, #2
  40089a:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  40089c:	2200      	movs	r2, #0
  40089e:	2101      	movs	r1, #1
  4008a0:	4620      	mov	r0, r4
  4008a2:	4b2f      	ldr	r3, [pc, #188]	; (400960 <ssd1306_init+0x1bc>)
  4008a4:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4008a6:	6863      	ldr	r3, [r4, #4]
  4008a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4008ac:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4008ae:	6863      	ldr	r3, [r4, #4]
  4008b0:	f043 0310 	orr.w	r3, r3, #16
  4008b4:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  4008b6:	492b      	ldr	r1, [pc, #172]	; (400964 <ssd1306_init+0x1c0>)
  4008b8:	482b      	ldr	r0, [pc, #172]	; (400968 <ssd1306_init+0x1c4>)
  4008ba:	4b2c      	ldr	r3, [pc, #176]	; (40096c <ssd1306_init+0x1c8>)
  4008bc:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  4008be:	b2c2      	uxtb	r2, r0
  4008c0:	2101      	movs	r1, #1
  4008c2:	4620      	mov	r0, r4
  4008c4:	4b2a      	ldr	r3, [pc, #168]	; (400970 <ssd1306_init+0x1cc>)
  4008c6:	4798      	blx	r3
		spi_enable_clock(SPI0);
  4008c8:	4620      	mov	r0, r4
  4008ca:	4b2a      	ldr	r3, [pc, #168]	; (400974 <ssd1306_init+0x1d0>)
  4008cc:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4008ce:	2301      	movs	r3, #1
  4008d0:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008d2:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  4008d4:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4008d8:	4c27      	ldr	r4, [pc, #156]	; (400978 <ssd1306_init+0x1d4>)
  4008da:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4008dc:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  4008de:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4008e2:	47a0      	blx	r4
  4008e4:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4008e6:	20a8      	movs	r0, #168	; 0xa8
  4008e8:	4c24      	ldr	r4, [pc, #144]	; (40097c <ssd1306_init+0x1d8>)
  4008ea:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4008ec:	201f      	movs	r0, #31
  4008ee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4008f0:	20d3      	movs	r0, #211	; 0xd3
  4008f2:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4008f4:	2000      	movs	r0, #0
  4008f6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4008f8:	2040      	movs	r0, #64	; 0x40
  4008fa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4008fc:	20a1      	movs	r0, #161	; 0xa1
  4008fe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400900:	20c8      	movs	r0, #200	; 0xc8
  400902:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400904:	20da      	movs	r0, #218	; 0xda
  400906:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400908:	4648      	mov	r0, r9
  40090a:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  40090c:	2081      	movs	r0, #129	; 0x81
  40090e:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400910:	208f      	movs	r0, #143	; 0x8f
  400912:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400914:	20a4      	movs	r0, #164	; 0xa4
  400916:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400918:	20a6      	movs	r0, #166	; 0xa6
  40091a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  40091c:	20d5      	movs	r0, #213	; 0xd5
  40091e:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400920:	4640      	mov	r0, r8
  400922:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400924:	208d      	movs	r0, #141	; 0x8d
  400926:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400928:	2014      	movs	r0, #20
  40092a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  40092c:	20db      	movs	r0, #219	; 0xdb
  40092e:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400930:	2040      	movs	r0, #64	; 0x40
  400932:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400934:	20d9      	movs	r0, #217	; 0xd9
  400936:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400938:	20f1      	movs	r0, #241	; 0xf1
  40093a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  40093c:	20af      	movs	r0, #175	; 0xaf
  40093e:	47a0      	blx	r4
  400940:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400944:	400e1200 	.word	0x400e1200
  400948:	400e1000 	.word	0x400e1000
  40094c:	00400c89 	.word	0x00400c89
  400950:	40008000 	.word	0x40008000
  400954:	0040025f 	.word	0x0040025f
  400958:	00400223 	.word	0x00400223
  40095c:	00400241 	.word	0x00400241
  400960:	004002a5 	.word	0x004002a5
  400964:	08f0d180 	.word	0x08f0d180
  400968:	001e8480 	.word	0x001e8480
  40096c:	004002b9 	.word	0x004002b9
  400970:	004002cf 	.word	0x004002cf
  400974:	004001ad 	.word	0x004001ad
  400978:	20400001 	.word	0x20400001
  40097c:	00400765 	.word	0x00400765
  400980:	400e1400 	.word	0x400e1400

00400984 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400984:	b538      	push	{r3, r4, r5, lr}
  400986:	4605      	mov	r5, r0
  400988:	2208      	movs	r2, #8
  40098a:	4b09      	ldr	r3, [pc, #36]	; (4009b0 <ssd1306_write_data+0x2c>)
  40098c:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40098e:	4c09      	ldr	r4, [pc, #36]	; (4009b4 <ssd1306_write_data+0x30>)
  400990:	2101      	movs	r1, #1
  400992:	4620      	mov	r0, r4
  400994:	4b08      	ldr	r3, [pc, #32]	; (4009b8 <ssd1306_write_data+0x34>)
  400996:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400998:	2301      	movs	r3, #1
  40099a:	461a      	mov	r2, r3
  40099c:	4629      	mov	r1, r5
  40099e:	4620      	mov	r0, r4
  4009a0:	4c06      	ldr	r4, [pc, #24]	; (4009bc <ssd1306_write_data+0x38>)
  4009a2:	47a0      	blx	r4
	delay_us(10);
  4009a4:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4009a8:	4b05      	ldr	r3, [pc, #20]	; (4009c0 <ssd1306_write_data+0x3c>)
  4009aa:	4798      	blx	r3
  4009ac:	bd38      	pop	{r3, r4, r5, pc}
  4009ae:	bf00      	nop
  4009b0:	400e1000 	.word	0x400e1000
  4009b4:	40008000 	.word	0x40008000
  4009b8:	004001d9 	.word	0x004001d9
  4009bc:	004001ef 	.word	0x004001ef
  4009c0:	20400001 	.word	0x20400001

004009c4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4009c4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4009c6:	4810      	ldr	r0, [pc, #64]	; (400a08 <sysclk_init+0x44>)
  4009c8:	4b10      	ldr	r3, [pc, #64]	; (400a0c <sysclk_init+0x48>)
  4009ca:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4009cc:	213e      	movs	r1, #62	; 0x3e
  4009ce:	2000      	movs	r0, #0
  4009d0:	4b0f      	ldr	r3, [pc, #60]	; (400a10 <sysclk_init+0x4c>)
  4009d2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4009d4:	4c0f      	ldr	r4, [pc, #60]	; (400a14 <sysclk_init+0x50>)
  4009d6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4009d8:	2800      	cmp	r0, #0
  4009da:	d0fc      	beq.n	4009d6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4009dc:	4b0e      	ldr	r3, [pc, #56]	; (400a18 <sysclk_init+0x54>)
  4009de:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4009e0:	4a0e      	ldr	r2, [pc, #56]	; (400a1c <sysclk_init+0x58>)
  4009e2:	4b0f      	ldr	r3, [pc, #60]	; (400a20 <sysclk_init+0x5c>)
  4009e4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4009e6:	4c0f      	ldr	r4, [pc, #60]	; (400a24 <sysclk_init+0x60>)
  4009e8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4009ea:	2800      	cmp	r0, #0
  4009ec:	d0fc      	beq.n	4009e8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4009ee:	2002      	movs	r0, #2
  4009f0:	4b0d      	ldr	r3, [pc, #52]	; (400a28 <sysclk_init+0x64>)
  4009f2:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4009f4:	2000      	movs	r0, #0
  4009f6:	4b0d      	ldr	r3, [pc, #52]	; (400a2c <sysclk_init+0x68>)
  4009f8:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4009fa:	4b0d      	ldr	r3, [pc, #52]	; (400a30 <sysclk_init+0x6c>)
  4009fc:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4009fe:	4802      	ldr	r0, [pc, #8]	; (400a08 <sysclk_init+0x44>)
  400a00:	4b02      	ldr	r3, [pc, #8]	; (400a0c <sysclk_init+0x48>)
  400a02:	4798      	blx	r3
  400a04:	bd10      	pop	{r4, pc}
  400a06:	bf00      	nop
  400a08:	11e1a300 	.word	0x11e1a300
  400a0c:	0040148d 	.word	0x0040148d
  400a10:	00400f19 	.word	0x00400f19
  400a14:	00400f6d 	.word	0x00400f6d
  400a18:	00400f7d 	.word	0x00400f7d
  400a1c:	20183f01 	.word	0x20183f01
  400a20:	400e0600 	.word	0x400e0600
  400a24:	00400f8d 	.word	0x00400f8d
  400a28:	00400e7d 	.word	0x00400e7d
  400a2c:	00400eb5 	.word	0x00400eb5
  400a30:	00401381 	.word	0x00401381

00400a34 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400a36:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400a3a:	4b48      	ldr	r3, [pc, #288]	; (400b5c <board_init+0x128>)
  400a3c:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400a3e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a42:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400a46:	4b46      	ldr	r3, [pc, #280]	; (400b60 <board_init+0x12c>)
  400a48:	2200      	movs	r2, #0
  400a4a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400a4e:	695a      	ldr	r2, [r3, #20]
  400a50:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400a54:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400a56:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a5a:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400a5e:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400a62:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400a66:	f007 0007 	and.w	r0, r7, #7
  400a6a:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400a6c:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400a70:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400a74:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400a78:	f3bf 8f4f 	dsb	sy
  400a7c:	f04f 34ff 	mov.w	r4, #4294967295
  400a80:	fa04 fc00 	lsl.w	ip, r4, r0
  400a84:	fa06 f000 	lsl.w	r0, r6, r0
  400a88:	fa04 f40e 	lsl.w	r4, r4, lr
  400a8c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a90:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a92:	463a      	mov	r2, r7
  400a94:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a96:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a9a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a9e:	3a01      	subs	r2, #1
  400aa0:	4423      	add	r3, r4
  400aa2:	f1b2 3fff 	cmp.w	r2, #4294967295
  400aa6:	d1f6      	bne.n	400a96 <board_init+0x62>
        } while(sets--);
  400aa8:	3e01      	subs	r6, #1
  400aaa:	4460      	add	r0, ip
  400aac:	f1b6 3fff 	cmp.w	r6, #4294967295
  400ab0:	d1ef      	bne.n	400a92 <board_init+0x5e>
  400ab2:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400ab6:	4b2a      	ldr	r3, [pc, #168]	; (400b60 <board_init+0x12c>)
  400ab8:	695a      	ldr	r2, [r3, #20]
  400aba:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400abe:	615a      	str	r2, [r3, #20]
  400ac0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ac4:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400ac8:	4a26      	ldr	r2, [pc, #152]	; (400b64 <board_init+0x130>)
  400aca:	4927      	ldr	r1, [pc, #156]	; (400b68 <board_init+0x134>)
  400acc:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400ace:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400ad2:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400ad4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ad8:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400adc:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400ae0:	f022 0201 	bic.w	r2, r2, #1
  400ae4:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400ae8:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400aec:	f022 0201 	bic.w	r2, r2, #1
  400af0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400af4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400af8:	f3bf 8f6f 	isb	sy
  400afc:	200a      	movs	r0, #10
  400afe:	4c1b      	ldr	r4, [pc, #108]	; (400b6c <board_init+0x138>)
  400b00:	47a0      	blx	r4
  400b02:	200b      	movs	r0, #11
  400b04:	47a0      	blx	r4
  400b06:	200c      	movs	r0, #12
  400b08:	47a0      	blx	r4
  400b0a:	2010      	movs	r0, #16
  400b0c:	47a0      	blx	r4
  400b0e:	2011      	movs	r0, #17
  400b10:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400b12:	4b17      	ldr	r3, [pc, #92]	; (400b70 <board_init+0x13c>)
  400b14:	f44f 7280 	mov.w	r2, #256	; 0x100
  400b18:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b1a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400b1e:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400b20:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400b24:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b28:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b2a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400b2e:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400b30:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b34:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400b36:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400b38:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400b3c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400b3e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b42:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b44:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400b46:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b4a:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400b4c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400b50:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400b54:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400b5a:	bf00      	nop
  400b5c:	400e1850 	.word	0x400e1850
  400b60:	e000ed00 	.word	0xe000ed00
  400b64:	400e0c00 	.word	0x400e0c00
  400b68:	5a00080c 	.word	0x5a00080c
  400b6c:	00400f9d 	.word	0x00400f9d
  400b70:	400e1200 	.word	0x400e1200

00400b74 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400b74:	6301      	str	r1, [r0, #48]	; 0x30
  400b76:	4770      	bx	lr

00400b78 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400b78:	6341      	str	r1, [r0, #52]	; 0x34
  400b7a:	4770      	bx	lr

00400b7c <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400b7c:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400b80:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b84:	d105      	bne.n	400b92 <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400b86:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400b88:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400b8a:	bf14      	ite	ne
  400b8c:	2001      	movne	r0, #1
  400b8e:	2000      	moveq	r0, #0
  400b90:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400b92:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400b94:	e7f8      	b.n	400b88 <pio_get+0xc>

00400b96 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400b96:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400b98:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400b9c:	d03a      	beq.n	400c14 <pio_set_peripheral+0x7e>
  400b9e:	d813      	bhi.n	400bc8 <pio_set_peripheral+0x32>
  400ba0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400ba4:	d025      	beq.n	400bf2 <pio_set_peripheral+0x5c>
  400ba6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400baa:	d10a      	bne.n	400bc2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bac:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400bae:	4313      	orrs	r3, r2
  400bb0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400bb2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bb4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400bb6:	400b      	ands	r3, r1
  400bb8:	ea23 0302 	bic.w	r3, r3, r2
  400bbc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400bbe:	6042      	str	r2, [r0, #4]
  400bc0:	4770      	bx	lr
	switch (ul_type) {
  400bc2:	2900      	cmp	r1, #0
  400bc4:	d1fb      	bne.n	400bbe <pio_set_peripheral+0x28>
  400bc6:	4770      	bx	lr
  400bc8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400bcc:	d021      	beq.n	400c12 <pio_set_peripheral+0x7c>
  400bce:	d809      	bhi.n	400be4 <pio_set_peripheral+0x4e>
  400bd0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400bd4:	d1f3      	bne.n	400bbe <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bd6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400bd8:	4313      	orrs	r3, r2
  400bda:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400bdc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400bde:	4313      	orrs	r3, r2
  400be0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400be2:	e7ec      	b.n	400bbe <pio_set_peripheral+0x28>
	switch (ul_type) {
  400be4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400be8:	d013      	beq.n	400c12 <pio_set_peripheral+0x7c>
  400bea:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400bee:	d010      	beq.n	400c12 <pio_set_peripheral+0x7c>
  400bf0:	e7e5      	b.n	400bbe <pio_set_peripheral+0x28>
{
  400bf2:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400bf4:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400bf6:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400bf8:	43d3      	mvns	r3, r2
  400bfa:	4021      	ands	r1, r4
  400bfc:	461c      	mov	r4, r3
  400bfe:	4019      	ands	r1, r3
  400c00:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c02:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c04:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c06:	400b      	ands	r3, r1
  400c08:	4023      	ands	r3, r4
  400c0a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400c0c:	6042      	str	r2, [r0, #4]
}
  400c0e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c12:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c14:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c16:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400c18:	400b      	ands	r3, r1
  400c1a:	ea23 0302 	bic.w	r3, r3, r2
  400c1e:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c20:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c22:	4313      	orrs	r3, r2
  400c24:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c26:	e7ca      	b.n	400bbe <pio_set_peripheral+0x28>

00400c28 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400c28:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c2a:	f012 0f01 	tst.w	r2, #1
  400c2e:	d10d      	bne.n	400c4c <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400c30:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400c32:	f012 0f0a 	tst.w	r2, #10
  400c36:	d00b      	beq.n	400c50 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400c38:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400c3a:	f012 0f02 	tst.w	r2, #2
  400c3e:	d109      	bne.n	400c54 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400c40:	f012 0f08 	tst.w	r2, #8
  400c44:	d008      	beq.n	400c58 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400c46:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400c4a:	e005      	b.n	400c58 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400c4c:	6641      	str	r1, [r0, #100]	; 0x64
  400c4e:	e7f0      	b.n	400c32 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400c50:	6241      	str	r1, [r0, #36]	; 0x24
  400c52:	e7f2      	b.n	400c3a <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400c54:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400c58:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400c5a:	6001      	str	r1, [r0, #0]
  400c5c:	4770      	bx	lr

00400c5e <pio_set_output>:
{
  400c5e:	b410      	push	{r4}
  400c60:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400c62:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c64:	b94c      	cbnz	r4, 400c7a <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400c66:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400c68:	b14b      	cbz	r3, 400c7e <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400c6a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400c6c:	b94a      	cbnz	r2, 400c82 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400c6e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400c70:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400c72:	6001      	str	r1, [r0, #0]
}
  400c74:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c78:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400c7a:	6641      	str	r1, [r0, #100]	; 0x64
  400c7c:	e7f4      	b.n	400c68 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400c7e:	6541      	str	r1, [r0, #84]	; 0x54
  400c80:	e7f4      	b.n	400c6c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400c82:	6301      	str	r1, [r0, #48]	; 0x30
  400c84:	e7f4      	b.n	400c70 <pio_set_output+0x12>
	...

00400c88 <pio_configure>:
{
  400c88:	b570      	push	{r4, r5, r6, lr}
  400c8a:	b082      	sub	sp, #8
  400c8c:	4605      	mov	r5, r0
  400c8e:	4616      	mov	r6, r2
  400c90:	461c      	mov	r4, r3
	switch (ul_type) {
  400c92:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c96:	d014      	beq.n	400cc2 <pio_configure+0x3a>
  400c98:	d90a      	bls.n	400cb0 <pio_configure+0x28>
  400c9a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c9e:	d024      	beq.n	400cea <pio_configure+0x62>
  400ca0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ca4:	d021      	beq.n	400cea <pio_configure+0x62>
  400ca6:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400caa:	d017      	beq.n	400cdc <pio_configure+0x54>
		return 0;
  400cac:	2000      	movs	r0, #0
  400cae:	e01a      	b.n	400ce6 <pio_configure+0x5e>
	switch (ul_type) {
  400cb0:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400cb4:	d005      	beq.n	400cc2 <pio_configure+0x3a>
  400cb6:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cba:	d002      	beq.n	400cc2 <pio_configure+0x3a>
  400cbc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cc0:	d1f4      	bne.n	400cac <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400cc2:	4632      	mov	r2, r6
  400cc4:	4628      	mov	r0, r5
  400cc6:	4b11      	ldr	r3, [pc, #68]	; (400d0c <pio_configure+0x84>)
  400cc8:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400cca:	f014 0f01 	tst.w	r4, #1
  400cce:	d102      	bne.n	400cd6 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400cd0:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400cd2:	2001      	movs	r0, #1
  400cd4:	e007      	b.n	400ce6 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400cd6:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400cd8:	2001      	movs	r0, #1
  400cda:	e004      	b.n	400ce6 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400cdc:	461a      	mov	r2, r3
  400cde:	4631      	mov	r1, r6
  400ce0:	4b0b      	ldr	r3, [pc, #44]	; (400d10 <pio_configure+0x88>)
  400ce2:	4798      	blx	r3
	return 1;
  400ce4:	2001      	movs	r0, #1
}
  400ce6:	b002      	add	sp, #8
  400ce8:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400cea:	f004 0301 	and.w	r3, r4, #1
  400cee:	9300      	str	r3, [sp, #0]
  400cf0:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400cf4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400cf8:	bf14      	ite	ne
  400cfa:	2200      	movne	r2, #0
  400cfc:	2201      	moveq	r2, #1
  400cfe:	4631      	mov	r1, r6
  400d00:	4628      	mov	r0, r5
  400d02:	4c04      	ldr	r4, [pc, #16]	; (400d14 <pio_configure+0x8c>)
  400d04:	47a0      	blx	r4
	return 1;
  400d06:	2001      	movs	r0, #1
		break;
  400d08:	e7ed      	b.n	400ce6 <pio_configure+0x5e>
  400d0a:	bf00      	nop
  400d0c:	00400b97 	.word	0x00400b97
  400d10:	00400c29 	.word	0x00400c29
  400d14:	00400c5f 	.word	0x00400c5f

00400d18 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400d18:	f012 0f10 	tst.w	r2, #16
  400d1c:	d012      	beq.n	400d44 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400d1e:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400d22:	f012 0f20 	tst.w	r2, #32
  400d26:	d007      	beq.n	400d38 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400d28:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400d2c:	f012 0f40 	tst.w	r2, #64	; 0x40
  400d30:	d005      	beq.n	400d3e <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400d32:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400d36:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400d38:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400d3c:	e7f6      	b.n	400d2c <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400d3e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400d42:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400d44:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400d48:	4770      	bx	lr

00400d4a <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400d4a:	6401      	str	r1, [r0, #64]	; 0x40
  400d4c:	4770      	bx	lr

00400d4e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400d4e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400d50:	4770      	bx	lr

00400d52 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400d52:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400d54:	4770      	bx	lr
	...

00400d58 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400d58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400d5c:	4604      	mov	r4, r0
  400d5e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400d60:	4b0e      	ldr	r3, [pc, #56]	; (400d9c <pio_handler_process+0x44>)
  400d62:	4798      	blx	r3
  400d64:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400d66:	4620      	mov	r0, r4
  400d68:	4b0d      	ldr	r3, [pc, #52]	; (400da0 <pio_handler_process+0x48>)
  400d6a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400d6c:	4005      	ands	r5, r0
  400d6e:	d013      	beq.n	400d98 <pio_handler_process+0x40>
  400d70:	4c0c      	ldr	r4, [pc, #48]	; (400da4 <pio_handler_process+0x4c>)
  400d72:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400d76:	e003      	b.n	400d80 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400d78:	42b4      	cmp	r4, r6
  400d7a:	d00d      	beq.n	400d98 <pio_handler_process+0x40>
  400d7c:	3410      	adds	r4, #16
		while (status != 0) {
  400d7e:	b15d      	cbz	r5, 400d98 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400d80:	6820      	ldr	r0, [r4, #0]
  400d82:	4540      	cmp	r0, r8
  400d84:	d1f8      	bne.n	400d78 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400d86:	6861      	ldr	r1, [r4, #4]
  400d88:	4229      	tst	r1, r5
  400d8a:	d0f5      	beq.n	400d78 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400d8c:	68e3      	ldr	r3, [r4, #12]
  400d8e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400d90:	6863      	ldr	r3, [r4, #4]
  400d92:	ea25 0503 	bic.w	r5, r5, r3
  400d96:	e7ef      	b.n	400d78 <pio_handler_process+0x20>
  400d98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d9c:	00400d4f 	.word	0x00400d4f
  400da0:	00400d53 	.word	0x00400d53
  400da4:	20400bf0 	.word	0x20400bf0

00400da8 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400da8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400daa:	4c18      	ldr	r4, [pc, #96]	; (400e0c <pio_handler_set+0x64>)
  400dac:	6826      	ldr	r6, [r4, #0]
  400dae:	2e06      	cmp	r6, #6
  400db0:	d82a      	bhi.n	400e08 <pio_handler_set+0x60>
  400db2:	f04f 0c00 	mov.w	ip, #0
  400db6:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400db8:	4f15      	ldr	r7, [pc, #84]	; (400e10 <pio_handler_set+0x68>)
  400dba:	e004      	b.n	400dc6 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400dbc:	3401      	adds	r4, #1
  400dbe:	b2e4      	uxtb	r4, r4
  400dc0:	46a4      	mov	ip, r4
  400dc2:	42a6      	cmp	r6, r4
  400dc4:	d309      	bcc.n	400dda <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400dc6:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400dc8:	0125      	lsls	r5, r4, #4
  400dca:	597d      	ldr	r5, [r7, r5]
  400dcc:	428d      	cmp	r5, r1
  400dce:	d1f5      	bne.n	400dbc <pio_handler_set+0x14>
  400dd0:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400dd4:	686d      	ldr	r5, [r5, #4]
  400dd6:	4295      	cmp	r5, r2
  400dd8:	d1f0      	bne.n	400dbc <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400dda:	4d0d      	ldr	r5, [pc, #52]	; (400e10 <pio_handler_set+0x68>)
  400ddc:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400de0:	eb05 040e 	add.w	r4, r5, lr
  400de4:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400de8:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400dea:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400dec:	9906      	ldr	r1, [sp, #24]
  400dee:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400df0:	3601      	adds	r6, #1
  400df2:	4566      	cmp	r6, ip
  400df4:	d005      	beq.n	400e02 <pio_handler_set+0x5a>
  400df6:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400df8:	461a      	mov	r2, r3
  400dfa:	4b06      	ldr	r3, [pc, #24]	; (400e14 <pio_handler_set+0x6c>)
  400dfc:	4798      	blx	r3

	return 0;
  400dfe:	2000      	movs	r0, #0
  400e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400e02:	4902      	ldr	r1, [pc, #8]	; (400e0c <pio_handler_set+0x64>)
  400e04:	600e      	str	r6, [r1, #0]
  400e06:	e7f6      	b.n	400df6 <pio_handler_set+0x4e>
		return 1;
  400e08:	2001      	movs	r0, #1
}
  400e0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e0c:	20400c60 	.word	0x20400c60
  400e10:	20400bf0 	.word	0x20400bf0
  400e14:	00400d19 	.word	0x00400d19

00400e18 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e18:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e1a:	210a      	movs	r1, #10
  400e1c:	4801      	ldr	r0, [pc, #4]	; (400e24 <PIOA_Handler+0xc>)
  400e1e:	4b02      	ldr	r3, [pc, #8]	; (400e28 <PIOA_Handler+0x10>)
  400e20:	4798      	blx	r3
  400e22:	bd08      	pop	{r3, pc}
  400e24:	400e0e00 	.word	0x400e0e00
  400e28:	00400d59 	.word	0x00400d59

00400e2c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e2c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e2e:	210b      	movs	r1, #11
  400e30:	4801      	ldr	r0, [pc, #4]	; (400e38 <PIOB_Handler+0xc>)
  400e32:	4b02      	ldr	r3, [pc, #8]	; (400e3c <PIOB_Handler+0x10>)
  400e34:	4798      	blx	r3
  400e36:	bd08      	pop	{r3, pc}
  400e38:	400e1000 	.word	0x400e1000
  400e3c:	00400d59 	.word	0x00400d59

00400e40 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400e40:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400e42:	210c      	movs	r1, #12
  400e44:	4801      	ldr	r0, [pc, #4]	; (400e4c <PIOC_Handler+0xc>)
  400e46:	4b02      	ldr	r3, [pc, #8]	; (400e50 <PIOC_Handler+0x10>)
  400e48:	4798      	blx	r3
  400e4a:	bd08      	pop	{r3, pc}
  400e4c:	400e1200 	.word	0x400e1200
  400e50:	00400d59 	.word	0x00400d59

00400e54 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400e54:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400e56:	2110      	movs	r1, #16
  400e58:	4801      	ldr	r0, [pc, #4]	; (400e60 <PIOD_Handler+0xc>)
  400e5a:	4b02      	ldr	r3, [pc, #8]	; (400e64 <PIOD_Handler+0x10>)
  400e5c:	4798      	blx	r3
  400e5e:	bd08      	pop	{r3, pc}
  400e60:	400e1400 	.word	0x400e1400
  400e64:	00400d59 	.word	0x00400d59

00400e68 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400e68:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400e6a:	2111      	movs	r1, #17
  400e6c:	4801      	ldr	r0, [pc, #4]	; (400e74 <PIOE_Handler+0xc>)
  400e6e:	4b02      	ldr	r3, [pc, #8]	; (400e78 <PIOE_Handler+0x10>)
  400e70:	4798      	blx	r3
  400e72:	bd08      	pop	{r3, pc}
  400e74:	400e1600 	.word	0x400e1600
  400e78:	00400d59 	.word	0x00400d59

00400e7c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400e7c:	2803      	cmp	r0, #3
  400e7e:	d011      	beq.n	400ea4 <pmc_mck_set_division+0x28>
  400e80:	2804      	cmp	r0, #4
  400e82:	d012      	beq.n	400eaa <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400e84:	2802      	cmp	r0, #2
  400e86:	bf0c      	ite	eq
  400e88:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400e8c:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400e8e:	4a08      	ldr	r2, [pc, #32]	; (400eb0 <pmc_mck_set_division+0x34>)
  400e90:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e92:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400e96:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400e98:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400e9a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e9c:	f013 0f08 	tst.w	r3, #8
  400ea0:	d0fb      	beq.n	400e9a <pmc_mck_set_division+0x1e>
}
  400ea2:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400ea4:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400ea8:	e7f1      	b.n	400e8e <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400eaa:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400eae:	e7ee      	b.n	400e8e <pmc_mck_set_division+0x12>
  400eb0:	400e0600 	.word	0x400e0600

00400eb4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400eb4:	4a17      	ldr	r2, [pc, #92]	; (400f14 <pmc_switch_mck_to_pllack+0x60>)
  400eb6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400eb8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400ebc:	4318      	orrs	r0, r3
  400ebe:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ec0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ec2:	f013 0f08 	tst.w	r3, #8
  400ec6:	d10a      	bne.n	400ede <pmc_switch_mck_to_pllack+0x2a>
  400ec8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ecc:	4911      	ldr	r1, [pc, #68]	; (400f14 <pmc_switch_mck_to_pllack+0x60>)
  400ece:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400ed0:	f012 0f08 	tst.w	r2, #8
  400ed4:	d103      	bne.n	400ede <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ed6:	3b01      	subs	r3, #1
  400ed8:	d1f9      	bne.n	400ece <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400eda:	2001      	movs	r0, #1
  400edc:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400ede:	4a0d      	ldr	r2, [pc, #52]	; (400f14 <pmc_switch_mck_to_pllack+0x60>)
  400ee0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ee2:	f023 0303 	bic.w	r3, r3, #3
  400ee6:	f043 0302 	orr.w	r3, r3, #2
  400eea:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400eec:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400eee:	f013 0f08 	tst.w	r3, #8
  400ef2:	d10a      	bne.n	400f0a <pmc_switch_mck_to_pllack+0x56>
  400ef4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ef8:	4906      	ldr	r1, [pc, #24]	; (400f14 <pmc_switch_mck_to_pllack+0x60>)
  400efa:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400efc:	f012 0f08 	tst.w	r2, #8
  400f00:	d105      	bne.n	400f0e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f02:	3b01      	subs	r3, #1
  400f04:	d1f9      	bne.n	400efa <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400f06:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400f08:	4770      	bx	lr
	return 0;
  400f0a:	2000      	movs	r0, #0
  400f0c:	4770      	bx	lr
  400f0e:	2000      	movs	r0, #0
  400f10:	4770      	bx	lr
  400f12:	bf00      	nop
  400f14:	400e0600 	.word	0x400e0600

00400f18 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400f18:	b9a0      	cbnz	r0, 400f44 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f1a:	480e      	ldr	r0, [pc, #56]	; (400f54 <pmc_switch_mainck_to_xtal+0x3c>)
  400f1c:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400f1e:	0209      	lsls	r1, r1, #8
  400f20:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400f22:	4a0d      	ldr	r2, [pc, #52]	; (400f58 <pmc_switch_mainck_to_xtal+0x40>)
  400f24:	401a      	ands	r2, r3
  400f26:	4b0d      	ldr	r3, [pc, #52]	; (400f5c <pmc_switch_mainck_to_xtal+0x44>)
  400f28:	4313      	orrs	r3, r2
  400f2a:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f2c:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400f2e:	4602      	mov	r2, r0
  400f30:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f32:	f013 0f01 	tst.w	r3, #1
  400f36:	d0fb      	beq.n	400f30 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400f38:	4a06      	ldr	r2, [pc, #24]	; (400f54 <pmc_switch_mainck_to_xtal+0x3c>)
  400f3a:	6a11      	ldr	r1, [r2, #32]
  400f3c:	4b08      	ldr	r3, [pc, #32]	; (400f60 <pmc_switch_mainck_to_xtal+0x48>)
  400f3e:	430b      	orrs	r3, r1
  400f40:	6213      	str	r3, [r2, #32]
  400f42:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f44:	4903      	ldr	r1, [pc, #12]	; (400f54 <pmc_switch_mainck_to_xtal+0x3c>)
  400f46:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400f48:	4a06      	ldr	r2, [pc, #24]	; (400f64 <pmc_switch_mainck_to_xtal+0x4c>)
  400f4a:	401a      	ands	r2, r3
  400f4c:	4b06      	ldr	r3, [pc, #24]	; (400f68 <pmc_switch_mainck_to_xtal+0x50>)
  400f4e:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f50:	620b      	str	r3, [r1, #32]
  400f52:	4770      	bx	lr
  400f54:	400e0600 	.word	0x400e0600
  400f58:	ffc8fffc 	.word	0xffc8fffc
  400f5c:	00370001 	.word	0x00370001
  400f60:	01370000 	.word	0x01370000
  400f64:	fec8fffc 	.word	0xfec8fffc
  400f68:	01370002 	.word	0x01370002

00400f6c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400f6c:	4b02      	ldr	r3, [pc, #8]	; (400f78 <pmc_osc_is_ready_mainck+0xc>)
  400f6e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f70:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400f74:	4770      	bx	lr
  400f76:	bf00      	nop
  400f78:	400e0600 	.word	0x400e0600

00400f7c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400f7c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400f80:	4b01      	ldr	r3, [pc, #4]	; (400f88 <pmc_disable_pllack+0xc>)
  400f82:	629a      	str	r2, [r3, #40]	; 0x28
  400f84:	4770      	bx	lr
  400f86:	bf00      	nop
  400f88:	400e0600 	.word	0x400e0600

00400f8c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400f8c:	4b02      	ldr	r3, [pc, #8]	; (400f98 <pmc_is_locked_pllack+0xc>)
  400f8e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f90:	f000 0002 	and.w	r0, r0, #2
  400f94:	4770      	bx	lr
  400f96:	bf00      	nop
  400f98:	400e0600 	.word	0x400e0600

00400f9c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f9c:	283f      	cmp	r0, #63	; 0x3f
  400f9e:	d81e      	bhi.n	400fde <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400fa0:	281f      	cmp	r0, #31
  400fa2:	d80c      	bhi.n	400fbe <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400fa4:	4b11      	ldr	r3, [pc, #68]	; (400fec <pmc_enable_periph_clk+0x50>)
  400fa6:	699a      	ldr	r2, [r3, #24]
  400fa8:	2301      	movs	r3, #1
  400faa:	4083      	lsls	r3, r0
  400fac:	4393      	bics	r3, r2
  400fae:	d018      	beq.n	400fe2 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400fb0:	2301      	movs	r3, #1
  400fb2:	fa03 f000 	lsl.w	r0, r3, r0
  400fb6:	4b0d      	ldr	r3, [pc, #52]	; (400fec <pmc_enable_periph_clk+0x50>)
  400fb8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400fba:	2000      	movs	r0, #0
  400fbc:	4770      	bx	lr
		ul_id -= 32;
  400fbe:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400fc0:	4b0a      	ldr	r3, [pc, #40]	; (400fec <pmc_enable_periph_clk+0x50>)
  400fc2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400fc6:	2301      	movs	r3, #1
  400fc8:	4083      	lsls	r3, r0
  400fca:	4393      	bics	r3, r2
  400fcc:	d00b      	beq.n	400fe6 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400fce:	2301      	movs	r3, #1
  400fd0:	fa03 f000 	lsl.w	r0, r3, r0
  400fd4:	4b05      	ldr	r3, [pc, #20]	; (400fec <pmc_enable_periph_clk+0x50>)
  400fd6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400fda:	2000      	movs	r0, #0
  400fdc:	4770      	bx	lr
		return 1;
  400fde:	2001      	movs	r0, #1
  400fe0:	4770      	bx	lr
	return 0;
  400fe2:	2000      	movs	r0, #0
  400fe4:	4770      	bx	lr
  400fe6:	2000      	movs	r0, #0
}
  400fe8:	4770      	bx	lr
  400fea:	bf00      	nop
  400fec:	400e0600 	.word	0x400e0600

00400ff0 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400ff0:	4770      	bx	lr
	...

00400ff4 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400ff4:	4a10      	ldr	r2, [pc, #64]	; (401038 <pmc_enable_waitmode+0x44>)
  400ff6:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400ff8:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400ffc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401000:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  401002:	6a11      	ldr	r1, [r2, #32]
  401004:	4b0d      	ldr	r3, [pc, #52]	; (40103c <pmc_enable_waitmode+0x48>)
  401006:	430b      	orrs	r3, r1
  401008:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40100a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40100c:	f013 0f08 	tst.w	r3, #8
  401010:	d0fb      	beq.n	40100a <pmc_enable_waitmode+0x16>
  401012:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  401016:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401018:	3b01      	subs	r3, #1
  40101a:	d1fc      	bne.n	401016 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  40101c:	4a06      	ldr	r2, [pc, #24]	; (401038 <pmc_enable_waitmode+0x44>)
  40101e:	6a13      	ldr	r3, [r2, #32]
  401020:	f013 0f08 	tst.w	r3, #8
  401024:	d0fb      	beq.n	40101e <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  401026:	4a04      	ldr	r2, [pc, #16]	; (401038 <pmc_enable_waitmode+0x44>)
  401028:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  40102a:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  40102e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  401032:	6713      	str	r3, [r2, #112]	; 0x70
  401034:	4770      	bx	lr
  401036:	bf00      	nop
  401038:	400e0600 	.word	0x400e0600
  40103c:	00370004 	.word	0x00370004

00401040 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401040:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401044:	1e43      	subs	r3, r0, #1
  401046:	2b04      	cmp	r3, #4
  401048:	f200 8107 	bhi.w	40125a <pmc_sleep+0x21a>
  40104c:	e8df f013 	tbh	[pc, r3, lsl #1]
  401050:	00050005 	.word	0x00050005
  401054:	00150015 	.word	0x00150015
  401058:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  40105a:	4a81      	ldr	r2, [pc, #516]	; (401260 <pmc_sleep+0x220>)
  40105c:	6913      	ldr	r3, [r2, #16]
  40105e:	f023 0304 	bic.w	r3, r3, #4
  401062:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401064:	2201      	movs	r2, #1
  401066:	4b7f      	ldr	r3, [pc, #508]	; (401264 <pmc_sleep+0x224>)
  401068:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40106a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40106e:	b662      	cpsie	i
  __ASM volatile ("dsb");
  401070:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  401074:	bf30      	wfi
  401076:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40107a:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  40107c:	2803      	cmp	r0, #3
  40107e:	bf0c      	ite	eq
  401080:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  401082:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  401086:	4b78      	ldr	r3, [pc, #480]	; (401268 <pmc_sleep+0x228>)
  401088:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  40108a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40108c:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401090:	2200      	movs	r2, #0
  401092:	4b74      	ldr	r3, [pc, #464]	; (401264 <pmc_sleep+0x224>)
  401094:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  401096:	2201      	movs	r2, #1
  401098:	4b74      	ldr	r3, [pc, #464]	; (40126c <pmc_sleep+0x22c>)
  40109a:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  40109c:	4b74      	ldr	r3, [pc, #464]	; (401270 <pmc_sleep+0x230>)
  40109e:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  4010a0:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  4010a2:	4a74      	ldr	r2, [pc, #464]	; (401274 <pmc_sleep+0x234>)
  4010a4:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4010a8:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4010aa:	4a73      	ldr	r2, [pc, #460]	; (401278 <pmc_sleep+0x238>)
  4010ac:	433a      	orrs	r2, r7
  4010ae:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4010b0:	f005 0903 	and.w	r9, r5, #3
  4010b4:	f1b9 0f01 	cmp.w	r9, #1
  4010b8:	f240 8089 	bls.w	4011ce <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4010bc:	f025 0103 	bic.w	r1, r5, #3
  4010c0:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4010c4:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010c6:	461a      	mov	r2, r3
  4010c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010ca:	f013 0f08 	tst.w	r3, #8
  4010ce:	d0fb      	beq.n	4010c8 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  4010d0:	f011 0f70 	tst.w	r1, #112	; 0x70
  4010d4:	d008      	beq.n	4010e8 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  4010d6:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  4010da:	4b65      	ldr	r3, [pc, #404]	; (401270 <pmc_sleep+0x230>)
  4010dc:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010de:	461a      	mov	r2, r3
  4010e0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010e2:	f013 0f08 	tst.w	r3, #8
  4010e6:	d0fb      	beq.n	4010e0 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  4010e8:	4b64      	ldr	r3, [pc, #400]	; (40127c <pmc_sleep+0x23c>)
  4010ea:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4010ec:	4a60      	ldr	r2, [pc, #384]	; (401270 <pmc_sleep+0x230>)
  4010ee:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010f0:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4010f4:	d0fb      	beq.n	4010ee <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4010f6:	4a5e      	ldr	r2, [pc, #376]	; (401270 <pmc_sleep+0x230>)
  4010f8:	6a11      	ldr	r1, [r2, #32]
  4010fa:	4b61      	ldr	r3, [pc, #388]	; (401280 <pmc_sleep+0x240>)
  4010fc:	400b      	ands	r3, r1
  4010fe:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401102:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401104:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401106:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40110a:	d0fb      	beq.n	401104 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  40110c:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401110:	4a58      	ldr	r2, [pc, #352]	; (401274 <pmc_sleep+0x234>)
  401112:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401114:	2c04      	cmp	r4, #4
  401116:	d05c      	beq.n	4011d2 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401118:	4c52      	ldr	r4, [pc, #328]	; (401264 <pmc_sleep+0x224>)
  40111a:	2301      	movs	r3, #1
  40111c:	7023      	strb	r3, [r4, #0]
  40111e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401122:	b662      	cpsie	i

		pmc_enable_waitmode();
  401124:	4b57      	ldr	r3, [pc, #348]	; (401284 <pmc_sleep+0x244>)
  401126:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401128:	b672      	cpsid	i
  40112a:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  40112e:	2300      	movs	r3, #0
  401130:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401132:	f017 0f02 	tst.w	r7, #2
  401136:	d055      	beq.n	4011e4 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401138:	4a4d      	ldr	r2, [pc, #308]	; (401270 <pmc_sleep+0x230>)
  40113a:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40113c:	4952      	ldr	r1, [pc, #328]	; (401288 <pmc_sleep+0x248>)
  40113e:	4019      	ands	r1, r3
  401140:	4b52      	ldr	r3, [pc, #328]	; (40128c <pmc_sleep+0x24c>)
  401142:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401144:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401146:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401148:	4b51      	ldr	r3, [pc, #324]	; (401290 <pmc_sleep+0x250>)
  40114a:	400b      	ands	r3, r1
  40114c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401150:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401152:	4b50      	ldr	r3, [pc, #320]	; (401294 <pmc_sleep+0x254>)
  401154:	4033      	ands	r3, r6
  401156:	2b00      	cmp	r3, #0
  401158:	d06e      	beq.n	401238 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40115a:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  40115e:	4b44      	ldr	r3, [pc, #272]	; (401270 <pmc_sleep+0x230>)
  401160:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  401162:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401164:	f1b9 0f02 	cmp.w	r9, #2
  401168:	d104      	bne.n	401174 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  40116a:	4a41      	ldr	r2, [pc, #260]	; (401270 <pmc_sleep+0x230>)
  40116c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40116e:	f013 0f02 	tst.w	r3, #2
  401172:	d0fb      	beq.n	40116c <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401174:	4a3e      	ldr	r2, [pc, #248]	; (401270 <pmc_sleep+0x230>)
  401176:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401178:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  40117c:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401180:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401182:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401184:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401186:	f013 0f08 	tst.w	r3, #8
  40118a:	d0fb      	beq.n	401184 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  40118c:	4b39      	ldr	r3, [pc, #228]	; (401274 <pmc_sleep+0x234>)
  40118e:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  401192:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  401196:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401198:	461a      	mov	r2, r3
  40119a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40119c:	f013 0f08 	tst.w	r3, #8
  4011a0:	d0fb      	beq.n	40119a <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4011a2:	4a33      	ldr	r2, [pc, #204]	; (401270 <pmc_sleep+0x230>)
  4011a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011a6:	420b      	tst	r3, r1
  4011a8:	d0fc      	beq.n	4011a4 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4011aa:	2200      	movs	r2, #0
  4011ac:	4b2f      	ldr	r3, [pc, #188]	; (40126c <pmc_sleep+0x22c>)
  4011ae:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4011b0:	4b39      	ldr	r3, [pc, #228]	; (401298 <pmc_sleep+0x258>)
  4011b2:	681b      	ldr	r3, [r3, #0]
  4011b4:	b11b      	cbz	r3, 4011be <pmc_sleep+0x17e>
			callback_clocks_restored();
  4011b6:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4011b8:	2200      	movs	r2, #0
  4011ba:	4b37      	ldr	r3, [pc, #220]	; (401298 <pmc_sleep+0x258>)
  4011bc:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4011be:	2201      	movs	r2, #1
  4011c0:	4b28      	ldr	r3, [pc, #160]	; (401264 <pmc_sleep+0x224>)
  4011c2:	701a      	strb	r2, [r3, #0]
  4011c4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011c8:	b662      	cpsie	i
  4011ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4011ce:	4629      	mov	r1, r5
  4011d0:	e77e      	b.n	4010d0 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011d2:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  4011d6:	6a11      	ldr	r1, [r2, #32]
  4011d8:	4b30      	ldr	r3, [pc, #192]	; (40129c <pmc_sleep+0x25c>)
  4011da:	400b      	ands	r3, r1
  4011dc:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4011e0:	6213      	str	r3, [r2, #32]
  4011e2:	e799      	b.n	401118 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  4011e4:	f017 0f01 	tst.w	r7, #1
  4011e8:	d0b3      	beq.n	401152 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  4011ea:	4b21      	ldr	r3, [pc, #132]	; (401270 <pmc_sleep+0x230>)
  4011ec:	6a1b      	ldr	r3, [r3, #32]
  4011ee:	f013 0f01 	tst.w	r3, #1
  4011f2:	d10b      	bne.n	40120c <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4011f4:	491e      	ldr	r1, [pc, #120]	; (401270 <pmc_sleep+0x230>)
  4011f6:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4011f8:	4a29      	ldr	r2, [pc, #164]	; (4012a0 <pmc_sleep+0x260>)
  4011fa:	401a      	ands	r2, r3
  4011fc:	4b29      	ldr	r3, [pc, #164]	; (4012a4 <pmc_sleep+0x264>)
  4011fe:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401200:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401202:	460a      	mov	r2, r1
  401204:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401206:	f013 0f01 	tst.w	r3, #1
  40120a:	d0fb      	beq.n	401204 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  40120c:	4b18      	ldr	r3, [pc, #96]	; (401270 <pmc_sleep+0x230>)
  40120e:	6a1b      	ldr	r3, [r3, #32]
  401210:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401214:	d108      	bne.n	401228 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401216:	4a16      	ldr	r2, [pc, #88]	; (401270 <pmc_sleep+0x230>)
  401218:	6a11      	ldr	r1, [r2, #32]
  40121a:	4b23      	ldr	r3, [pc, #140]	; (4012a8 <pmc_sleep+0x268>)
  40121c:	430b      	orrs	r3, r1
  40121e:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401220:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401222:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401226:	d0fb      	beq.n	401220 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401228:	4a11      	ldr	r2, [pc, #68]	; (401270 <pmc_sleep+0x230>)
  40122a:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  40122c:	4b18      	ldr	r3, [pc, #96]	; (401290 <pmc_sleep+0x250>)
  40122e:	400b      	ands	r3, r1
  401230:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401234:	6213      	str	r3, [r2, #32]
  401236:	e78c      	b.n	401152 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401238:	2100      	movs	r1, #0
  40123a:	e793      	b.n	401164 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  40123c:	4a08      	ldr	r2, [pc, #32]	; (401260 <pmc_sleep+0x220>)
  40123e:	6913      	ldr	r3, [r2, #16]
  401240:	f043 0304 	orr.w	r3, r3, #4
  401244:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401246:	4a19      	ldr	r2, [pc, #100]	; (4012ac <pmc_sleep+0x26c>)
  401248:	4b19      	ldr	r3, [pc, #100]	; (4012b0 <pmc_sleep+0x270>)
  40124a:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  40124c:	2201      	movs	r2, #1
  40124e:	4b05      	ldr	r3, [pc, #20]	; (401264 <pmc_sleep+0x224>)
  401250:	701a      	strb	r2, [r3, #0]
  401252:	f3bf 8f5f 	dmb	sy
  401256:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401258:	bf30      	wfi
  40125a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40125e:	bf00      	nop
  401260:	e000ed00 	.word	0xe000ed00
  401264:	20400018 	.word	0x20400018
  401268:	00400ff1 	.word	0x00400ff1
  40126c:	20400c64 	.word	0x20400c64
  401270:	400e0600 	.word	0x400e0600
  401274:	400e0c00 	.word	0x400e0c00
  401278:	00370008 	.word	0x00370008
  40127c:	00400f7d 	.word	0x00400f7d
  401280:	fec8ffff 	.word	0xfec8ffff
  401284:	00400ff5 	.word	0x00400ff5
  401288:	fec8fffc 	.word	0xfec8fffc
  40128c:	01370002 	.word	0x01370002
  401290:	ffc8ff87 	.word	0xffc8ff87
  401294:	07ff0000 	.word	0x07ff0000
  401298:	20400c68 	.word	0x20400c68
  40129c:	ffc8fffe 	.word	0xffc8fffe
  4012a0:	ffc8fffc 	.word	0xffc8fffc
  4012a4:	00370001 	.word	0x00370001
  4012a8:	01370000 	.word	0x01370000
  4012ac:	a5000004 	.word	0xa5000004
  4012b0:	400e1810 	.word	0x400e1810

004012b4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4012b4:	e7fe      	b.n	4012b4 <Dummy_Handler>
	...

004012b8 <Reset_Handler>:
{
  4012b8:	b500      	push	{lr}
  4012ba:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4012bc:	4b25      	ldr	r3, [pc, #148]	; (401354 <Reset_Handler+0x9c>)
  4012be:	4a26      	ldr	r2, [pc, #152]	; (401358 <Reset_Handler+0xa0>)
  4012c0:	429a      	cmp	r2, r3
  4012c2:	d010      	beq.n	4012e6 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4012c4:	4b25      	ldr	r3, [pc, #148]	; (40135c <Reset_Handler+0xa4>)
  4012c6:	4a23      	ldr	r2, [pc, #140]	; (401354 <Reset_Handler+0x9c>)
  4012c8:	429a      	cmp	r2, r3
  4012ca:	d20c      	bcs.n	4012e6 <Reset_Handler+0x2e>
  4012cc:	3b01      	subs	r3, #1
  4012ce:	1a9b      	subs	r3, r3, r2
  4012d0:	f023 0303 	bic.w	r3, r3, #3
  4012d4:	3304      	adds	r3, #4
  4012d6:	4413      	add	r3, r2
  4012d8:	491f      	ldr	r1, [pc, #124]	; (401358 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4012da:	f851 0b04 	ldr.w	r0, [r1], #4
  4012de:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4012e2:	429a      	cmp	r2, r3
  4012e4:	d1f9      	bne.n	4012da <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4012e6:	4b1e      	ldr	r3, [pc, #120]	; (401360 <Reset_Handler+0xa8>)
  4012e8:	4a1e      	ldr	r2, [pc, #120]	; (401364 <Reset_Handler+0xac>)
  4012ea:	429a      	cmp	r2, r3
  4012ec:	d20a      	bcs.n	401304 <Reset_Handler+0x4c>
  4012ee:	3b01      	subs	r3, #1
  4012f0:	1a9b      	subs	r3, r3, r2
  4012f2:	f023 0303 	bic.w	r3, r3, #3
  4012f6:	3304      	adds	r3, #4
  4012f8:	4413      	add	r3, r2
                *pDest++ = 0;
  4012fa:	2100      	movs	r1, #0
  4012fc:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401300:	4293      	cmp	r3, r2
  401302:	d1fb      	bne.n	4012fc <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401304:	4a18      	ldr	r2, [pc, #96]	; (401368 <Reset_Handler+0xb0>)
  401306:	4b19      	ldr	r3, [pc, #100]	; (40136c <Reset_Handler+0xb4>)
  401308:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40130c:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40130e:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401312:	fab3 f383 	clz	r3, r3
  401316:	095b      	lsrs	r3, r3, #5
  401318:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40131a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40131c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401320:	2200      	movs	r2, #0
  401322:	4b13      	ldr	r3, [pc, #76]	; (401370 <Reset_Handler+0xb8>)
  401324:	701a      	strb	r2, [r3, #0]
	return flags;
  401326:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401328:	4a12      	ldr	r2, [pc, #72]	; (401374 <Reset_Handler+0xbc>)
  40132a:	6813      	ldr	r3, [r2, #0]
  40132c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401330:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401332:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401336:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40133a:	b129      	cbz	r1, 401348 <Reset_Handler+0x90>
		cpu_irq_enable();
  40133c:	2201      	movs	r2, #1
  40133e:	4b0c      	ldr	r3, [pc, #48]	; (401370 <Reset_Handler+0xb8>)
  401340:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401342:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401346:	b662      	cpsie	i
        __libc_init_array();
  401348:	4b0b      	ldr	r3, [pc, #44]	; (401378 <Reset_Handler+0xc0>)
  40134a:	4798      	blx	r3
        main();
  40134c:	4b0b      	ldr	r3, [pc, #44]	; (40137c <Reset_Handler+0xc4>)
  40134e:	4798      	blx	r3
  401350:	e7fe      	b.n	401350 <Reset_Handler+0x98>
  401352:	bf00      	nop
  401354:	20400000 	.word	0x20400000
  401358:	0040702c 	.word	0x0040702c
  40135c:	204009d0 	.word	0x204009d0
  401360:	20400d3c 	.word	0x20400d3c
  401364:	204009d0 	.word	0x204009d0
  401368:	e000ed00 	.word	0xe000ed00
  40136c:	00400000 	.word	0x00400000
  401370:	20400018 	.word	0x20400018
  401374:	e000ed88 	.word	0xe000ed88
  401378:	00401d0d 	.word	0x00401d0d
  40137c:	004018e5 	.word	0x004018e5

00401380 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401380:	4b3b      	ldr	r3, [pc, #236]	; (401470 <SystemCoreClockUpdate+0xf0>)
  401382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401384:	f003 0303 	and.w	r3, r3, #3
  401388:	2b01      	cmp	r3, #1
  40138a:	d01d      	beq.n	4013c8 <SystemCoreClockUpdate+0x48>
  40138c:	b183      	cbz	r3, 4013b0 <SystemCoreClockUpdate+0x30>
  40138e:	2b02      	cmp	r3, #2
  401390:	d036      	beq.n	401400 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401392:	4b37      	ldr	r3, [pc, #220]	; (401470 <SystemCoreClockUpdate+0xf0>)
  401394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401396:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40139a:	2b70      	cmp	r3, #112	; 0x70
  40139c:	d05f      	beq.n	40145e <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40139e:	4b34      	ldr	r3, [pc, #208]	; (401470 <SystemCoreClockUpdate+0xf0>)
  4013a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4013a2:	4934      	ldr	r1, [pc, #208]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013a4:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4013a8:	680b      	ldr	r3, [r1, #0]
  4013aa:	40d3      	lsrs	r3, r2
  4013ac:	600b      	str	r3, [r1, #0]
  4013ae:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4013b0:	4b31      	ldr	r3, [pc, #196]	; (401478 <SystemCoreClockUpdate+0xf8>)
  4013b2:	695b      	ldr	r3, [r3, #20]
  4013b4:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4013b8:	bf14      	ite	ne
  4013ba:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4013be:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4013c2:	4b2c      	ldr	r3, [pc, #176]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013c4:	601a      	str	r2, [r3, #0]
  4013c6:	e7e4      	b.n	401392 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4013c8:	4b29      	ldr	r3, [pc, #164]	; (401470 <SystemCoreClockUpdate+0xf0>)
  4013ca:	6a1b      	ldr	r3, [r3, #32]
  4013cc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4013d0:	d003      	beq.n	4013da <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4013d2:	4a2a      	ldr	r2, [pc, #168]	; (40147c <SystemCoreClockUpdate+0xfc>)
  4013d4:	4b27      	ldr	r3, [pc, #156]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013d6:	601a      	str	r2, [r3, #0]
  4013d8:	e7db      	b.n	401392 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4013da:	4a29      	ldr	r2, [pc, #164]	; (401480 <SystemCoreClockUpdate+0x100>)
  4013dc:	4b25      	ldr	r3, [pc, #148]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013de:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4013e0:	4b23      	ldr	r3, [pc, #140]	; (401470 <SystemCoreClockUpdate+0xf0>)
  4013e2:	6a1b      	ldr	r3, [r3, #32]
  4013e4:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013e8:	2b10      	cmp	r3, #16
  4013ea:	d005      	beq.n	4013f8 <SystemCoreClockUpdate+0x78>
  4013ec:	2b20      	cmp	r3, #32
  4013ee:	d1d0      	bne.n	401392 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4013f0:	4a22      	ldr	r2, [pc, #136]	; (40147c <SystemCoreClockUpdate+0xfc>)
  4013f2:	4b20      	ldr	r3, [pc, #128]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013f4:	601a      	str	r2, [r3, #0]
          break;
  4013f6:	e7cc      	b.n	401392 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4013f8:	4a22      	ldr	r2, [pc, #136]	; (401484 <SystemCoreClockUpdate+0x104>)
  4013fa:	4b1e      	ldr	r3, [pc, #120]	; (401474 <SystemCoreClockUpdate+0xf4>)
  4013fc:	601a      	str	r2, [r3, #0]
          break;
  4013fe:	e7c8      	b.n	401392 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401400:	4b1b      	ldr	r3, [pc, #108]	; (401470 <SystemCoreClockUpdate+0xf0>)
  401402:	6a1b      	ldr	r3, [r3, #32]
  401404:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401408:	d016      	beq.n	401438 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40140a:	4a1c      	ldr	r2, [pc, #112]	; (40147c <SystemCoreClockUpdate+0xfc>)
  40140c:	4b19      	ldr	r3, [pc, #100]	; (401474 <SystemCoreClockUpdate+0xf4>)
  40140e:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401410:	4b17      	ldr	r3, [pc, #92]	; (401470 <SystemCoreClockUpdate+0xf0>)
  401412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401414:	f003 0303 	and.w	r3, r3, #3
  401418:	2b02      	cmp	r3, #2
  40141a:	d1ba      	bne.n	401392 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40141c:	4a14      	ldr	r2, [pc, #80]	; (401470 <SystemCoreClockUpdate+0xf0>)
  40141e:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401420:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401422:	4814      	ldr	r0, [pc, #80]	; (401474 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401424:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401428:	6803      	ldr	r3, [r0, #0]
  40142a:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40142e:	b2d2      	uxtb	r2, r2
  401430:	fbb3 f3f2 	udiv	r3, r3, r2
  401434:	6003      	str	r3, [r0, #0]
  401436:	e7ac      	b.n	401392 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401438:	4a11      	ldr	r2, [pc, #68]	; (401480 <SystemCoreClockUpdate+0x100>)
  40143a:	4b0e      	ldr	r3, [pc, #56]	; (401474 <SystemCoreClockUpdate+0xf4>)
  40143c:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40143e:	4b0c      	ldr	r3, [pc, #48]	; (401470 <SystemCoreClockUpdate+0xf0>)
  401440:	6a1b      	ldr	r3, [r3, #32]
  401442:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401446:	2b10      	cmp	r3, #16
  401448:	d005      	beq.n	401456 <SystemCoreClockUpdate+0xd6>
  40144a:	2b20      	cmp	r3, #32
  40144c:	d1e0      	bne.n	401410 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40144e:	4a0b      	ldr	r2, [pc, #44]	; (40147c <SystemCoreClockUpdate+0xfc>)
  401450:	4b08      	ldr	r3, [pc, #32]	; (401474 <SystemCoreClockUpdate+0xf4>)
  401452:	601a      	str	r2, [r3, #0]
          break;
  401454:	e7dc      	b.n	401410 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401456:	4a0b      	ldr	r2, [pc, #44]	; (401484 <SystemCoreClockUpdate+0x104>)
  401458:	4b06      	ldr	r3, [pc, #24]	; (401474 <SystemCoreClockUpdate+0xf4>)
  40145a:	601a      	str	r2, [r3, #0]
          break;
  40145c:	e7d8      	b.n	401410 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40145e:	4a05      	ldr	r2, [pc, #20]	; (401474 <SystemCoreClockUpdate+0xf4>)
  401460:	6813      	ldr	r3, [r2, #0]
  401462:	4909      	ldr	r1, [pc, #36]	; (401488 <SystemCoreClockUpdate+0x108>)
  401464:	fba1 1303 	umull	r1, r3, r1, r3
  401468:	085b      	lsrs	r3, r3, #1
  40146a:	6013      	str	r3, [r2, #0]
  40146c:	4770      	bx	lr
  40146e:	bf00      	nop
  401470:	400e0600 	.word	0x400e0600
  401474:	2040001c 	.word	0x2040001c
  401478:	400e1810 	.word	0x400e1810
  40147c:	00b71b00 	.word	0x00b71b00
  401480:	003d0900 	.word	0x003d0900
  401484:	007a1200 	.word	0x007a1200
  401488:	aaaaaaab 	.word	0xaaaaaaab

0040148c <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  40148c:	4b16      	ldr	r3, [pc, #88]	; (4014e8 <system_init_flash+0x5c>)
  40148e:	4298      	cmp	r0, r3
  401490:	d913      	bls.n	4014ba <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401492:	4b16      	ldr	r3, [pc, #88]	; (4014ec <system_init_flash+0x60>)
  401494:	4298      	cmp	r0, r3
  401496:	d915      	bls.n	4014c4 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401498:	4b15      	ldr	r3, [pc, #84]	; (4014f0 <system_init_flash+0x64>)
  40149a:	4298      	cmp	r0, r3
  40149c:	d916      	bls.n	4014cc <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40149e:	4b15      	ldr	r3, [pc, #84]	; (4014f4 <system_init_flash+0x68>)
  4014a0:	4298      	cmp	r0, r3
  4014a2:	d917      	bls.n	4014d4 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4014a4:	4b14      	ldr	r3, [pc, #80]	; (4014f8 <system_init_flash+0x6c>)
  4014a6:	4298      	cmp	r0, r3
  4014a8:	d918      	bls.n	4014dc <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4014aa:	4b14      	ldr	r3, [pc, #80]	; (4014fc <system_init_flash+0x70>)
  4014ac:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4014ae:	bf94      	ite	ls
  4014b0:	4a13      	ldrls	r2, [pc, #76]	; (401500 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4014b2:	4a14      	ldrhi	r2, [pc, #80]	; (401504 <system_init_flash+0x78>)
  4014b4:	4b14      	ldr	r3, [pc, #80]	; (401508 <system_init_flash+0x7c>)
  4014b6:	601a      	str	r2, [r3, #0]
  4014b8:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4014ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4014be:	4b12      	ldr	r3, [pc, #72]	; (401508 <system_init_flash+0x7c>)
  4014c0:	601a      	str	r2, [r3, #0]
  4014c2:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4014c4:	4a11      	ldr	r2, [pc, #68]	; (40150c <system_init_flash+0x80>)
  4014c6:	4b10      	ldr	r3, [pc, #64]	; (401508 <system_init_flash+0x7c>)
  4014c8:	601a      	str	r2, [r3, #0]
  4014ca:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4014cc:	4a10      	ldr	r2, [pc, #64]	; (401510 <system_init_flash+0x84>)
  4014ce:	4b0e      	ldr	r3, [pc, #56]	; (401508 <system_init_flash+0x7c>)
  4014d0:	601a      	str	r2, [r3, #0]
  4014d2:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4014d4:	4a0f      	ldr	r2, [pc, #60]	; (401514 <system_init_flash+0x88>)
  4014d6:	4b0c      	ldr	r3, [pc, #48]	; (401508 <system_init_flash+0x7c>)
  4014d8:	601a      	str	r2, [r3, #0]
  4014da:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4014dc:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4014e0:	4b09      	ldr	r3, [pc, #36]	; (401508 <system_init_flash+0x7c>)
  4014e2:	601a      	str	r2, [r3, #0]
  4014e4:	4770      	bx	lr
  4014e6:	bf00      	nop
  4014e8:	015ef3bf 	.word	0x015ef3bf
  4014ec:	02bde77f 	.word	0x02bde77f
  4014f0:	041cdb3f 	.word	0x041cdb3f
  4014f4:	057bceff 	.word	0x057bceff
  4014f8:	06dac2bf 	.word	0x06dac2bf
  4014fc:	0839b67f 	.word	0x0839b67f
  401500:	04000500 	.word	0x04000500
  401504:	04000600 	.word	0x04000600
  401508:	400e0c00 	.word	0x400e0c00
  40150c:	04000100 	.word	0x04000100
  401510:	04000200 	.word	0x04000200
  401514:	04000300 	.word	0x04000300

00401518 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401518:	4b0a      	ldr	r3, [pc, #40]	; (401544 <_sbrk+0x2c>)
  40151a:	681b      	ldr	r3, [r3, #0]
  40151c:	b153      	cbz	r3, 401534 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40151e:	4b09      	ldr	r3, [pc, #36]	; (401544 <_sbrk+0x2c>)
  401520:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401522:	181a      	adds	r2, r3, r0
  401524:	4908      	ldr	r1, [pc, #32]	; (401548 <_sbrk+0x30>)
  401526:	4291      	cmp	r1, r2
  401528:	db08      	blt.n	40153c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40152a:	4610      	mov	r0, r2
  40152c:	4a05      	ldr	r2, [pc, #20]	; (401544 <_sbrk+0x2c>)
  40152e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401530:	4618      	mov	r0, r3
  401532:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401534:	4a05      	ldr	r2, [pc, #20]	; (40154c <_sbrk+0x34>)
  401536:	4b03      	ldr	r3, [pc, #12]	; (401544 <_sbrk+0x2c>)
  401538:	601a      	str	r2, [r3, #0]
  40153a:	e7f0      	b.n	40151e <_sbrk+0x6>
		return (caddr_t) -1;	
  40153c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401540:	4770      	bx	lr
  401542:	bf00      	nop
  401544:	20400c6c 	.word	0x20400c6c
  401548:	2045fffc 	.word	0x2045fffc
  40154c:	20402f40 	.word	0x20402f40

00401550 <but_callback2>:
	but1_flag = 1;
}


void but_callback2(void){
	but2_flag = 1;
  401550:	2201      	movs	r2, #1
  401552:	4b01      	ldr	r3, [pc, #4]	; (401558 <but_callback2+0x8>)
  401554:	701a      	strb	r2, [r3, #0]
  401556:	4770      	bx	lr
  401558:	20400c72 	.word	0x20400c72

0040155c <but_callback1>:
void but_callback1(void){
  40155c:	b508      	push	{r3, lr}
	but1_flagPressed = !pio_get(BUT1_PIO, PIO_INPUT, BUT1_MASK);
  40155e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401562:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401566:	4806      	ldr	r0, [pc, #24]	; (401580 <but_callback1+0x24>)
  401568:	4b06      	ldr	r3, [pc, #24]	; (401584 <but_callback1+0x28>)
  40156a:	4798      	blx	r3
  40156c:	fab0 f080 	clz	r0, r0
  401570:	0940      	lsrs	r0, r0, #5
  401572:	4b05      	ldr	r3, [pc, #20]	; (401588 <but_callback1+0x2c>)
  401574:	7018      	strb	r0, [r3, #0]
	but1_flag = 1;
  401576:	2201      	movs	r2, #1
  401578:	4b04      	ldr	r3, [pc, #16]	; (40158c <but_callback1+0x30>)
  40157a:	701a      	strb	r2, [r3, #0]
  40157c:	bd08      	pop	{r3, pc}
  40157e:	bf00      	nop
  401580:	400e1400 	.word	0x400e1400
  401584:	00400b7d 	.word	0x00400b7d
  401588:	20400c71 	.word	0x20400c71
  40158c:	20400c70 	.word	0x20400c70

00401590 <but_callback3>:
}


void but_callback3(void){
  401590:	b508      	push	{r3, lr}
	but3_flagPressed = !pio_get(BUT3_PIO, PIO_INPUT, BUT3_MASK);
  401592:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401596:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40159a:	4806      	ldr	r0, [pc, #24]	; (4015b4 <but_callback3+0x24>)
  40159c:	4b06      	ldr	r3, [pc, #24]	; (4015b8 <but_callback3+0x28>)
  40159e:	4798      	blx	r3
  4015a0:	fab0 f080 	clz	r0, r0
  4015a4:	0940      	lsrs	r0, r0, #5
  4015a6:	4b05      	ldr	r3, [pc, #20]	; (4015bc <but_callback3+0x2c>)
  4015a8:	7018      	strb	r0, [r3, #0]
	but3_flag = 1;
  4015aa:	2201      	movs	r2, #1
  4015ac:	4b04      	ldr	r3, [pc, #16]	; (4015c0 <but_callback3+0x30>)
  4015ae:	701a      	strb	r2, [r3, #0]
  4015b0:	bd08      	pop	{r3, pc}
  4015b2:	bf00      	nop
  4015b4:	400e0e00 	.word	0x400e0e00
  4015b8:	00400b7d 	.word	0x00400b7d
  4015bc:	20400c74 	.word	0x20400c74
  4015c0:	20400c73 	.word	0x20400c73

004015c4 <atualiza_barra>:
	for (int i = 0; i<indexLed*4; i+=2){
  4015c4:	4b0c      	ldr	r3, [pc, #48]	; (4015f8 <atualiza_barra+0x34>)
  4015c6:	681b      	ldr	r3, [r3, #0]
  4015c8:	009b      	lsls	r3, r3, #2
  4015ca:	2b00      	cmp	r3, #0
  4015cc:	dd12      	ble.n	4015f4 <atualiza_barra+0x30>
void atualiza_barra(){
  4015ce:	b5f0      	push	{r4, r5, r6, r7, lr}
  4015d0:	b083      	sub	sp, #12
	for (int i = 0; i<indexLed*4; i+=2){
  4015d2:	2400      	movs	r4, #0
		gfx_mono_draw_rect(i, 30, 2, 2, GFX_PIXEL_SET);
  4015d4:	2701      	movs	r7, #1
  4015d6:	4e09      	ldr	r6, [pc, #36]	; (4015fc <atualiza_barra+0x38>)
	for (int i = 0; i<indexLed*4; i+=2){
  4015d8:	4d07      	ldr	r5, [pc, #28]	; (4015f8 <atualiza_barra+0x34>)
		gfx_mono_draw_rect(i, 30, 2, 2, GFX_PIXEL_SET);
  4015da:	9700      	str	r7, [sp, #0]
  4015dc:	2302      	movs	r3, #2
  4015de:	461a      	mov	r2, r3
  4015e0:	211e      	movs	r1, #30
  4015e2:	b2e0      	uxtb	r0, r4
  4015e4:	47b0      	blx	r6
	for (int i = 0; i<indexLed*4; i+=2){
  4015e6:	3402      	adds	r4, #2
  4015e8:	682b      	ldr	r3, [r5, #0]
  4015ea:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
  4015ee:	dbf4      	blt.n	4015da <atualiza_barra+0x16>
}
  4015f0:	b003      	add	sp, #12
  4015f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4015f4:	4770      	bx	lr
  4015f6:	bf00      	nop
  4015f8:	20400c78 	.word	0x20400c78
  4015fc:	00400495 	.word	0x00400495

00401600 <limpa_barra>:
void limpa_barra(){
  401600:	b5f0      	push	{r4, r5, r6, r7, lr}
  401602:	b083      	sub	sp, #12
	for (int i = 0; i<130; i+=2){
  401604:	2400      	movs	r4, #0
		gfx_mono_draw_rect(i, 30, 2, 2, GFX_PIXEL_CLR);
  401606:	4627      	mov	r7, r4
  401608:	2602      	movs	r6, #2
  40160a:	4d06      	ldr	r5, [pc, #24]	; (401624 <limpa_barra+0x24>)
  40160c:	9700      	str	r7, [sp, #0]
  40160e:	4633      	mov	r3, r6
  401610:	4632      	mov	r2, r6
  401612:	211e      	movs	r1, #30
  401614:	b2e0      	uxtb	r0, r4
  401616:	47a8      	blx	r5
	for (int i = 0; i<130; i+=2){
  401618:	3402      	adds	r4, #2
  40161a:	2c82      	cmp	r4, #130	; 0x82
  40161c:	d1f6      	bne.n	40160c <limpa_barra+0xc>
}
  40161e:	b003      	add	sp, #12
  401620:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401622:	bf00      	nop
  401624:	00400495 	.word	0x00400495

00401628 <atualiza_texto>:
void atualiza_texto(){
  401628:	b538      	push	{r3, r4, r5, lr}
	gfx_mono_draw_string("     " , 50,0, &sysfont);
  40162a:	4d06      	ldr	r5, [pc, #24]	; (401644 <atualiza_texto+0x1c>)
  40162c:	462b      	mov	r3, r5
  40162e:	2200      	movs	r2, #0
  401630:	2132      	movs	r1, #50	; 0x32
  401632:	4805      	ldr	r0, [pc, #20]	; (401648 <atualiza_texto+0x20>)
  401634:	4c05      	ldr	r4, [pc, #20]	; (40164c <atualiza_texto+0x24>)
  401636:	47a0      	blx	r4
	gfx_mono_draw_string(freq , 50,0, &sysfont);
  401638:	462b      	mov	r3, r5
  40163a:	2200      	movs	r2, #0
  40163c:	2132      	movs	r1, #50	; 0x32
  40163e:	4804      	ldr	r0, [pc, #16]	; (401650 <atualiza_texto+0x28>)
  401640:	47a0      	blx	r4
  401642:	bd38      	pop	{r3, r4, r5, pc}
  401644:	2040000c 	.word	0x2040000c
  401648:	00406d6c 	.word	0x00406d6c
  40164c:	004005c9 	.word	0x004005c9
  401650:	20400cb0 	.word	0x20400cb0

00401654 <pisca_led>:
void pisca_led(int n, int t, int led){
  401654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (estadoLed){
  401656:	4b21      	ldr	r3, [pc, #132]	; (4016dc <pisca_led+0x88>)
  401658:	781b      	ldrb	r3, [r3, #0]
  40165a:	b943      	cbnz	r3, 40166e <pisca_led+0x1a>
	if (indexLed >= 30){
  40165c:	4b20      	ldr	r3, [pc, #128]	; (4016e0 <pisca_led+0x8c>)
  40165e:	681b      	ldr	r3, [r3, #0]
  401660:	2b1d      	cmp	r3, #29
  401662:	dc33      	bgt.n	4016cc <pisca_led+0x78>
		indexLed += 1;
  401664:	4a1e      	ldr	r2, [pc, #120]	; (4016e0 <pisca_led+0x8c>)
  401666:	6813      	ldr	r3, [r2, #0]
  401668:	3301      	adds	r3, #1
  40166a:	6013      	str	r3, [r2, #0]
  40166c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40166e:	460c      	mov	r4, r1
		pio_clear(LED2_PIO, LED2_MASK);
  401670:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401674:	481b      	ldr	r0, [pc, #108]	; (4016e4 <pisca_led+0x90>)
  401676:	4b1c      	ldr	r3, [pc, #112]	; (4016e8 <pisca_led+0x94>)
  401678:	4798      	blx	r3
		delay_ms(t);
  40167a:	b1e4      	cbz	r4, 4016b6 <pisca_led+0x62>
  40167c:	17e7      	asrs	r7, r4, #31
  40167e:	4b1b      	ldr	r3, [pc, #108]	; (4016ec <pisca_led+0x98>)
  401680:	fba4 0103 	umull	r0, r1, r4, r3
  401684:	fb03 1107 	mla	r1, r3, r7, r1
  401688:	f241 722c 	movw	r2, #5932	; 0x172c
  40168c:	2300      	movs	r3, #0
  40168e:	f241 742b 	movw	r4, #5931	; 0x172b
  401692:	2500      	movs	r5, #0
  401694:	1900      	adds	r0, r0, r4
  401696:	4169      	adcs	r1, r5
  401698:	4c15      	ldr	r4, [pc, #84]	; (4016f0 <pisca_led+0x9c>)
  40169a:	47a0      	blx	r4
  40169c:	4605      	mov	r5, r0
  40169e:	4c15      	ldr	r4, [pc, #84]	; (4016f4 <pisca_led+0xa0>)
  4016a0:	47a0      	blx	r4
		pio_set(LED2_PIO, LED2_MASK);
  4016a2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4016a6:	480f      	ldr	r0, [pc, #60]	; (4016e4 <pisca_led+0x90>)
  4016a8:	4b13      	ldr	r3, [pc, #76]	; (4016f8 <pisca_led+0xa4>)
  4016aa:	4798      	blx	r3
		delay_ms(t);
  4016ac:	4628      	mov	r0, r5
  4016ae:	47a0      	blx	r4
		atualiza_barra();
  4016b0:	4b12      	ldr	r3, [pc, #72]	; (4016fc <pisca_led+0xa8>)
  4016b2:	4798      	blx	r3
  4016b4:	e7d2      	b.n	40165c <pisca_led+0x8>
		delay_ms(t);
  4016b6:	2033      	movs	r0, #51	; 0x33
  4016b8:	4c0e      	ldr	r4, [pc, #56]	; (4016f4 <pisca_led+0xa0>)
  4016ba:	47a0      	blx	r4
		pio_set(LED2_PIO, LED2_MASK);
  4016bc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4016c0:	4808      	ldr	r0, [pc, #32]	; (4016e4 <pisca_led+0x90>)
  4016c2:	4b0d      	ldr	r3, [pc, #52]	; (4016f8 <pisca_led+0xa4>)
  4016c4:	4798      	blx	r3
		delay_ms(t);
  4016c6:	2033      	movs	r0, #51	; 0x33
  4016c8:	47a0      	blx	r4
  4016ca:	e7f1      	b.n	4016b0 <pisca_led+0x5c>
		estadoLed = 0;
  4016cc:	2300      	movs	r3, #0
  4016ce:	4a03      	ldr	r2, [pc, #12]	; (4016dc <pisca_led+0x88>)
  4016d0:	7013      	strb	r3, [r2, #0]
		indexLed = 0;
  4016d2:	4a03      	ldr	r2, [pc, #12]	; (4016e0 <pisca_led+0x8c>)
  4016d4:	6013      	str	r3, [r2, #0]
		limpa_barra();
  4016d6:	4b0a      	ldr	r3, [pc, #40]	; (401700 <pisca_led+0xac>)
  4016d8:	4798      	blx	r3
  4016da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4016dc:	20400c75 	.word	0x20400c75
  4016e0:	20400c78 	.word	0x20400c78
  4016e4:	400e1200 	.word	0x400e1200
  4016e8:	00400b79 	.word	0x00400b79
  4016ec:	11e1a300 	.word	0x11e1a300
  4016f0:	004019fd 	.word	0x004019fd
  4016f4:	20400001 	.word	0x20400001
  4016f8:	00400b75 	.word	0x00400b75
  4016fc:	004015c5 	.word	0x004015c5
  401700:	00401601 	.word	0x00401601

00401704 <int_str>:
}

char int_str(){
  401704:	b508      	push	{r3, lr}
	sprintf(freq,"%d", frequencia);
  401706:	4b03      	ldr	r3, [pc, #12]	; (401714 <int_str+0x10>)
  401708:	681a      	ldr	r2, [r3, #0]
  40170a:	4903      	ldr	r1, [pc, #12]	; (401718 <int_str+0x14>)
  40170c:	4803      	ldr	r0, [pc, #12]	; (40171c <int_str+0x18>)
  40170e:	4b04      	ldr	r3, [pc, #16]	; (401720 <int_str+0x1c>)
  401710:	4798      	blx	r3
}
  401712:	bd08      	pop	{r3, pc}
  401714:	20400020 	.word	0x20400020
  401718:	00406d74 	.word	0x00406d74
  40171c:	20400cb0 	.word	0x20400cb0
  401720:	00401df9 	.word	0x00401df9

00401724 <aumenta_freq>:

void aumenta_freq(){
  401724:	b508      	push	{r3, lr}
	frequencia += 2;
  401726:	4a04      	ldr	r2, [pc, #16]	; (401738 <aumenta_freq+0x14>)
  401728:	6813      	ldr	r3, [r2, #0]
  40172a:	3302      	adds	r3, #2
  40172c:	6013      	str	r3, [r2, #0]
	int_str();
  40172e:	4b03      	ldr	r3, [pc, #12]	; (40173c <aumenta_freq+0x18>)
  401730:	4798      	blx	r3
	atualiza_texto();
  401732:	4b03      	ldr	r3, [pc, #12]	; (401740 <aumenta_freq+0x1c>)
  401734:	4798      	blx	r3
  401736:	bd08      	pop	{r3, pc}
  401738:	20400020 	.word	0x20400020
  40173c:	00401705 	.word	0x00401705
  401740:	00401629 	.word	0x00401629

00401744 <reset_freq>:

void reset_indexLed(){
	indexLed = 0;
}

void reset_freq(){
  401744:	b508      	push	{r3, lr}
	frequencia = 100;
  401746:	2264      	movs	r2, #100	; 0x64
  401748:	4b05      	ldr	r3, [pc, #20]	; (401760 <reset_freq+0x1c>)
  40174a:	601a      	str	r2, [r3, #0]
	int_str();
  40174c:	4b05      	ldr	r3, [pc, #20]	; (401764 <reset_freq+0x20>)
  40174e:	4798      	blx	r3
	atualiza_texto();
  401750:	4b05      	ldr	r3, [pc, #20]	; (401768 <reset_freq+0x24>)
  401752:	4798      	blx	r3
	limpa_barra();
  401754:	4b05      	ldr	r3, [pc, #20]	; (40176c <reset_freq+0x28>)
  401756:	4798      	blx	r3
	indexLed = 0;
  401758:	2200      	movs	r2, #0
  40175a:	4b05      	ldr	r3, [pc, #20]	; (401770 <reset_freq+0x2c>)
  40175c:	601a      	str	r2, [r3, #0]
  40175e:	bd08      	pop	{r3, pc}
  401760:	20400020 	.word	0x20400020
  401764:	00401705 	.word	0x00401705
  401768:	00401629 	.word	0x00401629
  40176c:	00401601 	.word	0x00401601
  401770:	20400c78 	.word	0x20400c78

00401774 <diminui_freq>:
	reset_indexLed();
}

void diminui_freq(){
  401774:	b508      	push	{r3, lr}
	if (frequencia !=0){
  401776:	4b06      	ldr	r3, [pc, #24]	; (401790 <diminui_freq+0x1c>)
  401778:	681b      	ldr	r3, [r3, #0]
  40177a:	b903      	cbnz	r3, 40177e <diminui_freq+0xa>
  40177c:	bd08      	pop	{r3, pc}
		frequencia -= 2;
  40177e:	4a04      	ldr	r2, [pc, #16]	; (401790 <diminui_freq+0x1c>)
  401780:	6813      	ldr	r3, [r2, #0]
  401782:	3b02      	subs	r3, #2
  401784:	6013      	str	r3, [r2, #0]
		int_str();
  401786:	4b03      	ldr	r3, [pc, #12]	; (401794 <diminui_freq+0x20>)
  401788:	4798      	blx	r3
		atualiza_texto();
  40178a:	4b03      	ldr	r3, [pc, #12]	; (401798 <diminui_freq+0x24>)
  40178c:	4798      	blx	r3
	}
}
  40178e:	e7f5      	b.n	40177c <diminui_freq+0x8>
  401790:	20400020 	.word	0x20400020
  401794:	00401705 	.word	0x00401705
  401798:	00401629 	.word	0x00401629

0040179c <init>:

void init(void)
{
  40179c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4017a0:	b082      	sub	sp, #8
	sysclk_init();
  4017a2:	4b42      	ldr	r3, [pc, #264]	; (4018ac <init+0x110>)
  4017a4:	4798      	blx	r3
	
	// Initializing OLED-display
	
	// INIT Board Clock
	WDT->WDT_MR = WDT_MR_WDDIS;								// Desativa WatchDog Timer
  4017a6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4017aa:	4b41      	ldr	r3, [pc, #260]	; (4018b0 <init+0x114>)
  4017ac:	605a      	str	r2, [r3, #4]

	//Led 1
	pmc_enable_periph_clk(LED1_ID);						// Ativa o PIO utilizando ID, Modo de Entrada
  4017ae:	200a      	movs	r0, #10
  4017b0:	4e40      	ldr	r6, [pc, #256]	; (4018b4 <init+0x118>)
  4017b2:	47b0      	blx	r6
	pio_configure(LED1_PIO, PIO_OUTPUT_0, LED1_MASK, PIO_DEFAULT);
  4017b4:	4f40      	ldr	r7, [pc, #256]	; (4018b8 <init+0x11c>)
  4017b6:	2300      	movs	r3, #0
  4017b8:	2201      	movs	r2, #1
  4017ba:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4017be:	4638      	mov	r0, r7
  4017c0:	4c3e      	ldr	r4, [pc, #248]	; (4018bc <init+0x120>)
  4017c2:	47a0      	blx	r4
	//Led 2
	pmc_enable_periph_clk(LED2_ID);
  4017c4:	200c      	movs	r0, #12
  4017c6:	47b0      	blx	r6
	pio_configure(LED2_PIO, PIO_OUTPUT_0, LED2_MASK, PIO_DEFAULT);
  4017c8:	4d3d      	ldr	r5, [pc, #244]	; (4018c0 <init+0x124>)
  4017ca:	2300      	movs	r3, #0
  4017cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4017d0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4017d4:	4628      	mov	r0, r5
  4017d6:	47a0      	blx	r4
	//Led 3
	pmc_enable_periph_clk(LED3_ID);
  4017d8:	200b      	movs	r0, #11
  4017da:	47b0      	blx	r6
	pio_configure(LED2_PIO, PIO_OUTPUT_0, LED2_MASK, PIO_DEFAULT);
  4017dc:	2300      	movs	r3, #0
  4017de:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4017e2:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4017e6:	4628      	mov	r0, r5
  4017e8:	47a0      	blx	r4
	//Button 1
	pmc_enable_periph_clk(BUT1_ID);								// Ativando Botao 1
  4017ea:	2010      	movs	r0, #16
  4017ec:	47b0      	blx	r6
	pio_configure(BUT1_PIO, PIO_INPUT, BUT1_MASK, PIO_PULLUP);
  4017ee:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 4018d4 <init+0x138>
  4017f2:	2301      	movs	r3, #1
  4017f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4017f8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4017fc:	4640      	mov	r0, r8
  4017fe:	47a0      	blx	r4
	// Button 2
	pmc_enable_periph_clk(BUT2_ID);
  401800:	200c      	movs	r0, #12
  401802:	47b0      	blx	r6
	pio_configure(BUT2_PIO, PIO_INPUT, BUT2_MASK, PIO_PULLUP);
  401804:	2301      	movs	r3, #1
  401806:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40180a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40180e:	4628      	mov	r0, r5
  401810:	47a0      	blx	r4
	// Button 3
	pmc_enable_periph_clk(BUT3_ID);
  401812:	200a      	movs	r0, #10
  401814:	47b0      	blx	r6
	pio_configure(BUT3_PIO, PIO_INPUT, BUT3_MASK, PIO_PULLUP);
  401816:	2301      	movs	r3, #1
  401818:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40181c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401820:	4638      	mov	r0, r7
  401822:	47a0      	blx	r4
	
	// Adding Interruptions - Button 1
	pio_handler_set(BUT1_PIO, BUT1_ID, BUT1_MASK, PIO_IT_FALL_EDGE, but_callback1);
  401824:	4b27      	ldr	r3, [pc, #156]	; (4018c4 <init+0x128>)
  401826:	9300      	str	r3, [sp, #0]
  401828:	2350      	movs	r3, #80	; 0x50
  40182a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40182e:	2110      	movs	r1, #16
  401830:	4640      	mov	r0, r8
  401832:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 4018d8 <init+0x13c>
  401836:	47d0      	blx	sl
	pio_enable_interrupt(BUT1_PIO, BUT1_MASK);
  401838:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40183c:	4640      	mov	r0, r8
  40183e:	f8df 909c 	ldr.w	r9, [pc, #156]	; 4018dc <init+0x140>
  401842:	47c8      	blx	r9
	pio_get_interrupt_status(BUT1_PIO);
  401844:	4640      	mov	r0, r8
  401846:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4018e0 <init+0x144>
  40184a:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40184c:	4c1e      	ldr	r4, [pc, #120]	; (4018c8 <init+0x12c>)
  40184e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  401852:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401854:	2680      	movs	r6, #128	; 0x80
  401856:	f884 6310 	strb.w	r6, [r4, #784]	; 0x310
	NVIC_EnableIRQ(BUT1_ID);
	NVIC_SetPriority(BUT1_ID, 4);
	
	// Adding Interruptions - Button 2
	pio_handler_set(BUT2_PIO, BUT2_ID, BUT2_MASK, PIO_IT_FALL_EDGE, but_callback2);
  40185a:	4b1c      	ldr	r3, [pc, #112]	; (4018cc <init+0x130>)
  40185c:	9300      	str	r3, [sp, #0]
  40185e:	2350      	movs	r3, #80	; 0x50
  401860:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  401864:	210c      	movs	r1, #12
  401866:	4628      	mov	r0, r5
  401868:	47d0      	blx	sl
	pio_enable_interrupt(BUT2_PIO, BUT2_MASK);
  40186a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40186e:	4628      	mov	r0, r5
  401870:	47c8      	blx	r9
	pio_get_interrupt_status(BUT2_PIO);
  401872:	4628      	mov	r0, r5
  401874:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401876:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40187a:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40187c:	f884 630c 	strb.w	r6, [r4, #780]	; 0x30c
	NVIC_EnableIRQ(BUT2_ID);
	NVIC_SetPriority(BUT2_ID, 4);
	// Adding Interruptions - Button 3
	pio_handler_set(BUT3_PIO, BUT3_ID, BUT3_MASK, PIO_IT_FALL_EDGE, but_callback3);
  401880:	4b13      	ldr	r3, [pc, #76]	; (4018d0 <init+0x134>)
  401882:	9300      	str	r3, [sp, #0]
  401884:	2350      	movs	r3, #80	; 0x50
  401886:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40188a:	210a      	movs	r1, #10
  40188c:	4638      	mov	r0, r7
  40188e:	47d0      	blx	sl
	pio_enable_interrupt(BUT3_PIO, BUT3_MASK);
  401890:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401894:	4638      	mov	r0, r7
  401896:	47c8      	blx	r9
	pio_get_interrupt_status(BUT3_PIO);
  401898:	4638      	mov	r0, r7
  40189a:	47c0      	blx	r8
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40189c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4018a0:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4018a2:	f884 630a 	strb.w	r6, [r4, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_ID);
	NVIC_SetPriority(BUT3_ID, 4);
}
  4018a6:	b002      	add	sp, #8
  4018a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4018ac:	004009c5 	.word	0x004009c5
  4018b0:	400e1850 	.word	0x400e1850
  4018b4:	00400f9d 	.word	0x00400f9d
  4018b8:	400e0e00 	.word	0x400e0e00
  4018bc:	00400c89 	.word	0x00400c89
  4018c0:	400e1200 	.word	0x400e1200
  4018c4:	0040155d 	.word	0x0040155d
  4018c8:	e000e100 	.word	0xe000e100
  4018cc:	00401551 	.word	0x00401551
  4018d0:	00401591 	.word	0x00401591
  4018d4:	400e1400 	.word	0x400e1400
  4018d8:	00400da9 	.word	0x00400da9
  4018dc:	00400d4b 	.word	0x00400d4b
  4018e0:	00400d4f 	.word	0x00400d4f

004018e4 <main>:


int main(void)
{
  4018e4:	b580      	push	{r7, lr}
	board_init();
  4018e6:	4b2f      	ldr	r3, [pc, #188]	; (4019a4 <main+0xc0>)
  4018e8:	4798      	blx	r3
	init();
  4018ea:	4b2f      	ldr	r3, [pc, #188]	; (4019a8 <main+0xc4>)
  4018ec:	4798      	blx	r3
	delay_init();
	gfx_mono_ssd1306_init();
  4018ee:	4b2f      	ldr	r3, [pc, #188]	; (4019ac <main+0xc8>)
  4018f0:	4798      	blx	r3
	pio_set(LED1_PIO, LED1_MASK);
  4018f2:	2101      	movs	r1, #1
  4018f4:	482e      	ldr	r0, [pc, #184]	; (4019b0 <main+0xcc>)
  4018f6:	4c2f      	ldr	r4, [pc, #188]	; (4019b4 <main+0xd0>)
  4018f8:	47a0      	blx	r4
	pio_set(LED3_PIO, LED3_MASK);
  4018fa:	2104      	movs	r1, #4
  4018fc:	482e      	ldr	r0, [pc, #184]	; (4019b8 <main+0xd4>)
  4018fe:	47a0      	blx	r4
	while (1){
		if (but1_flag ||but1_flagPressed){
			aumenta_freq();
			but1_flagPressed = !pio_get(BUT1_PIO, PIO_INPUT, BUT1_MASK);
			estadoLed = 1;
  401900:	4c2e      	ldr	r4, [pc, #184]	; (4019bc <main+0xd8>)
			but2_flag = 0;
		}
		
		if (but3_flag ||but3_flagPressed){
			diminui_freq();
			but3_flagPressed = !pio_get(BUT3_PIO, PIO_INPUT, BUT3_MASK);
  401902:	4f2b      	ldr	r7, [pc, #172]	; (4019b0 <main+0xcc>)
		if (but1_flag ||but1_flagPressed){
  401904:	4d2e      	ldr	r5, [pc, #184]	; (4019c0 <main+0xdc>)
			but1_flagPressed = !pio_get(BUT1_PIO, PIO_INPUT, BUT1_MASK);
  401906:	4e2f      	ldr	r6, [pc, #188]	; (4019c4 <main+0xe0>)
  401908:	e024      	b.n	401954 <main+0x70>
			reset_freq();
  40190a:	4b2f      	ldr	r3, [pc, #188]	; (4019c8 <main+0xe4>)
  40190c:	4798      	blx	r3
			estadoLed = 0;
  40190e:	2300      	movs	r3, #0
  401910:	7023      	strb	r3, [r4, #0]
			but2_flag = 0;
  401912:	4a2e      	ldr	r2, [pc, #184]	; (4019cc <main+0xe8>)
  401914:	7013      	strb	r3, [r2, #0]
  401916:	e038      	b.n	40198a <main+0xa6>
			diminui_freq();
  401918:	4b2d      	ldr	r3, [pc, #180]	; (4019d0 <main+0xec>)
  40191a:	4798      	blx	r3
			but3_flagPressed = !pio_get(BUT3_PIO, PIO_INPUT, BUT3_MASK);
  40191c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401920:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401924:	4638      	mov	r0, r7
  401926:	4b2b      	ldr	r3, [pc, #172]	; (4019d4 <main+0xf0>)
  401928:	4798      	blx	r3
  40192a:	fab0 f080 	clz	r0, r0
  40192e:	0940      	lsrs	r0, r0, #5
  401930:	4b29      	ldr	r3, [pc, #164]	; (4019d8 <main+0xf4>)
  401932:	7018      	strb	r0, [r3, #0]
			estadoLed = 1;
  401934:	2301      	movs	r3, #1
  401936:	7023      	strb	r3, [r4, #0]
			but3_flag = 0;
  401938:	2200      	movs	r2, #0
  40193a:	4b28      	ldr	r3, [pc, #160]	; (4019dc <main+0xf8>)
  40193c:	701a      	strb	r2, [r3, #0]
		}
		
		pisca_led(1,frequencia,2);
  40193e:	4b28      	ldr	r3, [pc, #160]	; (4019e0 <main+0xfc>)
  401940:	6819      	ldr	r1, [r3, #0]
  401942:	2202      	movs	r2, #2
  401944:	2001      	movs	r0, #1
  401946:	4b27      	ldr	r3, [pc, #156]	; (4019e4 <main+0x100>)
  401948:	4798      	blx	r3
		delay_ms(10);
  40194a:	4827      	ldr	r0, [pc, #156]	; (4019e8 <main+0x104>)
  40194c:	4b27      	ldr	r3, [pc, #156]	; (4019ec <main+0x108>)
  40194e:	4798      	blx	r3
		if (!estadoLed){
  401950:	7823      	ldrb	r3, [r4, #0]
  401952:	b31b      	cbz	r3, 40199c <main+0xb8>
		if (but1_flag ||but1_flagPressed){
  401954:	782b      	ldrb	r3, [r5, #0]
  401956:	b913      	cbnz	r3, 40195e <main+0x7a>
  401958:	4b25      	ldr	r3, [pc, #148]	; (4019f0 <main+0x10c>)
  40195a:	781b      	ldrb	r3, [r3, #0]
  40195c:	b18b      	cbz	r3, 401982 <main+0x9e>
			aumenta_freq();
  40195e:	4b25      	ldr	r3, [pc, #148]	; (4019f4 <main+0x110>)
  401960:	4798      	blx	r3
			but1_flagPressed = !pio_get(BUT1_PIO, PIO_INPUT, BUT1_MASK);
  401962:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401966:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40196a:	4630      	mov	r0, r6
  40196c:	4b19      	ldr	r3, [pc, #100]	; (4019d4 <main+0xf0>)
  40196e:	4798      	blx	r3
  401970:	fab0 f080 	clz	r0, r0
  401974:	0940      	lsrs	r0, r0, #5
  401976:	4b1e      	ldr	r3, [pc, #120]	; (4019f0 <main+0x10c>)
  401978:	7018      	strb	r0, [r3, #0]
			estadoLed = 1;
  40197a:	2301      	movs	r3, #1
  40197c:	7023      	strb	r3, [r4, #0]
			but1_flag = 0;
  40197e:	2300      	movs	r3, #0
  401980:	702b      	strb	r3, [r5, #0]
		if (but2_flag){
  401982:	4b12      	ldr	r3, [pc, #72]	; (4019cc <main+0xe8>)
  401984:	781b      	ldrb	r3, [r3, #0]
  401986:	2b00      	cmp	r3, #0
  401988:	d1bf      	bne.n	40190a <main+0x26>
		if (but3_flag ||but3_flagPressed){
  40198a:	4b14      	ldr	r3, [pc, #80]	; (4019dc <main+0xf8>)
  40198c:	781b      	ldrb	r3, [r3, #0]
  40198e:	2b00      	cmp	r3, #0
  401990:	d1c2      	bne.n	401918 <main+0x34>
  401992:	4b11      	ldr	r3, [pc, #68]	; (4019d8 <main+0xf4>)
  401994:	781b      	ldrb	r3, [r3, #0]
  401996:	2b00      	cmp	r3, #0
  401998:	d0d1      	beq.n	40193e <main+0x5a>
  40199a:	e7bd      	b.n	401918 <main+0x34>
			pmc_sleep(SLEEPMGR_SLEEP_WFI);
  40199c:	2002      	movs	r0, #2
  40199e:	4b16      	ldr	r3, [pc, #88]	; (4019f8 <main+0x114>)
  4019a0:	4798      	blx	r3
  4019a2:	e7d7      	b.n	401954 <main+0x70>
  4019a4:	00400a35 	.word	0x00400a35
  4019a8:	0040179d 	.word	0x0040179d
  4019ac:	00400661 	.word	0x00400661
  4019b0:	400e0e00 	.word	0x400e0e00
  4019b4:	00400b75 	.word	0x00400b75
  4019b8:	400e1000 	.word	0x400e1000
  4019bc:	20400c75 	.word	0x20400c75
  4019c0:	20400c70 	.word	0x20400c70
  4019c4:	400e1400 	.word	0x400e1400
  4019c8:	00401745 	.word	0x00401745
  4019cc:	20400c72 	.word	0x20400c72
  4019d0:	00401775 	.word	0x00401775
  4019d4:	00400b7d 	.word	0x00400b7d
  4019d8:	20400c74 	.word	0x20400c74
  4019dc:	20400c73 	.word	0x20400c73
  4019e0:	20400020 	.word	0x20400020
  4019e4:	00401655 	.word	0x00401655
  4019e8:	0007b784 	.word	0x0007b784
  4019ec:	20400001 	.word	0x20400001
  4019f0:	20400c71 	.word	0x20400c71
  4019f4:	00401725 	.word	0x00401725
  4019f8:	00401041 	.word	0x00401041

004019fc <__aeabi_uldivmod>:
  4019fc:	b953      	cbnz	r3, 401a14 <__aeabi_uldivmod+0x18>
  4019fe:	b94a      	cbnz	r2, 401a14 <__aeabi_uldivmod+0x18>
  401a00:	2900      	cmp	r1, #0
  401a02:	bf08      	it	eq
  401a04:	2800      	cmpeq	r0, #0
  401a06:	bf1c      	itt	ne
  401a08:	f04f 31ff 	movne.w	r1, #4294967295
  401a0c:	f04f 30ff 	movne.w	r0, #4294967295
  401a10:	f000 b97a 	b.w	401d08 <__aeabi_idiv0>
  401a14:	f1ad 0c08 	sub.w	ip, sp, #8
  401a18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  401a1c:	f000 f806 	bl	401a2c <__udivmoddi4>
  401a20:	f8dd e004 	ldr.w	lr, [sp, #4]
  401a24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401a28:	b004      	add	sp, #16
  401a2a:	4770      	bx	lr

00401a2c <__udivmoddi4>:
  401a2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401a30:	468c      	mov	ip, r1
  401a32:	460d      	mov	r5, r1
  401a34:	4604      	mov	r4, r0
  401a36:	9e08      	ldr	r6, [sp, #32]
  401a38:	2b00      	cmp	r3, #0
  401a3a:	d151      	bne.n	401ae0 <__udivmoddi4+0xb4>
  401a3c:	428a      	cmp	r2, r1
  401a3e:	4617      	mov	r7, r2
  401a40:	d96d      	bls.n	401b1e <__udivmoddi4+0xf2>
  401a42:	fab2 fe82 	clz	lr, r2
  401a46:	f1be 0f00 	cmp.w	lr, #0
  401a4a:	d00b      	beq.n	401a64 <__udivmoddi4+0x38>
  401a4c:	f1ce 0c20 	rsb	ip, lr, #32
  401a50:	fa01 f50e 	lsl.w	r5, r1, lr
  401a54:	fa20 fc0c 	lsr.w	ip, r0, ip
  401a58:	fa02 f70e 	lsl.w	r7, r2, lr
  401a5c:	ea4c 0c05 	orr.w	ip, ip, r5
  401a60:	fa00 f40e 	lsl.w	r4, r0, lr
  401a64:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  401a68:	0c25      	lsrs	r5, r4, #16
  401a6a:	fbbc f8fa 	udiv	r8, ip, sl
  401a6e:	fa1f f987 	uxth.w	r9, r7
  401a72:	fb0a cc18 	mls	ip, sl, r8, ip
  401a76:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  401a7a:	fb08 f309 	mul.w	r3, r8, r9
  401a7e:	42ab      	cmp	r3, r5
  401a80:	d90a      	bls.n	401a98 <__udivmoddi4+0x6c>
  401a82:	19ed      	adds	r5, r5, r7
  401a84:	f108 32ff 	add.w	r2, r8, #4294967295
  401a88:	f080 8123 	bcs.w	401cd2 <__udivmoddi4+0x2a6>
  401a8c:	42ab      	cmp	r3, r5
  401a8e:	f240 8120 	bls.w	401cd2 <__udivmoddi4+0x2a6>
  401a92:	f1a8 0802 	sub.w	r8, r8, #2
  401a96:	443d      	add	r5, r7
  401a98:	1aed      	subs	r5, r5, r3
  401a9a:	b2a4      	uxth	r4, r4
  401a9c:	fbb5 f0fa 	udiv	r0, r5, sl
  401aa0:	fb0a 5510 	mls	r5, sl, r0, r5
  401aa4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  401aa8:	fb00 f909 	mul.w	r9, r0, r9
  401aac:	45a1      	cmp	r9, r4
  401aae:	d909      	bls.n	401ac4 <__udivmoddi4+0x98>
  401ab0:	19e4      	adds	r4, r4, r7
  401ab2:	f100 33ff 	add.w	r3, r0, #4294967295
  401ab6:	f080 810a 	bcs.w	401cce <__udivmoddi4+0x2a2>
  401aba:	45a1      	cmp	r9, r4
  401abc:	f240 8107 	bls.w	401cce <__udivmoddi4+0x2a2>
  401ac0:	3802      	subs	r0, #2
  401ac2:	443c      	add	r4, r7
  401ac4:	eba4 0409 	sub.w	r4, r4, r9
  401ac8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401acc:	2100      	movs	r1, #0
  401ace:	2e00      	cmp	r6, #0
  401ad0:	d061      	beq.n	401b96 <__udivmoddi4+0x16a>
  401ad2:	fa24 f40e 	lsr.w	r4, r4, lr
  401ad6:	2300      	movs	r3, #0
  401ad8:	6034      	str	r4, [r6, #0]
  401ada:	6073      	str	r3, [r6, #4]
  401adc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401ae0:	428b      	cmp	r3, r1
  401ae2:	d907      	bls.n	401af4 <__udivmoddi4+0xc8>
  401ae4:	2e00      	cmp	r6, #0
  401ae6:	d054      	beq.n	401b92 <__udivmoddi4+0x166>
  401ae8:	2100      	movs	r1, #0
  401aea:	e886 0021 	stmia.w	r6, {r0, r5}
  401aee:	4608      	mov	r0, r1
  401af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401af4:	fab3 f183 	clz	r1, r3
  401af8:	2900      	cmp	r1, #0
  401afa:	f040 808e 	bne.w	401c1a <__udivmoddi4+0x1ee>
  401afe:	42ab      	cmp	r3, r5
  401b00:	d302      	bcc.n	401b08 <__udivmoddi4+0xdc>
  401b02:	4282      	cmp	r2, r0
  401b04:	f200 80fa 	bhi.w	401cfc <__udivmoddi4+0x2d0>
  401b08:	1a84      	subs	r4, r0, r2
  401b0a:	eb65 0503 	sbc.w	r5, r5, r3
  401b0e:	2001      	movs	r0, #1
  401b10:	46ac      	mov	ip, r5
  401b12:	2e00      	cmp	r6, #0
  401b14:	d03f      	beq.n	401b96 <__udivmoddi4+0x16a>
  401b16:	e886 1010 	stmia.w	r6, {r4, ip}
  401b1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401b1e:	b912      	cbnz	r2, 401b26 <__udivmoddi4+0xfa>
  401b20:	2701      	movs	r7, #1
  401b22:	fbb7 f7f2 	udiv	r7, r7, r2
  401b26:	fab7 fe87 	clz	lr, r7
  401b2a:	f1be 0f00 	cmp.w	lr, #0
  401b2e:	d134      	bne.n	401b9a <__udivmoddi4+0x16e>
  401b30:	1beb      	subs	r3, r5, r7
  401b32:	0c3a      	lsrs	r2, r7, #16
  401b34:	fa1f fc87 	uxth.w	ip, r7
  401b38:	2101      	movs	r1, #1
  401b3a:	fbb3 f8f2 	udiv	r8, r3, r2
  401b3e:	0c25      	lsrs	r5, r4, #16
  401b40:	fb02 3318 	mls	r3, r2, r8, r3
  401b44:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401b48:	fb0c f308 	mul.w	r3, ip, r8
  401b4c:	42ab      	cmp	r3, r5
  401b4e:	d907      	bls.n	401b60 <__udivmoddi4+0x134>
  401b50:	19ed      	adds	r5, r5, r7
  401b52:	f108 30ff 	add.w	r0, r8, #4294967295
  401b56:	d202      	bcs.n	401b5e <__udivmoddi4+0x132>
  401b58:	42ab      	cmp	r3, r5
  401b5a:	f200 80d1 	bhi.w	401d00 <__udivmoddi4+0x2d4>
  401b5e:	4680      	mov	r8, r0
  401b60:	1aed      	subs	r5, r5, r3
  401b62:	b2a3      	uxth	r3, r4
  401b64:	fbb5 f0f2 	udiv	r0, r5, r2
  401b68:	fb02 5510 	mls	r5, r2, r0, r5
  401b6c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  401b70:	fb0c fc00 	mul.w	ip, ip, r0
  401b74:	45a4      	cmp	ip, r4
  401b76:	d907      	bls.n	401b88 <__udivmoddi4+0x15c>
  401b78:	19e4      	adds	r4, r4, r7
  401b7a:	f100 33ff 	add.w	r3, r0, #4294967295
  401b7e:	d202      	bcs.n	401b86 <__udivmoddi4+0x15a>
  401b80:	45a4      	cmp	ip, r4
  401b82:	f200 80b8 	bhi.w	401cf6 <__udivmoddi4+0x2ca>
  401b86:	4618      	mov	r0, r3
  401b88:	eba4 040c 	sub.w	r4, r4, ip
  401b8c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401b90:	e79d      	b.n	401ace <__udivmoddi4+0xa2>
  401b92:	4631      	mov	r1, r6
  401b94:	4630      	mov	r0, r6
  401b96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401b9a:	f1ce 0420 	rsb	r4, lr, #32
  401b9e:	fa05 f30e 	lsl.w	r3, r5, lr
  401ba2:	fa07 f70e 	lsl.w	r7, r7, lr
  401ba6:	fa20 f804 	lsr.w	r8, r0, r4
  401baa:	0c3a      	lsrs	r2, r7, #16
  401bac:	fa25 f404 	lsr.w	r4, r5, r4
  401bb0:	ea48 0803 	orr.w	r8, r8, r3
  401bb4:	fbb4 f1f2 	udiv	r1, r4, r2
  401bb8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  401bbc:	fb02 4411 	mls	r4, r2, r1, r4
  401bc0:	fa1f fc87 	uxth.w	ip, r7
  401bc4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  401bc8:	fb01 f30c 	mul.w	r3, r1, ip
  401bcc:	42ab      	cmp	r3, r5
  401bce:	fa00 f40e 	lsl.w	r4, r0, lr
  401bd2:	d909      	bls.n	401be8 <__udivmoddi4+0x1bc>
  401bd4:	19ed      	adds	r5, r5, r7
  401bd6:	f101 30ff 	add.w	r0, r1, #4294967295
  401bda:	f080 808a 	bcs.w	401cf2 <__udivmoddi4+0x2c6>
  401bde:	42ab      	cmp	r3, r5
  401be0:	f240 8087 	bls.w	401cf2 <__udivmoddi4+0x2c6>
  401be4:	3902      	subs	r1, #2
  401be6:	443d      	add	r5, r7
  401be8:	1aeb      	subs	r3, r5, r3
  401bea:	fa1f f588 	uxth.w	r5, r8
  401bee:	fbb3 f0f2 	udiv	r0, r3, r2
  401bf2:	fb02 3310 	mls	r3, r2, r0, r3
  401bf6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  401bfa:	fb00 f30c 	mul.w	r3, r0, ip
  401bfe:	42ab      	cmp	r3, r5
  401c00:	d907      	bls.n	401c12 <__udivmoddi4+0x1e6>
  401c02:	19ed      	adds	r5, r5, r7
  401c04:	f100 38ff 	add.w	r8, r0, #4294967295
  401c08:	d26f      	bcs.n	401cea <__udivmoddi4+0x2be>
  401c0a:	42ab      	cmp	r3, r5
  401c0c:	d96d      	bls.n	401cea <__udivmoddi4+0x2be>
  401c0e:	3802      	subs	r0, #2
  401c10:	443d      	add	r5, r7
  401c12:	1aeb      	subs	r3, r5, r3
  401c14:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  401c18:	e78f      	b.n	401b3a <__udivmoddi4+0x10e>
  401c1a:	f1c1 0720 	rsb	r7, r1, #32
  401c1e:	fa22 f807 	lsr.w	r8, r2, r7
  401c22:	408b      	lsls	r3, r1
  401c24:	fa05 f401 	lsl.w	r4, r5, r1
  401c28:	ea48 0303 	orr.w	r3, r8, r3
  401c2c:	fa20 fe07 	lsr.w	lr, r0, r7
  401c30:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  401c34:	40fd      	lsrs	r5, r7
  401c36:	ea4e 0e04 	orr.w	lr, lr, r4
  401c3a:	fbb5 f9fc 	udiv	r9, r5, ip
  401c3e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  401c42:	fb0c 5519 	mls	r5, ip, r9, r5
  401c46:	fa1f f883 	uxth.w	r8, r3
  401c4a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  401c4e:	fb09 f408 	mul.w	r4, r9, r8
  401c52:	42ac      	cmp	r4, r5
  401c54:	fa02 f201 	lsl.w	r2, r2, r1
  401c58:	fa00 fa01 	lsl.w	sl, r0, r1
  401c5c:	d908      	bls.n	401c70 <__udivmoddi4+0x244>
  401c5e:	18ed      	adds	r5, r5, r3
  401c60:	f109 30ff 	add.w	r0, r9, #4294967295
  401c64:	d243      	bcs.n	401cee <__udivmoddi4+0x2c2>
  401c66:	42ac      	cmp	r4, r5
  401c68:	d941      	bls.n	401cee <__udivmoddi4+0x2c2>
  401c6a:	f1a9 0902 	sub.w	r9, r9, #2
  401c6e:	441d      	add	r5, r3
  401c70:	1b2d      	subs	r5, r5, r4
  401c72:	fa1f fe8e 	uxth.w	lr, lr
  401c76:	fbb5 f0fc 	udiv	r0, r5, ip
  401c7a:	fb0c 5510 	mls	r5, ip, r0, r5
  401c7e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  401c82:	fb00 f808 	mul.w	r8, r0, r8
  401c86:	45a0      	cmp	r8, r4
  401c88:	d907      	bls.n	401c9a <__udivmoddi4+0x26e>
  401c8a:	18e4      	adds	r4, r4, r3
  401c8c:	f100 35ff 	add.w	r5, r0, #4294967295
  401c90:	d229      	bcs.n	401ce6 <__udivmoddi4+0x2ba>
  401c92:	45a0      	cmp	r8, r4
  401c94:	d927      	bls.n	401ce6 <__udivmoddi4+0x2ba>
  401c96:	3802      	subs	r0, #2
  401c98:	441c      	add	r4, r3
  401c9a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  401c9e:	eba4 0408 	sub.w	r4, r4, r8
  401ca2:	fba0 8902 	umull	r8, r9, r0, r2
  401ca6:	454c      	cmp	r4, r9
  401ca8:	46c6      	mov	lr, r8
  401caa:	464d      	mov	r5, r9
  401cac:	d315      	bcc.n	401cda <__udivmoddi4+0x2ae>
  401cae:	d012      	beq.n	401cd6 <__udivmoddi4+0x2aa>
  401cb0:	b156      	cbz	r6, 401cc8 <__udivmoddi4+0x29c>
  401cb2:	ebba 030e 	subs.w	r3, sl, lr
  401cb6:	eb64 0405 	sbc.w	r4, r4, r5
  401cba:	fa04 f707 	lsl.w	r7, r4, r7
  401cbe:	40cb      	lsrs	r3, r1
  401cc0:	431f      	orrs	r7, r3
  401cc2:	40cc      	lsrs	r4, r1
  401cc4:	6037      	str	r7, [r6, #0]
  401cc6:	6074      	str	r4, [r6, #4]
  401cc8:	2100      	movs	r1, #0
  401cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401cce:	4618      	mov	r0, r3
  401cd0:	e6f8      	b.n	401ac4 <__udivmoddi4+0x98>
  401cd2:	4690      	mov	r8, r2
  401cd4:	e6e0      	b.n	401a98 <__udivmoddi4+0x6c>
  401cd6:	45c2      	cmp	sl, r8
  401cd8:	d2ea      	bcs.n	401cb0 <__udivmoddi4+0x284>
  401cda:	ebb8 0e02 	subs.w	lr, r8, r2
  401cde:	eb69 0503 	sbc.w	r5, r9, r3
  401ce2:	3801      	subs	r0, #1
  401ce4:	e7e4      	b.n	401cb0 <__udivmoddi4+0x284>
  401ce6:	4628      	mov	r0, r5
  401ce8:	e7d7      	b.n	401c9a <__udivmoddi4+0x26e>
  401cea:	4640      	mov	r0, r8
  401cec:	e791      	b.n	401c12 <__udivmoddi4+0x1e6>
  401cee:	4681      	mov	r9, r0
  401cf0:	e7be      	b.n	401c70 <__udivmoddi4+0x244>
  401cf2:	4601      	mov	r1, r0
  401cf4:	e778      	b.n	401be8 <__udivmoddi4+0x1bc>
  401cf6:	3802      	subs	r0, #2
  401cf8:	443c      	add	r4, r7
  401cfa:	e745      	b.n	401b88 <__udivmoddi4+0x15c>
  401cfc:	4608      	mov	r0, r1
  401cfe:	e708      	b.n	401b12 <__udivmoddi4+0xe6>
  401d00:	f1a8 0802 	sub.w	r8, r8, #2
  401d04:	443d      	add	r5, r7
  401d06:	e72b      	b.n	401b60 <__udivmoddi4+0x134>

00401d08 <__aeabi_idiv0>:
  401d08:	4770      	bx	lr
  401d0a:	bf00      	nop

00401d0c <__libc_init_array>:
  401d0c:	b570      	push	{r4, r5, r6, lr}
  401d0e:	4e0f      	ldr	r6, [pc, #60]	; (401d4c <__libc_init_array+0x40>)
  401d10:	4d0f      	ldr	r5, [pc, #60]	; (401d50 <__libc_init_array+0x44>)
  401d12:	1b76      	subs	r6, r6, r5
  401d14:	10b6      	asrs	r6, r6, #2
  401d16:	bf18      	it	ne
  401d18:	2400      	movne	r4, #0
  401d1a:	d005      	beq.n	401d28 <__libc_init_array+0x1c>
  401d1c:	3401      	adds	r4, #1
  401d1e:	f855 3b04 	ldr.w	r3, [r5], #4
  401d22:	4798      	blx	r3
  401d24:	42a6      	cmp	r6, r4
  401d26:	d1f9      	bne.n	401d1c <__libc_init_array+0x10>
  401d28:	4e0a      	ldr	r6, [pc, #40]	; (401d54 <__libc_init_array+0x48>)
  401d2a:	4d0b      	ldr	r5, [pc, #44]	; (401d58 <__libc_init_array+0x4c>)
  401d2c:	1b76      	subs	r6, r6, r5
  401d2e:	f005 f967 	bl	407000 <_init>
  401d32:	10b6      	asrs	r6, r6, #2
  401d34:	bf18      	it	ne
  401d36:	2400      	movne	r4, #0
  401d38:	d006      	beq.n	401d48 <__libc_init_array+0x3c>
  401d3a:	3401      	adds	r4, #1
  401d3c:	f855 3b04 	ldr.w	r3, [r5], #4
  401d40:	4798      	blx	r3
  401d42:	42a6      	cmp	r6, r4
  401d44:	d1f9      	bne.n	401d3a <__libc_init_array+0x2e>
  401d46:	bd70      	pop	{r4, r5, r6, pc}
  401d48:	bd70      	pop	{r4, r5, r6, pc}
  401d4a:	bf00      	nop
  401d4c:	0040700c 	.word	0x0040700c
  401d50:	0040700c 	.word	0x0040700c
  401d54:	00407014 	.word	0x00407014
  401d58:	0040700c 	.word	0x0040700c

00401d5c <memset>:
  401d5c:	b470      	push	{r4, r5, r6}
  401d5e:	0786      	lsls	r6, r0, #30
  401d60:	d046      	beq.n	401df0 <memset+0x94>
  401d62:	1e54      	subs	r4, r2, #1
  401d64:	2a00      	cmp	r2, #0
  401d66:	d041      	beq.n	401dec <memset+0x90>
  401d68:	b2ca      	uxtb	r2, r1
  401d6a:	4603      	mov	r3, r0
  401d6c:	e002      	b.n	401d74 <memset+0x18>
  401d6e:	f114 34ff 	adds.w	r4, r4, #4294967295
  401d72:	d33b      	bcc.n	401dec <memset+0x90>
  401d74:	f803 2b01 	strb.w	r2, [r3], #1
  401d78:	079d      	lsls	r5, r3, #30
  401d7a:	d1f8      	bne.n	401d6e <memset+0x12>
  401d7c:	2c03      	cmp	r4, #3
  401d7e:	d92e      	bls.n	401dde <memset+0x82>
  401d80:	b2cd      	uxtb	r5, r1
  401d82:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401d86:	2c0f      	cmp	r4, #15
  401d88:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401d8c:	d919      	bls.n	401dc2 <memset+0x66>
  401d8e:	f103 0210 	add.w	r2, r3, #16
  401d92:	4626      	mov	r6, r4
  401d94:	3e10      	subs	r6, #16
  401d96:	2e0f      	cmp	r6, #15
  401d98:	f842 5c10 	str.w	r5, [r2, #-16]
  401d9c:	f842 5c0c 	str.w	r5, [r2, #-12]
  401da0:	f842 5c08 	str.w	r5, [r2, #-8]
  401da4:	f842 5c04 	str.w	r5, [r2, #-4]
  401da8:	f102 0210 	add.w	r2, r2, #16
  401dac:	d8f2      	bhi.n	401d94 <memset+0x38>
  401dae:	f1a4 0210 	sub.w	r2, r4, #16
  401db2:	f022 020f 	bic.w	r2, r2, #15
  401db6:	f004 040f 	and.w	r4, r4, #15
  401dba:	3210      	adds	r2, #16
  401dbc:	2c03      	cmp	r4, #3
  401dbe:	4413      	add	r3, r2
  401dc0:	d90d      	bls.n	401dde <memset+0x82>
  401dc2:	461e      	mov	r6, r3
  401dc4:	4622      	mov	r2, r4
  401dc6:	3a04      	subs	r2, #4
  401dc8:	2a03      	cmp	r2, #3
  401dca:	f846 5b04 	str.w	r5, [r6], #4
  401dce:	d8fa      	bhi.n	401dc6 <memset+0x6a>
  401dd0:	1f22      	subs	r2, r4, #4
  401dd2:	f022 0203 	bic.w	r2, r2, #3
  401dd6:	3204      	adds	r2, #4
  401dd8:	4413      	add	r3, r2
  401dda:	f004 0403 	and.w	r4, r4, #3
  401dde:	b12c      	cbz	r4, 401dec <memset+0x90>
  401de0:	b2c9      	uxtb	r1, r1
  401de2:	441c      	add	r4, r3
  401de4:	f803 1b01 	strb.w	r1, [r3], #1
  401de8:	429c      	cmp	r4, r3
  401dea:	d1fb      	bne.n	401de4 <memset+0x88>
  401dec:	bc70      	pop	{r4, r5, r6}
  401dee:	4770      	bx	lr
  401df0:	4614      	mov	r4, r2
  401df2:	4603      	mov	r3, r0
  401df4:	e7c2      	b.n	401d7c <memset+0x20>
  401df6:	bf00      	nop

00401df8 <sprintf>:
  401df8:	b40e      	push	{r1, r2, r3}
  401dfa:	b5f0      	push	{r4, r5, r6, r7, lr}
  401dfc:	b09c      	sub	sp, #112	; 0x70
  401dfe:	ab21      	add	r3, sp, #132	; 0x84
  401e00:	490f      	ldr	r1, [pc, #60]	; (401e40 <sprintf+0x48>)
  401e02:	f853 2b04 	ldr.w	r2, [r3], #4
  401e06:	9301      	str	r3, [sp, #4]
  401e08:	4605      	mov	r5, r0
  401e0a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401e0e:	6808      	ldr	r0, [r1, #0]
  401e10:	9502      	str	r5, [sp, #8]
  401e12:	f44f 7702 	mov.w	r7, #520	; 0x208
  401e16:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401e1a:	a902      	add	r1, sp, #8
  401e1c:	9506      	str	r5, [sp, #24]
  401e1e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401e22:	9404      	str	r4, [sp, #16]
  401e24:	9407      	str	r4, [sp, #28]
  401e26:	f8ad 6016 	strh.w	r6, [sp, #22]
  401e2a:	f000 f80b 	bl	401e44 <_svfprintf_r>
  401e2e:	9b02      	ldr	r3, [sp, #8]
  401e30:	2200      	movs	r2, #0
  401e32:	701a      	strb	r2, [r3, #0]
  401e34:	b01c      	add	sp, #112	; 0x70
  401e36:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401e3a:	b003      	add	sp, #12
  401e3c:	4770      	bx	lr
  401e3e:	bf00      	nop
  401e40:	20400024 	.word	0x20400024

00401e44 <_svfprintf_r>:
  401e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401e48:	b0c3      	sub	sp, #268	; 0x10c
  401e4a:	460c      	mov	r4, r1
  401e4c:	910b      	str	r1, [sp, #44]	; 0x2c
  401e4e:	4692      	mov	sl, r2
  401e50:	930f      	str	r3, [sp, #60]	; 0x3c
  401e52:	900c      	str	r0, [sp, #48]	; 0x30
  401e54:	f002 fa0c 	bl	404270 <_localeconv_r>
  401e58:	6803      	ldr	r3, [r0, #0]
  401e5a:	931a      	str	r3, [sp, #104]	; 0x68
  401e5c:	4618      	mov	r0, r3
  401e5e:	f003 f8ef 	bl	405040 <strlen>
  401e62:	89a3      	ldrh	r3, [r4, #12]
  401e64:	9019      	str	r0, [sp, #100]	; 0x64
  401e66:	0619      	lsls	r1, r3, #24
  401e68:	d503      	bpl.n	401e72 <_svfprintf_r+0x2e>
  401e6a:	6923      	ldr	r3, [r4, #16]
  401e6c:	2b00      	cmp	r3, #0
  401e6e:	f001 8003 	beq.w	402e78 <_svfprintf_r+0x1034>
  401e72:	2300      	movs	r3, #0
  401e74:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401e78:	9313      	str	r3, [sp, #76]	; 0x4c
  401e7a:	9315      	str	r3, [sp, #84]	; 0x54
  401e7c:	9314      	str	r3, [sp, #80]	; 0x50
  401e7e:	9327      	str	r3, [sp, #156]	; 0x9c
  401e80:	9326      	str	r3, [sp, #152]	; 0x98
  401e82:	9318      	str	r3, [sp, #96]	; 0x60
  401e84:	931b      	str	r3, [sp, #108]	; 0x6c
  401e86:	9309      	str	r3, [sp, #36]	; 0x24
  401e88:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401e8c:	46c8      	mov	r8, r9
  401e8e:	9316      	str	r3, [sp, #88]	; 0x58
  401e90:	9317      	str	r3, [sp, #92]	; 0x5c
  401e92:	f89a 3000 	ldrb.w	r3, [sl]
  401e96:	4654      	mov	r4, sl
  401e98:	b1e3      	cbz	r3, 401ed4 <_svfprintf_r+0x90>
  401e9a:	2b25      	cmp	r3, #37	; 0x25
  401e9c:	d102      	bne.n	401ea4 <_svfprintf_r+0x60>
  401e9e:	e019      	b.n	401ed4 <_svfprintf_r+0x90>
  401ea0:	2b25      	cmp	r3, #37	; 0x25
  401ea2:	d003      	beq.n	401eac <_svfprintf_r+0x68>
  401ea4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401ea8:	2b00      	cmp	r3, #0
  401eaa:	d1f9      	bne.n	401ea0 <_svfprintf_r+0x5c>
  401eac:	eba4 050a 	sub.w	r5, r4, sl
  401eb0:	b185      	cbz	r5, 401ed4 <_svfprintf_r+0x90>
  401eb2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401eb4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401eb6:	f8c8 a000 	str.w	sl, [r8]
  401eba:	3301      	adds	r3, #1
  401ebc:	442a      	add	r2, r5
  401ebe:	2b07      	cmp	r3, #7
  401ec0:	f8c8 5004 	str.w	r5, [r8, #4]
  401ec4:	9227      	str	r2, [sp, #156]	; 0x9c
  401ec6:	9326      	str	r3, [sp, #152]	; 0x98
  401ec8:	dc7f      	bgt.n	401fca <_svfprintf_r+0x186>
  401eca:	f108 0808 	add.w	r8, r8, #8
  401ece:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ed0:	442b      	add	r3, r5
  401ed2:	9309      	str	r3, [sp, #36]	; 0x24
  401ed4:	7823      	ldrb	r3, [r4, #0]
  401ed6:	2b00      	cmp	r3, #0
  401ed8:	d07f      	beq.n	401fda <_svfprintf_r+0x196>
  401eda:	2300      	movs	r3, #0
  401edc:	461a      	mov	r2, r3
  401ede:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401ee2:	4619      	mov	r1, r3
  401ee4:	930d      	str	r3, [sp, #52]	; 0x34
  401ee6:	469b      	mov	fp, r3
  401ee8:	f04f 30ff 	mov.w	r0, #4294967295
  401eec:	7863      	ldrb	r3, [r4, #1]
  401eee:	900a      	str	r0, [sp, #40]	; 0x28
  401ef0:	f104 0a01 	add.w	sl, r4, #1
  401ef4:	f10a 0a01 	add.w	sl, sl, #1
  401ef8:	f1a3 0020 	sub.w	r0, r3, #32
  401efc:	2858      	cmp	r0, #88	; 0x58
  401efe:	f200 83c1 	bhi.w	402684 <_svfprintf_r+0x840>
  401f02:	e8df f010 	tbh	[pc, r0, lsl #1]
  401f06:	0238      	.short	0x0238
  401f08:	03bf03bf 	.word	0x03bf03bf
  401f0c:	03bf0240 	.word	0x03bf0240
  401f10:	03bf03bf 	.word	0x03bf03bf
  401f14:	03bf03bf 	.word	0x03bf03bf
  401f18:	024503bf 	.word	0x024503bf
  401f1c:	03bf0203 	.word	0x03bf0203
  401f20:	026b005d 	.word	0x026b005d
  401f24:	028603bf 	.word	0x028603bf
  401f28:	039d039d 	.word	0x039d039d
  401f2c:	039d039d 	.word	0x039d039d
  401f30:	039d039d 	.word	0x039d039d
  401f34:	039d039d 	.word	0x039d039d
  401f38:	03bf039d 	.word	0x03bf039d
  401f3c:	03bf03bf 	.word	0x03bf03bf
  401f40:	03bf03bf 	.word	0x03bf03bf
  401f44:	03bf03bf 	.word	0x03bf03bf
  401f48:	03bf03bf 	.word	0x03bf03bf
  401f4c:	033703bf 	.word	0x033703bf
  401f50:	03bf0357 	.word	0x03bf0357
  401f54:	03bf0357 	.word	0x03bf0357
  401f58:	03bf03bf 	.word	0x03bf03bf
  401f5c:	039803bf 	.word	0x039803bf
  401f60:	03bf03bf 	.word	0x03bf03bf
  401f64:	03bf03ad 	.word	0x03bf03ad
  401f68:	03bf03bf 	.word	0x03bf03bf
  401f6c:	03bf03bf 	.word	0x03bf03bf
  401f70:	03bf0259 	.word	0x03bf0259
  401f74:	031e03bf 	.word	0x031e03bf
  401f78:	03bf03bf 	.word	0x03bf03bf
  401f7c:	03bf03bf 	.word	0x03bf03bf
  401f80:	03bf03bf 	.word	0x03bf03bf
  401f84:	03bf03bf 	.word	0x03bf03bf
  401f88:	03bf03bf 	.word	0x03bf03bf
  401f8c:	02db02c6 	.word	0x02db02c6
  401f90:	03570357 	.word	0x03570357
  401f94:	028b0357 	.word	0x028b0357
  401f98:	03bf02db 	.word	0x03bf02db
  401f9c:	029003bf 	.word	0x029003bf
  401fa0:	029d03bf 	.word	0x029d03bf
  401fa4:	02b401cc 	.word	0x02b401cc
  401fa8:	03bf0208 	.word	0x03bf0208
  401fac:	03bf01e1 	.word	0x03bf01e1
  401fb0:	03bf007e 	.word	0x03bf007e
  401fb4:	020d03bf 	.word	0x020d03bf
  401fb8:	980d      	ldr	r0, [sp, #52]	; 0x34
  401fba:	930f      	str	r3, [sp, #60]	; 0x3c
  401fbc:	4240      	negs	r0, r0
  401fbe:	900d      	str	r0, [sp, #52]	; 0x34
  401fc0:	f04b 0b04 	orr.w	fp, fp, #4
  401fc4:	f89a 3000 	ldrb.w	r3, [sl]
  401fc8:	e794      	b.n	401ef4 <_svfprintf_r+0xb0>
  401fca:	aa25      	add	r2, sp, #148	; 0x94
  401fcc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401fce:	980c      	ldr	r0, [sp, #48]	; 0x30
  401fd0:	f003 f8a4 	bl	40511c <__ssprint_r>
  401fd4:	b940      	cbnz	r0, 401fe8 <_svfprintf_r+0x1a4>
  401fd6:	46c8      	mov	r8, r9
  401fd8:	e779      	b.n	401ece <_svfprintf_r+0x8a>
  401fda:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401fdc:	b123      	cbz	r3, 401fe8 <_svfprintf_r+0x1a4>
  401fde:	980c      	ldr	r0, [sp, #48]	; 0x30
  401fe0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401fe2:	aa25      	add	r2, sp, #148	; 0x94
  401fe4:	f003 f89a 	bl	40511c <__ssprint_r>
  401fe8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401fea:	899b      	ldrh	r3, [r3, #12]
  401fec:	f013 0f40 	tst.w	r3, #64	; 0x40
  401ff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ff2:	bf18      	it	ne
  401ff4:	f04f 33ff 	movne.w	r3, #4294967295
  401ff8:	9309      	str	r3, [sp, #36]	; 0x24
  401ffa:	9809      	ldr	r0, [sp, #36]	; 0x24
  401ffc:	b043      	add	sp, #268	; 0x10c
  401ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402002:	f01b 0f20 	tst.w	fp, #32
  402006:	9311      	str	r3, [sp, #68]	; 0x44
  402008:	f040 81dd 	bne.w	4023c6 <_svfprintf_r+0x582>
  40200c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40200e:	f01b 0f10 	tst.w	fp, #16
  402012:	4613      	mov	r3, r2
  402014:	f040 856e 	bne.w	402af4 <_svfprintf_r+0xcb0>
  402018:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40201c:	f000 856a 	beq.w	402af4 <_svfprintf_r+0xcb0>
  402020:	8814      	ldrh	r4, [r2, #0]
  402022:	3204      	adds	r2, #4
  402024:	2500      	movs	r5, #0
  402026:	2301      	movs	r3, #1
  402028:	920f      	str	r2, [sp, #60]	; 0x3c
  40202a:	2700      	movs	r7, #0
  40202c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402030:	990a      	ldr	r1, [sp, #40]	; 0x28
  402032:	1c4a      	adds	r2, r1, #1
  402034:	f000 8265 	beq.w	402502 <_svfprintf_r+0x6be>
  402038:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  40203c:	9207      	str	r2, [sp, #28]
  40203e:	ea54 0205 	orrs.w	r2, r4, r5
  402042:	f040 8264 	bne.w	40250e <_svfprintf_r+0x6ca>
  402046:	2900      	cmp	r1, #0
  402048:	f040 843c 	bne.w	4028c4 <_svfprintf_r+0xa80>
  40204c:	2b00      	cmp	r3, #0
  40204e:	f040 84d7 	bne.w	402a00 <_svfprintf_r+0xbbc>
  402052:	f01b 0301 	ands.w	r3, fp, #1
  402056:	930e      	str	r3, [sp, #56]	; 0x38
  402058:	f000 8604 	beq.w	402c64 <_svfprintf_r+0xe20>
  40205c:	ae42      	add	r6, sp, #264	; 0x108
  40205e:	2330      	movs	r3, #48	; 0x30
  402060:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402064:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402066:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402068:	4293      	cmp	r3, r2
  40206a:	bfb8      	it	lt
  40206c:	4613      	movlt	r3, r2
  40206e:	9308      	str	r3, [sp, #32]
  402070:	2300      	movs	r3, #0
  402072:	9312      	str	r3, [sp, #72]	; 0x48
  402074:	b117      	cbz	r7, 40207c <_svfprintf_r+0x238>
  402076:	9b08      	ldr	r3, [sp, #32]
  402078:	3301      	adds	r3, #1
  40207a:	9308      	str	r3, [sp, #32]
  40207c:	9b07      	ldr	r3, [sp, #28]
  40207e:	f013 0302 	ands.w	r3, r3, #2
  402082:	9310      	str	r3, [sp, #64]	; 0x40
  402084:	d002      	beq.n	40208c <_svfprintf_r+0x248>
  402086:	9b08      	ldr	r3, [sp, #32]
  402088:	3302      	adds	r3, #2
  40208a:	9308      	str	r3, [sp, #32]
  40208c:	9b07      	ldr	r3, [sp, #28]
  40208e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402092:	f040 830e 	bne.w	4026b2 <_svfprintf_r+0x86e>
  402096:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402098:	9a08      	ldr	r2, [sp, #32]
  40209a:	eba3 0b02 	sub.w	fp, r3, r2
  40209e:	f1bb 0f00 	cmp.w	fp, #0
  4020a2:	f340 8306 	ble.w	4026b2 <_svfprintf_r+0x86e>
  4020a6:	f1bb 0f10 	cmp.w	fp, #16
  4020aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4020ac:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4020ae:	dd29      	ble.n	402104 <_svfprintf_r+0x2c0>
  4020b0:	4643      	mov	r3, r8
  4020b2:	4621      	mov	r1, r4
  4020b4:	46a8      	mov	r8, r5
  4020b6:	2710      	movs	r7, #16
  4020b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4020ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4020bc:	e006      	b.n	4020cc <_svfprintf_r+0x288>
  4020be:	f1ab 0b10 	sub.w	fp, fp, #16
  4020c2:	f1bb 0f10 	cmp.w	fp, #16
  4020c6:	f103 0308 	add.w	r3, r3, #8
  4020ca:	dd18      	ble.n	4020fe <_svfprintf_r+0x2ba>
  4020cc:	3201      	adds	r2, #1
  4020ce:	48b7      	ldr	r0, [pc, #732]	; (4023ac <_svfprintf_r+0x568>)
  4020d0:	9226      	str	r2, [sp, #152]	; 0x98
  4020d2:	3110      	adds	r1, #16
  4020d4:	2a07      	cmp	r2, #7
  4020d6:	9127      	str	r1, [sp, #156]	; 0x9c
  4020d8:	e883 0081 	stmia.w	r3, {r0, r7}
  4020dc:	ddef      	ble.n	4020be <_svfprintf_r+0x27a>
  4020de:	aa25      	add	r2, sp, #148	; 0x94
  4020e0:	4629      	mov	r1, r5
  4020e2:	4620      	mov	r0, r4
  4020e4:	f003 f81a 	bl	40511c <__ssprint_r>
  4020e8:	2800      	cmp	r0, #0
  4020ea:	f47f af7d 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4020ee:	f1ab 0b10 	sub.w	fp, fp, #16
  4020f2:	f1bb 0f10 	cmp.w	fp, #16
  4020f6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4020f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4020fa:	464b      	mov	r3, r9
  4020fc:	dce6      	bgt.n	4020cc <_svfprintf_r+0x288>
  4020fe:	4645      	mov	r5, r8
  402100:	460c      	mov	r4, r1
  402102:	4698      	mov	r8, r3
  402104:	3201      	adds	r2, #1
  402106:	4ba9      	ldr	r3, [pc, #676]	; (4023ac <_svfprintf_r+0x568>)
  402108:	9226      	str	r2, [sp, #152]	; 0x98
  40210a:	445c      	add	r4, fp
  40210c:	2a07      	cmp	r2, #7
  40210e:	9427      	str	r4, [sp, #156]	; 0x9c
  402110:	e888 0808 	stmia.w	r8, {r3, fp}
  402114:	f300 8498 	bgt.w	402a48 <_svfprintf_r+0xc04>
  402118:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40211c:	f108 0808 	add.w	r8, r8, #8
  402120:	b177      	cbz	r7, 402140 <_svfprintf_r+0x2fc>
  402122:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402124:	3301      	adds	r3, #1
  402126:	3401      	adds	r4, #1
  402128:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  40212c:	2201      	movs	r2, #1
  40212e:	2b07      	cmp	r3, #7
  402130:	9427      	str	r4, [sp, #156]	; 0x9c
  402132:	9326      	str	r3, [sp, #152]	; 0x98
  402134:	e888 0006 	stmia.w	r8, {r1, r2}
  402138:	f300 83db 	bgt.w	4028f2 <_svfprintf_r+0xaae>
  40213c:	f108 0808 	add.w	r8, r8, #8
  402140:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402142:	b16b      	cbz	r3, 402160 <_svfprintf_r+0x31c>
  402144:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402146:	3301      	adds	r3, #1
  402148:	3402      	adds	r4, #2
  40214a:	a91e      	add	r1, sp, #120	; 0x78
  40214c:	2202      	movs	r2, #2
  40214e:	2b07      	cmp	r3, #7
  402150:	9427      	str	r4, [sp, #156]	; 0x9c
  402152:	9326      	str	r3, [sp, #152]	; 0x98
  402154:	e888 0006 	stmia.w	r8, {r1, r2}
  402158:	f300 83d6 	bgt.w	402908 <_svfprintf_r+0xac4>
  40215c:	f108 0808 	add.w	r8, r8, #8
  402160:	2d80      	cmp	r5, #128	; 0x80
  402162:	f000 8315 	beq.w	402790 <_svfprintf_r+0x94c>
  402166:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402168:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40216a:	1a9f      	subs	r7, r3, r2
  40216c:	2f00      	cmp	r7, #0
  40216e:	dd36      	ble.n	4021de <_svfprintf_r+0x39a>
  402170:	2f10      	cmp	r7, #16
  402172:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402174:	4d8e      	ldr	r5, [pc, #568]	; (4023b0 <_svfprintf_r+0x56c>)
  402176:	dd27      	ble.n	4021c8 <_svfprintf_r+0x384>
  402178:	4642      	mov	r2, r8
  40217a:	4621      	mov	r1, r4
  40217c:	46b0      	mov	r8, r6
  40217e:	f04f 0b10 	mov.w	fp, #16
  402182:	462e      	mov	r6, r5
  402184:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402186:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402188:	e004      	b.n	402194 <_svfprintf_r+0x350>
  40218a:	3f10      	subs	r7, #16
  40218c:	2f10      	cmp	r7, #16
  40218e:	f102 0208 	add.w	r2, r2, #8
  402192:	dd15      	ble.n	4021c0 <_svfprintf_r+0x37c>
  402194:	3301      	adds	r3, #1
  402196:	3110      	adds	r1, #16
  402198:	2b07      	cmp	r3, #7
  40219a:	9127      	str	r1, [sp, #156]	; 0x9c
  40219c:	9326      	str	r3, [sp, #152]	; 0x98
  40219e:	e882 0840 	stmia.w	r2, {r6, fp}
  4021a2:	ddf2      	ble.n	40218a <_svfprintf_r+0x346>
  4021a4:	aa25      	add	r2, sp, #148	; 0x94
  4021a6:	4629      	mov	r1, r5
  4021a8:	4620      	mov	r0, r4
  4021aa:	f002 ffb7 	bl	40511c <__ssprint_r>
  4021ae:	2800      	cmp	r0, #0
  4021b0:	f47f af1a 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4021b4:	3f10      	subs	r7, #16
  4021b6:	2f10      	cmp	r7, #16
  4021b8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4021ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021bc:	464a      	mov	r2, r9
  4021be:	dce9      	bgt.n	402194 <_svfprintf_r+0x350>
  4021c0:	4635      	mov	r5, r6
  4021c2:	460c      	mov	r4, r1
  4021c4:	4646      	mov	r6, r8
  4021c6:	4690      	mov	r8, r2
  4021c8:	3301      	adds	r3, #1
  4021ca:	443c      	add	r4, r7
  4021cc:	2b07      	cmp	r3, #7
  4021ce:	9427      	str	r4, [sp, #156]	; 0x9c
  4021d0:	9326      	str	r3, [sp, #152]	; 0x98
  4021d2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4021d6:	f300 8381 	bgt.w	4028dc <_svfprintf_r+0xa98>
  4021da:	f108 0808 	add.w	r8, r8, #8
  4021de:	9b07      	ldr	r3, [sp, #28]
  4021e0:	05df      	lsls	r7, r3, #23
  4021e2:	f100 8268 	bmi.w	4026b6 <_svfprintf_r+0x872>
  4021e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021e8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4021ea:	f8c8 6000 	str.w	r6, [r8]
  4021ee:	3301      	adds	r3, #1
  4021f0:	440c      	add	r4, r1
  4021f2:	2b07      	cmp	r3, #7
  4021f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4021f6:	f8c8 1004 	str.w	r1, [r8, #4]
  4021fa:	9326      	str	r3, [sp, #152]	; 0x98
  4021fc:	f300 834d 	bgt.w	40289a <_svfprintf_r+0xa56>
  402200:	f108 0808 	add.w	r8, r8, #8
  402204:	9b07      	ldr	r3, [sp, #28]
  402206:	075b      	lsls	r3, r3, #29
  402208:	d53a      	bpl.n	402280 <_svfprintf_r+0x43c>
  40220a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40220c:	9a08      	ldr	r2, [sp, #32]
  40220e:	1a9d      	subs	r5, r3, r2
  402210:	2d00      	cmp	r5, #0
  402212:	dd35      	ble.n	402280 <_svfprintf_r+0x43c>
  402214:	2d10      	cmp	r5, #16
  402216:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402218:	dd20      	ble.n	40225c <_svfprintf_r+0x418>
  40221a:	2610      	movs	r6, #16
  40221c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40221e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402222:	e004      	b.n	40222e <_svfprintf_r+0x3ea>
  402224:	3d10      	subs	r5, #16
  402226:	2d10      	cmp	r5, #16
  402228:	f108 0808 	add.w	r8, r8, #8
  40222c:	dd16      	ble.n	40225c <_svfprintf_r+0x418>
  40222e:	3301      	adds	r3, #1
  402230:	4a5e      	ldr	r2, [pc, #376]	; (4023ac <_svfprintf_r+0x568>)
  402232:	9326      	str	r3, [sp, #152]	; 0x98
  402234:	3410      	adds	r4, #16
  402236:	2b07      	cmp	r3, #7
  402238:	9427      	str	r4, [sp, #156]	; 0x9c
  40223a:	e888 0044 	stmia.w	r8, {r2, r6}
  40223e:	ddf1      	ble.n	402224 <_svfprintf_r+0x3e0>
  402240:	aa25      	add	r2, sp, #148	; 0x94
  402242:	4659      	mov	r1, fp
  402244:	4638      	mov	r0, r7
  402246:	f002 ff69 	bl	40511c <__ssprint_r>
  40224a:	2800      	cmp	r0, #0
  40224c:	f47f aecc 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402250:	3d10      	subs	r5, #16
  402252:	2d10      	cmp	r5, #16
  402254:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402256:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402258:	46c8      	mov	r8, r9
  40225a:	dce8      	bgt.n	40222e <_svfprintf_r+0x3ea>
  40225c:	3301      	adds	r3, #1
  40225e:	4a53      	ldr	r2, [pc, #332]	; (4023ac <_svfprintf_r+0x568>)
  402260:	9326      	str	r3, [sp, #152]	; 0x98
  402262:	442c      	add	r4, r5
  402264:	2b07      	cmp	r3, #7
  402266:	9427      	str	r4, [sp, #156]	; 0x9c
  402268:	e888 0024 	stmia.w	r8, {r2, r5}
  40226c:	dd08      	ble.n	402280 <_svfprintf_r+0x43c>
  40226e:	aa25      	add	r2, sp, #148	; 0x94
  402270:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402272:	980c      	ldr	r0, [sp, #48]	; 0x30
  402274:	f002 ff52 	bl	40511c <__ssprint_r>
  402278:	2800      	cmp	r0, #0
  40227a:	f47f aeb5 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  40227e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402280:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402282:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402284:	9908      	ldr	r1, [sp, #32]
  402286:	428a      	cmp	r2, r1
  402288:	bfac      	ite	ge
  40228a:	189b      	addge	r3, r3, r2
  40228c:	185b      	addlt	r3, r3, r1
  40228e:	9309      	str	r3, [sp, #36]	; 0x24
  402290:	2c00      	cmp	r4, #0
  402292:	f040 830d 	bne.w	4028b0 <_svfprintf_r+0xa6c>
  402296:	2300      	movs	r3, #0
  402298:	9326      	str	r3, [sp, #152]	; 0x98
  40229a:	46c8      	mov	r8, r9
  40229c:	e5f9      	b.n	401e92 <_svfprintf_r+0x4e>
  40229e:	9311      	str	r3, [sp, #68]	; 0x44
  4022a0:	f01b 0320 	ands.w	r3, fp, #32
  4022a4:	f040 81e3 	bne.w	40266e <_svfprintf_r+0x82a>
  4022a8:	f01b 0210 	ands.w	r2, fp, #16
  4022ac:	f040 842e 	bne.w	402b0c <_svfprintf_r+0xcc8>
  4022b0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4022b4:	f000 842a 	beq.w	402b0c <_svfprintf_r+0xcc8>
  4022b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4022ba:	4613      	mov	r3, r2
  4022bc:	460a      	mov	r2, r1
  4022be:	3204      	adds	r2, #4
  4022c0:	880c      	ldrh	r4, [r1, #0]
  4022c2:	920f      	str	r2, [sp, #60]	; 0x3c
  4022c4:	2500      	movs	r5, #0
  4022c6:	e6b0      	b.n	40202a <_svfprintf_r+0x1e6>
  4022c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4022ca:	9311      	str	r3, [sp, #68]	; 0x44
  4022cc:	6816      	ldr	r6, [r2, #0]
  4022ce:	2400      	movs	r4, #0
  4022d0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4022d4:	1d15      	adds	r5, r2, #4
  4022d6:	2e00      	cmp	r6, #0
  4022d8:	f000 86a7 	beq.w	40302a <_svfprintf_r+0x11e6>
  4022dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4022de:	1c53      	adds	r3, r2, #1
  4022e0:	f000 8609 	beq.w	402ef6 <_svfprintf_r+0x10b2>
  4022e4:	4621      	mov	r1, r4
  4022e6:	4630      	mov	r0, r6
  4022e8:	f002 fa8a 	bl	404800 <memchr>
  4022ec:	2800      	cmp	r0, #0
  4022ee:	f000 86e1 	beq.w	4030b4 <_svfprintf_r+0x1270>
  4022f2:	1b83      	subs	r3, r0, r6
  4022f4:	930e      	str	r3, [sp, #56]	; 0x38
  4022f6:	940a      	str	r4, [sp, #40]	; 0x28
  4022f8:	950f      	str	r5, [sp, #60]	; 0x3c
  4022fa:	f8cd b01c 	str.w	fp, [sp, #28]
  4022fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402302:	9308      	str	r3, [sp, #32]
  402304:	9412      	str	r4, [sp, #72]	; 0x48
  402306:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40230a:	e6b3      	b.n	402074 <_svfprintf_r+0x230>
  40230c:	f89a 3000 	ldrb.w	r3, [sl]
  402310:	2201      	movs	r2, #1
  402312:	212b      	movs	r1, #43	; 0x2b
  402314:	e5ee      	b.n	401ef4 <_svfprintf_r+0xb0>
  402316:	f04b 0b20 	orr.w	fp, fp, #32
  40231a:	f89a 3000 	ldrb.w	r3, [sl]
  40231e:	e5e9      	b.n	401ef4 <_svfprintf_r+0xb0>
  402320:	9311      	str	r3, [sp, #68]	; 0x44
  402322:	2a00      	cmp	r2, #0
  402324:	f040 8795 	bne.w	403252 <_svfprintf_r+0x140e>
  402328:	4b22      	ldr	r3, [pc, #136]	; (4023b4 <_svfprintf_r+0x570>)
  40232a:	9318      	str	r3, [sp, #96]	; 0x60
  40232c:	f01b 0f20 	tst.w	fp, #32
  402330:	f040 8111 	bne.w	402556 <_svfprintf_r+0x712>
  402334:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402336:	f01b 0f10 	tst.w	fp, #16
  40233a:	4613      	mov	r3, r2
  40233c:	f040 83e1 	bne.w	402b02 <_svfprintf_r+0xcbe>
  402340:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402344:	f000 83dd 	beq.w	402b02 <_svfprintf_r+0xcbe>
  402348:	3304      	adds	r3, #4
  40234a:	8814      	ldrh	r4, [r2, #0]
  40234c:	930f      	str	r3, [sp, #60]	; 0x3c
  40234e:	2500      	movs	r5, #0
  402350:	f01b 0f01 	tst.w	fp, #1
  402354:	f000 810c 	beq.w	402570 <_svfprintf_r+0x72c>
  402358:	ea54 0305 	orrs.w	r3, r4, r5
  40235c:	f000 8108 	beq.w	402570 <_svfprintf_r+0x72c>
  402360:	2330      	movs	r3, #48	; 0x30
  402362:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402366:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40236a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40236e:	f04b 0b02 	orr.w	fp, fp, #2
  402372:	2302      	movs	r3, #2
  402374:	e659      	b.n	40202a <_svfprintf_r+0x1e6>
  402376:	f89a 3000 	ldrb.w	r3, [sl]
  40237a:	2900      	cmp	r1, #0
  40237c:	f47f adba 	bne.w	401ef4 <_svfprintf_r+0xb0>
  402380:	2201      	movs	r2, #1
  402382:	2120      	movs	r1, #32
  402384:	e5b6      	b.n	401ef4 <_svfprintf_r+0xb0>
  402386:	f04b 0b01 	orr.w	fp, fp, #1
  40238a:	f89a 3000 	ldrb.w	r3, [sl]
  40238e:	e5b1      	b.n	401ef4 <_svfprintf_r+0xb0>
  402390:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402392:	6823      	ldr	r3, [r4, #0]
  402394:	930d      	str	r3, [sp, #52]	; 0x34
  402396:	4618      	mov	r0, r3
  402398:	2800      	cmp	r0, #0
  40239a:	4623      	mov	r3, r4
  40239c:	f103 0304 	add.w	r3, r3, #4
  4023a0:	f6ff ae0a 	blt.w	401fb8 <_svfprintf_r+0x174>
  4023a4:	930f      	str	r3, [sp, #60]	; 0x3c
  4023a6:	f89a 3000 	ldrb.w	r3, [sl]
  4023aa:	e5a3      	b.n	401ef4 <_svfprintf_r+0xb0>
  4023ac:	00406dc0 	.word	0x00406dc0
  4023b0:	00406dd0 	.word	0x00406dd0
  4023b4:	00406da0 	.word	0x00406da0
  4023b8:	f04b 0b10 	orr.w	fp, fp, #16
  4023bc:	f01b 0f20 	tst.w	fp, #32
  4023c0:	9311      	str	r3, [sp, #68]	; 0x44
  4023c2:	f43f ae23 	beq.w	40200c <_svfprintf_r+0x1c8>
  4023c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4023c8:	3507      	adds	r5, #7
  4023ca:	f025 0307 	bic.w	r3, r5, #7
  4023ce:	f103 0208 	add.w	r2, r3, #8
  4023d2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4023d6:	920f      	str	r2, [sp, #60]	; 0x3c
  4023d8:	2301      	movs	r3, #1
  4023da:	e626      	b.n	40202a <_svfprintf_r+0x1e6>
  4023dc:	f89a 3000 	ldrb.w	r3, [sl]
  4023e0:	2b2a      	cmp	r3, #42	; 0x2a
  4023e2:	f10a 0401 	add.w	r4, sl, #1
  4023e6:	f000 8727 	beq.w	403238 <_svfprintf_r+0x13f4>
  4023ea:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4023ee:	2809      	cmp	r0, #9
  4023f0:	46a2      	mov	sl, r4
  4023f2:	f200 86ad 	bhi.w	403150 <_svfprintf_r+0x130c>
  4023f6:	2300      	movs	r3, #0
  4023f8:	461c      	mov	r4, r3
  4023fa:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4023fe:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402402:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402406:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40240a:	2809      	cmp	r0, #9
  40240c:	d9f5      	bls.n	4023fa <_svfprintf_r+0x5b6>
  40240e:	940a      	str	r4, [sp, #40]	; 0x28
  402410:	e572      	b.n	401ef8 <_svfprintf_r+0xb4>
  402412:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402416:	f89a 3000 	ldrb.w	r3, [sl]
  40241a:	e56b      	b.n	401ef4 <_svfprintf_r+0xb0>
  40241c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402420:	f89a 3000 	ldrb.w	r3, [sl]
  402424:	e566      	b.n	401ef4 <_svfprintf_r+0xb0>
  402426:	f89a 3000 	ldrb.w	r3, [sl]
  40242a:	2b6c      	cmp	r3, #108	; 0x6c
  40242c:	bf03      	ittte	eq
  40242e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402432:	f04b 0b20 	orreq.w	fp, fp, #32
  402436:	f10a 0a01 	addeq.w	sl, sl, #1
  40243a:	f04b 0b10 	orrne.w	fp, fp, #16
  40243e:	e559      	b.n	401ef4 <_svfprintf_r+0xb0>
  402440:	2a00      	cmp	r2, #0
  402442:	f040 8711 	bne.w	403268 <_svfprintf_r+0x1424>
  402446:	f01b 0f20 	tst.w	fp, #32
  40244a:	f040 84f9 	bne.w	402e40 <_svfprintf_r+0xffc>
  40244e:	f01b 0f10 	tst.w	fp, #16
  402452:	f040 84ac 	bne.w	402dae <_svfprintf_r+0xf6a>
  402456:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40245a:	f000 84a8 	beq.w	402dae <_svfprintf_r+0xf6a>
  40245e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402460:	6813      	ldr	r3, [r2, #0]
  402462:	3204      	adds	r2, #4
  402464:	920f      	str	r2, [sp, #60]	; 0x3c
  402466:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40246a:	801a      	strh	r2, [r3, #0]
  40246c:	e511      	b.n	401e92 <_svfprintf_r+0x4e>
  40246e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402470:	4bb3      	ldr	r3, [pc, #716]	; (402740 <_svfprintf_r+0x8fc>)
  402472:	680c      	ldr	r4, [r1, #0]
  402474:	9318      	str	r3, [sp, #96]	; 0x60
  402476:	2230      	movs	r2, #48	; 0x30
  402478:	2378      	movs	r3, #120	; 0x78
  40247a:	3104      	adds	r1, #4
  40247c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402480:	9311      	str	r3, [sp, #68]	; 0x44
  402482:	f04b 0b02 	orr.w	fp, fp, #2
  402486:	910f      	str	r1, [sp, #60]	; 0x3c
  402488:	2500      	movs	r5, #0
  40248a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40248e:	2302      	movs	r3, #2
  402490:	e5cb      	b.n	40202a <_svfprintf_r+0x1e6>
  402492:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402494:	9311      	str	r3, [sp, #68]	; 0x44
  402496:	680a      	ldr	r2, [r1, #0]
  402498:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40249c:	2300      	movs	r3, #0
  40249e:	460a      	mov	r2, r1
  4024a0:	461f      	mov	r7, r3
  4024a2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4024a6:	3204      	adds	r2, #4
  4024a8:	2301      	movs	r3, #1
  4024aa:	9308      	str	r3, [sp, #32]
  4024ac:	f8cd b01c 	str.w	fp, [sp, #28]
  4024b0:	970a      	str	r7, [sp, #40]	; 0x28
  4024b2:	9712      	str	r7, [sp, #72]	; 0x48
  4024b4:	920f      	str	r2, [sp, #60]	; 0x3c
  4024b6:	930e      	str	r3, [sp, #56]	; 0x38
  4024b8:	ae28      	add	r6, sp, #160	; 0xa0
  4024ba:	e5df      	b.n	40207c <_svfprintf_r+0x238>
  4024bc:	9311      	str	r3, [sp, #68]	; 0x44
  4024be:	2a00      	cmp	r2, #0
  4024c0:	f040 86ea 	bne.w	403298 <_svfprintf_r+0x1454>
  4024c4:	f01b 0f20 	tst.w	fp, #32
  4024c8:	d15d      	bne.n	402586 <_svfprintf_r+0x742>
  4024ca:	f01b 0f10 	tst.w	fp, #16
  4024ce:	f040 8308 	bne.w	402ae2 <_svfprintf_r+0xc9e>
  4024d2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024d6:	f000 8304 	beq.w	402ae2 <_svfprintf_r+0xc9e>
  4024da:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4024dc:	f9b1 4000 	ldrsh.w	r4, [r1]
  4024e0:	3104      	adds	r1, #4
  4024e2:	17e5      	asrs	r5, r4, #31
  4024e4:	4622      	mov	r2, r4
  4024e6:	462b      	mov	r3, r5
  4024e8:	910f      	str	r1, [sp, #60]	; 0x3c
  4024ea:	2a00      	cmp	r2, #0
  4024ec:	f173 0300 	sbcs.w	r3, r3, #0
  4024f0:	db58      	blt.n	4025a4 <_svfprintf_r+0x760>
  4024f2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4024f4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4024f8:	1c4a      	adds	r2, r1, #1
  4024fa:	f04f 0301 	mov.w	r3, #1
  4024fe:	f47f ad9b 	bne.w	402038 <_svfprintf_r+0x1f4>
  402502:	ea54 0205 	orrs.w	r2, r4, r5
  402506:	f000 81df 	beq.w	4028c8 <_svfprintf_r+0xa84>
  40250a:	f8cd b01c 	str.w	fp, [sp, #28]
  40250e:	2b01      	cmp	r3, #1
  402510:	f000 827b 	beq.w	402a0a <_svfprintf_r+0xbc6>
  402514:	2b02      	cmp	r3, #2
  402516:	f040 8206 	bne.w	402926 <_svfprintf_r+0xae2>
  40251a:	9818      	ldr	r0, [sp, #96]	; 0x60
  40251c:	464e      	mov	r6, r9
  40251e:	0923      	lsrs	r3, r4, #4
  402520:	f004 010f 	and.w	r1, r4, #15
  402524:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402528:	092a      	lsrs	r2, r5, #4
  40252a:	461c      	mov	r4, r3
  40252c:	4615      	mov	r5, r2
  40252e:	5c43      	ldrb	r3, [r0, r1]
  402530:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402534:	ea54 0305 	orrs.w	r3, r4, r5
  402538:	d1f1      	bne.n	40251e <_svfprintf_r+0x6da>
  40253a:	eba9 0306 	sub.w	r3, r9, r6
  40253e:	930e      	str	r3, [sp, #56]	; 0x38
  402540:	e590      	b.n	402064 <_svfprintf_r+0x220>
  402542:	9311      	str	r3, [sp, #68]	; 0x44
  402544:	2a00      	cmp	r2, #0
  402546:	f040 86a3 	bne.w	403290 <_svfprintf_r+0x144c>
  40254a:	4b7e      	ldr	r3, [pc, #504]	; (402744 <_svfprintf_r+0x900>)
  40254c:	9318      	str	r3, [sp, #96]	; 0x60
  40254e:	f01b 0f20 	tst.w	fp, #32
  402552:	f43f aeef 	beq.w	402334 <_svfprintf_r+0x4f0>
  402556:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402558:	3507      	adds	r5, #7
  40255a:	f025 0307 	bic.w	r3, r5, #7
  40255e:	f103 0208 	add.w	r2, r3, #8
  402562:	f01b 0f01 	tst.w	fp, #1
  402566:	920f      	str	r2, [sp, #60]	; 0x3c
  402568:	e9d3 4500 	ldrd	r4, r5, [r3]
  40256c:	f47f aef4 	bne.w	402358 <_svfprintf_r+0x514>
  402570:	2302      	movs	r3, #2
  402572:	e55a      	b.n	40202a <_svfprintf_r+0x1e6>
  402574:	9311      	str	r3, [sp, #68]	; 0x44
  402576:	2a00      	cmp	r2, #0
  402578:	f040 8686 	bne.w	403288 <_svfprintf_r+0x1444>
  40257c:	f04b 0b10 	orr.w	fp, fp, #16
  402580:	f01b 0f20 	tst.w	fp, #32
  402584:	d0a1      	beq.n	4024ca <_svfprintf_r+0x686>
  402586:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402588:	3507      	adds	r5, #7
  40258a:	f025 0507 	bic.w	r5, r5, #7
  40258e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402592:	2a00      	cmp	r2, #0
  402594:	f105 0108 	add.w	r1, r5, #8
  402598:	461d      	mov	r5, r3
  40259a:	f173 0300 	sbcs.w	r3, r3, #0
  40259e:	910f      	str	r1, [sp, #60]	; 0x3c
  4025a0:	4614      	mov	r4, r2
  4025a2:	daa6      	bge.n	4024f2 <_svfprintf_r+0x6ae>
  4025a4:	272d      	movs	r7, #45	; 0x2d
  4025a6:	4264      	negs	r4, r4
  4025a8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4025ac:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4025b0:	2301      	movs	r3, #1
  4025b2:	e53d      	b.n	402030 <_svfprintf_r+0x1ec>
  4025b4:	9311      	str	r3, [sp, #68]	; 0x44
  4025b6:	2a00      	cmp	r2, #0
  4025b8:	f040 8662 	bne.w	403280 <_svfprintf_r+0x143c>
  4025bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4025be:	3507      	adds	r5, #7
  4025c0:	f025 0307 	bic.w	r3, r5, #7
  4025c4:	f103 0208 	add.w	r2, r3, #8
  4025c8:	920f      	str	r2, [sp, #60]	; 0x3c
  4025ca:	681a      	ldr	r2, [r3, #0]
  4025cc:	9215      	str	r2, [sp, #84]	; 0x54
  4025ce:	685b      	ldr	r3, [r3, #4]
  4025d0:	9314      	str	r3, [sp, #80]	; 0x50
  4025d2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4025d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4025d6:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4025da:	4628      	mov	r0, r5
  4025dc:	4621      	mov	r1, r4
  4025de:	f04f 32ff 	mov.w	r2, #4294967295
  4025e2:	4b59      	ldr	r3, [pc, #356]	; (402748 <_svfprintf_r+0x904>)
  4025e4:	f003 fe60 	bl	4062a8 <__aeabi_dcmpun>
  4025e8:	2800      	cmp	r0, #0
  4025ea:	f040 834a 	bne.w	402c82 <_svfprintf_r+0xe3e>
  4025ee:	4628      	mov	r0, r5
  4025f0:	4621      	mov	r1, r4
  4025f2:	f04f 32ff 	mov.w	r2, #4294967295
  4025f6:	4b54      	ldr	r3, [pc, #336]	; (402748 <_svfprintf_r+0x904>)
  4025f8:	f003 fe38 	bl	40626c <__aeabi_dcmple>
  4025fc:	2800      	cmp	r0, #0
  4025fe:	f040 8340 	bne.w	402c82 <_svfprintf_r+0xe3e>
  402602:	a815      	add	r0, sp, #84	; 0x54
  402604:	c80d      	ldmia	r0, {r0, r2, r3}
  402606:	9914      	ldr	r1, [sp, #80]	; 0x50
  402608:	f003 fe26 	bl	406258 <__aeabi_dcmplt>
  40260c:	2800      	cmp	r0, #0
  40260e:	f040 8530 	bne.w	403072 <_svfprintf_r+0x122e>
  402612:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402616:	4e4d      	ldr	r6, [pc, #308]	; (40274c <_svfprintf_r+0x908>)
  402618:	4b4d      	ldr	r3, [pc, #308]	; (402750 <_svfprintf_r+0x90c>)
  40261a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40261e:	9007      	str	r0, [sp, #28]
  402620:	9811      	ldr	r0, [sp, #68]	; 0x44
  402622:	2203      	movs	r2, #3
  402624:	2100      	movs	r1, #0
  402626:	9208      	str	r2, [sp, #32]
  402628:	910a      	str	r1, [sp, #40]	; 0x28
  40262a:	2847      	cmp	r0, #71	; 0x47
  40262c:	bfd8      	it	le
  40262e:	461e      	movle	r6, r3
  402630:	920e      	str	r2, [sp, #56]	; 0x38
  402632:	9112      	str	r1, [sp, #72]	; 0x48
  402634:	e51e      	b.n	402074 <_svfprintf_r+0x230>
  402636:	f04b 0b08 	orr.w	fp, fp, #8
  40263a:	f89a 3000 	ldrb.w	r3, [sl]
  40263e:	e459      	b.n	401ef4 <_svfprintf_r+0xb0>
  402640:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402644:	2300      	movs	r3, #0
  402646:	461c      	mov	r4, r3
  402648:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40264c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402650:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402654:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402658:	2809      	cmp	r0, #9
  40265a:	d9f5      	bls.n	402648 <_svfprintf_r+0x804>
  40265c:	940d      	str	r4, [sp, #52]	; 0x34
  40265e:	e44b      	b.n	401ef8 <_svfprintf_r+0xb4>
  402660:	f04b 0b10 	orr.w	fp, fp, #16
  402664:	9311      	str	r3, [sp, #68]	; 0x44
  402666:	f01b 0320 	ands.w	r3, fp, #32
  40266a:	f43f ae1d 	beq.w	4022a8 <_svfprintf_r+0x464>
  40266e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402670:	3507      	adds	r5, #7
  402672:	f025 0307 	bic.w	r3, r5, #7
  402676:	f103 0208 	add.w	r2, r3, #8
  40267a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40267e:	920f      	str	r2, [sp, #60]	; 0x3c
  402680:	2300      	movs	r3, #0
  402682:	e4d2      	b.n	40202a <_svfprintf_r+0x1e6>
  402684:	9311      	str	r3, [sp, #68]	; 0x44
  402686:	2a00      	cmp	r2, #0
  402688:	f040 85e7 	bne.w	40325a <_svfprintf_r+0x1416>
  40268c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40268e:	2a00      	cmp	r2, #0
  402690:	f43f aca3 	beq.w	401fda <_svfprintf_r+0x196>
  402694:	2300      	movs	r3, #0
  402696:	2101      	movs	r1, #1
  402698:	461f      	mov	r7, r3
  40269a:	9108      	str	r1, [sp, #32]
  40269c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4026a0:	f8cd b01c 	str.w	fp, [sp, #28]
  4026a4:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4026a8:	930a      	str	r3, [sp, #40]	; 0x28
  4026aa:	9312      	str	r3, [sp, #72]	; 0x48
  4026ac:	910e      	str	r1, [sp, #56]	; 0x38
  4026ae:	ae28      	add	r6, sp, #160	; 0xa0
  4026b0:	e4e4      	b.n	40207c <_svfprintf_r+0x238>
  4026b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026b4:	e534      	b.n	402120 <_svfprintf_r+0x2dc>
  4026b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4026b8:	2b65      	cmp	r3, #101	; 0x65
  4026ba:	f340 80a7 	ble.w	40280c <_svfprintf_r+0x9c8>
  4026be:	a815      	add	r0, sp, #84	; 0x54
  4026c0:	c80d      	ldmia	r0, {r0, r2, r3}
  4026c2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4026c4:	f003 fdbe 	bl	406244 <__aeabi_dcmpeq>
  4026c8:	2800      	cmp	r0, #0
  4026ca:	f000 8150 	beq.w	40296e <_svfprintf_r+0xb2a>
  4026ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026d0:	4a20      	ldr	r2, [pc, #128]	; (402754 <_svfprintf_r+0x910>)
  4026d2:	f8c8 2000 	str.w	r2, [r8]
  4026d6:	3301      	adds	r3, #1
  4026d8:	3401      	adds	r4, #1
  4026da:	2201      	movs	r2, #1
  4026dc:	2b07      	cmp	r3, #7
  4026de:	9427      	str	r4, [sp, #156]	; 0x9c
  4026e0:	9326      	str	r3, [sp, #152]	; 0x98
  4026e2:	f8c8 2004 	str.w	r2, [r8, #4]
  4026e6:	f300 836a 	bgt.w	402dbe <_svfprintf_r+0xf7a>
  4026ea:	f108 0808 	add.w	r8, r8, #8
  4026ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4026f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4026f2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026f4:	4293      	cmp	r3, r2
  4026f6:	db03      	blt.n	402700 <_svfprintf_r+0x8bc>
  4026f8:	9b07      	ldr	r3, [sp, #28]
  4026fa:	07dd      	lsls	r5, r3, #31
  4026fc:	f57f ad82 	bpl.w	402204 <_svfprintf_r+0x3c0>
  402700:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402702:	9919      	ldr	r1, [sp, #100]	; 0x64
  402704:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402706:	f8c8 2000 	str.w	r2, [r8]
  40270a:	3301      	adds	r3, #1
  40270c:	440c      	add	r4, r1
  40270e:	2b07      	cmp	r3, #7
  402710:	f8c8 1004 	str.w	r1, [r8, #4]
  402714:	9427      	str	r4, [sp, #156]	; 0x9c
  402716:	9326      	str	r3, [sp, #152]	; 0x98
  402718:	f300 839e 	bgt.w	402e58 <_svfprintf_r+0x1014>
  40271c:	f108 0808 	add.w	r8, r8, #8
  402720:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402722:	1e5e      	subs	r6, r3, #1
  402724:	2e00      	cmp	r6, #0
  402726:	f77f ad6d 	ble.w	402204 <_svfprintf_r+0x3c0>
  40272a:	2e10      	cmp	r6, #16
  40272c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40272e:	4d0a      	ldr	r5, [pc, #40]	; (402758 <_svfprintf_r+0x914>)
  402730:	f340 81f5 	ble.w	402b1e <_svfprintf_r+0xcda>
  402734:	4622      	mov	r2, r4
  402736:	2710      	movs	r7, #16
  402738:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40273c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40273e:	e013      	b.n	402768 <_svfprintf_r+0x924>
  402740:	00406da0 	.word	0x00406da0
  402744:	00406d8c 	.word	0x00406d8c
  402748:	7fefffff 	.word	0x7fefffff
  40274c:	00406d80 	.word	0x00406d80
  402750:	00406d7c 	.word	0x00406d7c
  402754:	00406dbc 	.word	0x00406dbc
  402758:	00406dd0 	.word	0x00406dd0
  40275c:	f108 0808 	add.w	r8, r8, #8
  402760:	3e10      	subs	r6, #16
  402762:	2e10      	cmp	r6, #16
  402764:	f340 81da 	ble.w	402b1c <_svfprintf_r+0xcd8>
  402768:	3301      	adds	r3, #1
  40276a:	3210      	adds	r2, #16
  40276c:	2b07      	cmp	r3, #7
  40276e:	9227      	str	r2, [sp, #156]	; 0x9c
  402770:	9326      	str	r3, [sp, #152]	; 0x98
  402772:	e888 00a0 	stmia.w	r8, {r5, r7}
  402776:	ddf1      	ble.n	40275c <_svfprintf_r+0x918>
  402778:	aa25      	add	r2, sp, #148	; 0x94
  40277a:	4621      	mov	r1, r4
  40277c:	4658      	mov	r0, fp
  40277e:	f002 fccd 	bl	40511c <__ssprint_r>
  402782:	2800      	cmp	r0, #0
  402784:	f47f ac30 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402788:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40278a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40278c:	46c8      	mov	r8, r9
  40278e:	e7e7      	b.n	402760 <_svfprintf_r+0x91c>
  402790:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402792:	9a08      	ldr	r2, [sp, #32]
  402794:	1a9f      	subs	r7, r3, r2
  402796:	2f00      	cmp	r7, #0
  402798:	f77f ace5 	ble.w	402166 <_svfprintf_r+0x322>
  40279c:	2f10      	cmp	r7, #16
  40279e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027a0:	4db6      	ldr	r5, [pc, #728]	; (402a7c <_svfprintf_r+0xc38>)
  4027a2:	dd27      	ble.n	4027f4 <_svfprintf_r+0x9b0>
  4027a4:	4642      	mov	r2, r8
  4027a6:	4621      	mov	r1, r4
  4027a8:	46b0      	mov	r8, r6
  4027aa:	f04f 0b10 	mov.w	fp, #16
  4027ae:	462e      	mov	r6, r5
  4027b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4027b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4027b4:	e004      	b.n	4027c0 <_svfprintf_r+0x97c>
  4027b6:	3f10      	subs	r7, #16
  4027b8:	2f10      	cmp	r7, #16
  4027ba:	f102 0208 	add.w	r2, r2, #8
  4027be:	dd15      	ble.n	4027ec <_svfprintf_r+0x9a8>
  4027c0:	3301      	adds	r3, #1
  4027c2:	3110      	adds	r1, #16
  4027c4:	2b07      	cmp	r3, #7
  4027c6:	9127      	str	r1, [sp, #156]	; 0x9c
  4027c8:	9326      	str	r3, [sp, #152]	; 0x98
  4027ca:	e882 0840 	stmia.w	r2, {r6, fp}
  4027ce:	ddf2      	ble.n	4027b6 <_svfprintf_r+0x972>
  4027d0:	aa25      	add	r2, sp, #148	; 0x94
  4027d2:	4629      	mov	r1, r5
  4027d4:	4620      	mov	r0, r4
  4027d6:	f002 fca1 	bl	40511c <__ssprint_r>
  4027da:	2800      	cmp	r0, #0
  4027dc:	f47f ac04 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4027e0:	3f10      	subs	r7, #16
  4027e2:	2f10      	cmp	r7, #16
  4027e4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4027e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027e8:	464a      	mov	r2, r9
  4027ea:	dce9      	bgt.n	4027c0 <_svfprintf_r+0x97c>
  4027ec:	4635      	mov	r5, r6
  4027ee:	460c      	mov	r4, r1
  4027f0:	4646      	mov	r6, r8
  4027f2:	4690      	mov	r8, r2
  4027f4:	3301      	adds	r3, #1
  4027f6:	443c      	add	r4, r7
  4027f8:	2b07      	cmp	r3, #7
  4027fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4027fc:	9326      	str	r3, [sp, #152]	; 0x98
  4027fe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402802:	f300 8232 	bgt.w	402c6a <_svfprintf_r+0xe26>
  402806:	f108 0808 	add.w	r8, r8, #8
  40280a:	e4ac      	b.n	402166 <_svfprintf_r+0x322>
  40280c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40280e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402810:	2b01      	cmp	r3, #1
  402812:	f340 81fe 	ble.w	402c12 <_svfprintf_r+0xdce>
  402816:	3701      	adds	r7, #1
  402818:	3401      	adds	r4, #1
  40281a:	2301      	movs	r3, #1
  40281c:	2f07      	cmp	r7, #7
  40281e:	9427      	str	r4, [sp, #156]	; 0x9c
  402820:	9726      	str	r7, [sp, #152]	; 0x98
  402822:	f8c8 6000 	str.w	r6, [r8]
  402826:	f8c8 3004 	str.w	r3, [r8, #4]
  40282a:	f300 8203 	bgt.w	402c34 <_svfprintf_r+0xdf0>
  40282e:	f108 0808 	add.w	r8, r8, #8
  402832:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402834:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402836:	f8c8 3000 	str.w	r3, [r8]
  40283a:	3701      	adds	r7, #1
  40283c:	4414      	add	r4, r2
  40283e:	2f07      	cmp	r7, #7
  402840:	9427      	str	r4, [sp, #156]	; 0x9c
  402842:	9726      	str	r7, [sp, #152]	; 0x98
  402844:	f8c8 2004 	str.w	r2, [r8, #4]
  402848:	f300 8200 	bgt.w	402c4c <_svfprintf_r+0xe08>
  40284c:	f108 0808 	add.w	r8, r8, #8
  402850:	a815      	add	r0, sp, #84	; 0x54
  402852:	c80d      	ldmia	r0, {r0, r2, r3}
  402854:	9914      	ldr	r1, [sp, #80]	; 0x50
  402856:	f003 fcf5 	bl	406244 <__aeabi_dcmpeq>
  40285a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40285c:	2800      	cmp	r0, #0
  40285e:	f040 8101 	bne.w	402a64 <_svfprintf_r+0xc20>
  402862:	3b01      	subs	r3, #1
  402864:	3701      	adds	r7, #1
  402866:	3601      	adds	r6, #1
  402868:	441c      	add	r4, r3
  40286a:	2f07      	cmp	r7, #7
  40286c:	9726      	str	r7, [sp, #152]	; 0x98
  40286e:	9427      	str	r4, [sp, #156]	; 0x9c
  402870:	f8c8 6000 	str.w	r6, [r8]
  402874:	f8c8 3004 	str.w	r3, [r8, #4]
  402878:	f300 8127 	bgt.w	402aca <_svfprintf_r+0xc86>
  40287c:	f108 0808 	add.w	r8, r8, #8
  402880:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402882:	f8c8 2004 	str.w	r2, [r8, #4]
  402886:	3701      	adds	r7, #1
  402888:	4414      	add	r4, r2
  40288a:	ab21      	add	r3, sp, #132	; 0x84
  40288c:	2f07      	cmp	r7, #7
  40288e:	9427      	str	r4, [sp, #156]	; 0x9c
  402890:	9726      	str	r7, [sp, #152]	; 0x98
  402892:	f8c8 3000 	str.w	r3, [r8]
  402896:	f77f acb3 	ble.w	402200 <_svfprintf_r+0x3bc>
  40289a:	aa25      	add	r2, sp, #148	; 0x94
  40289c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40289e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028a0:	f002 fc3c 	bl	40511c <__ssprint_r>
  4028a4:	2800      	cmp	r0, #0
  4028a6:	f47f ab9f 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4028aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028ac:	46c8      	mov	r8, r9
  4028ae:	e4a9      	b.n	402204 <_svfprintf_r+0x3c0>
  4028b0:	aa25      	add	r2, sp, #148	; 0x94
  4028b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028b4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028b6:	f002 fc31 	bl	40511c <__ssprint_r>
  4028ba:	2800      	cmp	r0, #0
  4028bc:	f43f aceb 	beq.w	402296 <_svfprintf_r+0x452>
  4028c0:	f7ff bb92 	b.w	401fe8 <_svfprintf_r+0x1a4>
  4028c4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4028c8:	2b01      	cmp	r3, #1
  4028ca:	f000 8134 	beq.w	402b36 <_svfprintf_r+0xcf2>
  4028ce:	2b02      	cmp	r3, #2
  4028d0:	d125      	bne.n	40291e <_svfprintf_r+0xada>
  4028d2:	f8cd b01c 	str.w	fp, [sp, #28]
  4028d6:	2400      	movs	r4, #0
  4028d8:	2500      	movs	r5, #0
  4028da:	e61e      	b.n	40251a <_svfprintf_r+0x6d6>
  4028dc:	aa25      	add	r2, sp, #148	; 0x94
  4028de:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028e0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028e2:	f002 fc1b 	bl	40511c <__ssprint_r>
  4028e6:	2800      	cmp	r0, #0
  4028e8:	f47f ab7e 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4028ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028ee:	46c8      	mov	r8, r9
  4028f0:	e475      	b.n	4021de <_svfprintf_r+0x39a>
  4028f2:	aa25      	add	r2, sp, #148	; 0x94
  4028f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028f8:	f002 fc10 	bl	40511c <__ssprint_r>
  4028fc:	2800      	cmp	r0, #0
  4028fe:	f47f ab73 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402902:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402904:	46c8      	mov	r8, r9
  402906:	e41b      	b.n	402140 <_svfprintf_r+0x2fc>
  402908:	aa25      	add	r2, sp, #148	; 0x94
  40290a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40290c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40290e:	f002 fc05 	bl	40511c <__ssprint_r>
  402912:	2800      	cmp	r0, #0
  402914:	f47f ab68 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402918:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40291a:	46c8      	mov	r8, r9
  40291c:	e420      	b.n	402160 <_svfprintf_r+0x31c>
  40291e:	f8cd b01c 	str.w	fp, [sp, #28]
  402922:	2400      	movs	r4, #0
  402924:	2500      	movs	r5, #0
  402926:	4649      	mov	r1, r9
  402928:	e000      	b.n	40292c <_svfprintf_r+0xae8>
  40292a:	4631      	mov	r1, r6
  40292c:	08e2      	lsrs	r2, r4, #3
  40292e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402932:	08e8      	lsrs	r0, r5, #3
  402934:	f004 0307 	and.w	r3, r4, #7
  402938:	4605      	mov	r5, r0
  40293a:	4614      	mov	r4, r2
  40293c:	3330      	adds	r3, #48	; 0x30
  40293e:	ea54 0205 	orrs.w	r2, r4, r5
  402942:	f801 3c01 	strb.w	r3, [r1, #-1]
  402946:	f101 36ff 	add.w	r6, r1, #4294967295
  40294a:	d1ee      	bne.n	40292a <_svfprintf_r+0xae6>
  40294c:	9a07      	ldr	r2, [sp, #28]
  40294e:	07d2      	lsls	r2, r2, #31
  402950:	f57f adf3 	bpl.w	40253a <_svfprintf_r+0x6f6>
  402954:	2b30      	cmp	r3, #48	; 0x30
  402956:	f43f adf0 	beq.w	40253a <_svfprintf_r+0x6f6>
  40295a:	3902      	subs	r1, #2
  40295c:	2330      	movs	r3, #48	; 0x30
  40295e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402962:	eba9 0301 	sub.w	r3, r9, r1
  402966:	930e      	str	r3, [sp, #56]	; 0x38
  402968:	460e      	mov	r6, r1
  40296a:	f7ff bb7b 	b.w	402064 <_svfprintf_r+0x220>
  40296e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402970:	2900      	cmp	r1, #0
  402972:	f340 822e 	ble.w	402dd2 <_svfprintf_r+0xf8e>
  402976:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402978:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40297a:	4293      	cmp	r3, r2
  40297c:	bfa8      	it	ge
  40297e:	4613      	movge	r3, r2
  402980:	2b00      	cmp	r3, #0
  402982:	461f      	mov	r7, r3
  402984:	dd0d      	ble.n	4029a2 <_svfprintf_r+0xb5e>
  402986:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402988:	f8c8 6000 	str.w	r6, [r8]
  40298c:	3301      	adds	r3, #1
  40298e:	443c      	add	r4, r7
  402990:	2b07      	cmp	r3, #7
  402992:	9427      	str	r4, [sp, #156]	; 0x9c
  402994:	f8c8 7004 	str.w	r7, [r8, #4]
  402998:	9326      	str	r3, [sp, #152]	; 0x98
  40299a:	f300 831f 	bgt.w	402fdc <_svfprintf_r+0x1198>
  40299e:	f108 0808 	add.w	r8, r8, #8
  4029a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4029a4:	2f00      	cmp	r7, #0
  4029a6:	bfa8      	it	ge
  4029a8:	1bdb      	subge	r3, r3, r7
  4029aa:	2b00      	cmp	r3, #0
  4029ac:	461f      	mov	r7, r3
  4029ae:	f340 80d6 	ble.w	402b5e <_svfprintf_r+0xd1a>
  4029b2:	2f10      	cmp	r7, #16
  4029b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029b6:	4d31      	ldr	r5, [pc, #196]	; (402a7c <_svfprintf_r+0xc38>)
  4029b8:	f340 81ed 	ble.w	402d96 <_svfprintf_r+0xf52>
  4029bc:	4642      	mov	r2, r8
  4029be:	4621      	mov	r1, r4
  4029c0:	46b0      	mov	r8, r6
  4029c2:	f04f 0b10 	mov.w	fp, #16
  4029c6:	462e      	mov	r6, r5
  4029c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4029ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4029cc:	e004      	b.n	4029d8 <_svfprintf_r+0xb94>
  4029ce:	3208      	adds	r2, #8
  4029d0:	3f10      	subs	r7, #16
  4029d2:	2f10      	cmp	r7, #16
  4029d4:	f340 81db 	ble.w	402d8e <_svfprintf_r+0xf4a>
  4029d8:	3301      	adds	r3, #1
  4029da:	3110      	adds	r1, #16
  4029dc:	2b07      	cmp	r3, #7
  4029de:	9127      	str	r1, [sp, #156]	; 0x9c
  4029e0:	9326      	str	r3, [sp, #152]	; 0x98
  4029e2:	e882 0840 	stmia.w	r2, {r6, fp}
  4029e6:	ddf2      	ble.n	4029ce <_svfprintf_r+0xb8a>
  4029e8:	aa25      	add	r2, sp, #148	; 0x94
  4029ea:	4629      	mov	r1, r5
  4029ec:	4620      	mov	r0, r4
  4029ee:	f002 fb95 	bl	40511c <__ssprint_r>
  4029f2:	2800      	cmp	r0, #0
  4029f4:	f47f aaf8 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  4029f8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4029fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029fc:	464a      	mov	r2, r9
  4029fe:	e7e7      	b.n	4029d0 <_svfprintf_r+0xb8c>
  402a00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a02:	930e      	str	r3, [sp, #56]	; 0x38
  402a04:	464e      	mov	r6, r9
  402a06:	f7ff bb2d 	b.w	402064 <_svfprintf_r+0x220>
  402a0a:	2d00      	cmp	r5, #0
  402a0c:	bf08      	it	eq
  402a0e:	2c0a      	cmpeq	r4, #10
  402a10:	f0c0 808f 	bcc.w	402b32 <_svfprintf_r+0xcee>
  402a14:	464e      	mov	r6, r9
  402a16:	4620      	mov	r0, r4
  402a18:	4629      	mov	r1, r5
  402a1a:	220a      	movs	r2, #10
  402a1c:	2300      	movs	r3, #0
  402a1e:	f7fe ffed 	bl	4019fc <__aeabi_uldivmod>
  402a22:	3230      	adds	r2, #48	; 0x30
  402a24:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402a28:	4620      	mov	r0, r4
  402a2a:	4629      	mov	r1, r5
  402a2c:	2300      	movs	r3, #0
  402a2e:	220a      	movs	r2, #10
  402a30:	f7fe ffe4 	bl	4019fc <__aeabi_uldivmod>
  402a34:	4604      	mov	r4, r0
  402a36:	460d      	mov	r5, r1
  402a38:	ea54 0305 	orrs.w	r3, r4, r5
  402a3c:	d1eb      	bne.n	402a16 <_svfprintf_r+0xbd2>
  402a3e:	eba9 0306 	sub.w	r3, r9, r6
  402a42:	930e      	str	r3, [sp, #56]	; 0x38
  402a44:	f7ff bb0e 	b.w	402064 <_svfprintf_r+0x220>
  402a48:	aa25      	add	r2, sp, #148	; 0x94
  402a4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a4e:	f002 fb65 	bl	40511c <__ssprint_r>
  402a52:	2800      	cmp	r0, #0
  402a54:	f47f aac8 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402a58:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a5e:	46c8      	mov	r8, r9
  402a60:	f7ff bb5e 	b.w	402120 <_svfprintf_r+0x2dc>
  402a64:	1e5e      	subs	r6, r3, #1
  402a66:	2e00      	cmp	r6, #0
  402a68:	f77f af0a 	ble.w	402880 <_svfprintf_r+0xa3c>
  402a6c:	2e10      	cmp	r6, #16
  402a6e:	4d03      	ldr	r5, [pc, #12]	; (402a7c <_svfprintf_r+0xc38>)
  402a70:	dd22      	ble.n	402ab8 <_svfprintf_r+0xc74>
  402a72:	4622      	mov	r2, r4
  402a74:	f04f 0b10 	mov.w	fp, #16
  402a78:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402a7a:	e006      	b.n	402a8a <_svfprintf_r+0xc46>
  402a7c:	00406dd0 	.word	0x00406dd0
  402a80:	3e10      	subs	r6, #16
  402a82:	2e10      	cmp	r6, #16
  402a84:	f108 0808 	add.w	r8, r8, #8
  402a88:	dd15      	ble.n	402ab6 <_svfprintf_r+0xc72>
  402a8a:	3701      	adds	r7, #1
  402a8c:	3210      	adds	r2, #16
  402a8e:	2f07      	cmp	r7, #7
  402a90:	9227      	str	r2, [sp, #156]	; 0x9c
  402a92:	9726      	str	r7, [sp, #152]	; 0x98
  402a94:	e888 0820 	stmia.w	r8, {r5, fp}
  402a98:	ddf2      	ble.n	402a80 <_svfprintf_r+0xc3c>
  402a9a:	aa25      	add	r2, sp, #148	; 0x94
  402a9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a9e:	4620      	mov	r0, r4
  402aa0:	f002 fb3c 	bl	40511c <__ssprint_r>
  402aa4:	2800      	cmp	r0, #0
  402aa6:	f47f aa9f 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402aaa:	3e10      	subs	r6, #16
  402aac:	2e10      	cmp	r6, #16
  402aae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402ab0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402ab2:	46c8      	mov	r8, r9
  402ab4:	dce9      	bgt.n	402a8a <_svfprintf_r+0xc46>
  402ab6:	4614      	mov	r4, r2
  402ab8:	3701      	adds	r7, #1
  402aba:	4434      	add	r4, r6
  402abc:	2f07      	cmp	r7, #7
  402abe:	9427      	str	r4, [sp, #156]	; 0x9c
  402ac0:	9726      	str	r7, [sp, #152]	; 0x98
  402ac2:	e888 0060 	stmia.w	r8, {r5, r6}
  402ac6:	f77f aed9 	ble.w	40287c <_svfprintf_r+0xa38>
  402aca:	aa25      	add	r2, sp, #148	; 0x94
  402acc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ace:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ad0:	f002 fb24 	bl	40511c <__ssprint_r>
  402ad4:	2800      	cmp	r0, #0
  402ad6:	f47f aa87 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402ada:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402adc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402ade:	46c8      	mov	r8, r9
  402ae0:	e6ce      	b.n	402880 <_svfprintf_r+0xa3c>
  402ae2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402ae4:	6814      	ldr	r4, [r2, #0]
  402ae6:	4613      	mov	r3, r2
  402ae8:	3304      	adds	r3, #4
  402aea:	17e5      	asrs	r5, r4, #31
  402aec:	930f      	str	r3, [sp, #60]	; 0x3c
  402aee:	4622      	mov	r2, r4
  402af0:	462b      	mov	r3, r5
  402af2:	e4fa      	b.n	4024ea <_svfprintf_r+0x6a6>
  402af4:	3204      	adds	r2, #4
  402af6:	681c      	ldr	r4, [r3, #0]
  402af8:	920f      	str	r2, [sp, #60]	; 0x3c
  402afa:	2301      	movs	r3, #1
  402afc:	2500      	movs	r5, #0
  402afe:	f7ff ba94 	b.w	40202a <_svfprintf_r+0x1e6>
  402b02:	681c      	ldr	r4, [r3, #0]
  402b04:	3304      	adds	r3, #4
  402b06:	930f      	str	r3, [sp, #60]	; 0x3c
  402b08:	2500      	movs	r5, #0
  402b0a:	e421      	b.n	402350 <_svfprintf_r+0x50c>
  402b0c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b0e:	460a      	mov	r2, r1
  402b10:	3204      	adds	r2, #4
  402b12:	680c      	ldr	r4, [r1, #0]
  402b14:	920f      	str	r2, [sp, #60]	; 0x3c
  402b16:	2500      	movs	r5, #0
  402b18:	f7ff ba87 	b.w	40202a <_svfprintf_r+0x1e6>
  402b1c:	4614      	mov	r4, r2
  402b1e:	3301      	adds	r3, #1
  402b20:	4434      	add	r4, r6
  402b22:	2b07      	cmp	r3, #7
  402b24:	9427      	str	r4, [sp, #156]	; 0x9c
  402b26:	9326      	str	r3, [sp, #152]	; 0x98
  402b28:	e888 0060 	stmia.w	r8, {r5, r6}
  402b2c:	f77f ab68 	ble.w	402200 <_svfprintf_r+0x3bc>
  402b30:	e6b3      	b.n	40289a <_svfprintf_r+0xa56>
  402b32:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402b36:	f8cd b01c 	str.w	fp, [sp, #28]
  402b3a:	ae42      	add	r6, sp, #264	; 0x108
  402b3c:	3430      	adds	r4, #48	; 0x30
  402b3e:	2301      	movs	r3, #1
  402b40:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402b44:	930e      	str	r3, [sp, #56]	; 0x38
  402b46:	f7ff ba8d 	b.w	402064 <_svfprintf_r+0x220>
  402b4a:	aa25      	add	r2, sp, #148	; 0x94
  402b4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b4e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b50:	f002 fae4 	bl	40511c <__ssprint_r>
  402b54:	2800      	cmp	r0, #0
  402b56:	f47f aa47 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402b5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b5c:	46c8      	mov	r8, r9
  402b5e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b62:	429a      	cmp	r2, r3
  402b64:	db44      	blt.n	402bf0 <_svfprintf_r+0xdac>
  402b66:	9b07      	ldr	r3, [sp, #28]
  402b68:	07d9      	lsls	r1, r3, #31
  402b6a:	d441      	bmi.n	402bf0 <_svfprintf_r+0xdac>
  402b6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b6e:	9812      	ldr	r0, [sp, #72]	; 0x48
  402b70:	1a9a      	subs	r2, r3, r2
  402b72:	1a1d      	subs	r5, r3, r0
  402b74:	4295      	cmp	r5, r2
  402b76:	bfa8      	it	ge
  402b78:	4615      	movge	r5, r2
  402b7a:	2d00      	cmp	r5, #0
  402b7c:	dd0e      	ble.n	402b9c <_svfprintf_r+0xd58>
  402b7e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402b80:	f8c8 5004 	str.w	r5, [r8, #4]
  402b84:	3101      	adds	r1, #1
  402b86:	4406      	add	r6, r0
  402b88:	442c      	add	r4, r5
  402b8a:	2907      	cmp	r1, #7
  402b8c:	f8c8 6000 	str.w	r6, [r8]
  402b90:	9427      	str	r4, [sp, #156]	; 0x9c
  402b92:	9126      	str	r1, [sp, #152]	; 0x98
  402b94:	f300 823b 	bgt.w	40300e <_svfprintf_r+0x11ca>
  402b98:	f108 0808 	add.w	r8, r8, #8
  402b9c:	2d00      	cmp	r5, #0
  402b9e:	bfac      	ite	ge
  402ba0:	1b56      	subge	r6, r2, r5
  402ba2:	4616      	movlt	r6, r2
  402ba4:	2e00      	cmp	r6, #0
  402ba6:	f77f ab2d 	ble.w	402204 <_svfprintf_r+0x3c0>
  402baa:	2e10      	cmp	r6, #16
  402bac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bae:	4db0      	ldr	r5, [pc, #704]	; (402e70 <_svfprintf_r+0x102c>)
  402bb0:	ddb5      	ble.n	402b1e <_svfprintf_r+0xcda>
  402bb2:	4622      	mov	r2, r4
  402bb4:	2710      	movs	r7, #16
  402bb6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402bba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402bbc:	e004      	b.n	402bc8 <_svfprintf_r+0xd84>
  402bbe:	f108 0808 	add.w	r8, r8, #8
  402bc2:	3e10      	subs	r6, #16
  402bc4:	2e10      	cmp	r6, #16
  402bc6:	dda9      	ble.n	402b1c <_svfprintf_r+0xcd8>
  402bc8:	3301      	adds	r3, #1
  402bca:	3210      	adds	r2, #16
  402bcc:	2b07      	cmp	r3, #7
  402bce:	9227      	str	r2, [sp, #156]	; 0x9c
  402bd0:	9326      	str	r3, [sp, #152]	; 0x98
  402bd2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402bd6:	ddf2      	ble.n	402bbe <_svfprintf_r+0xd7a>
  402bd8:	aa25      	add	r2, sp, #148	; 0x94
  402bda:	4621      	mov	r1, r4
  402bdc:	4658      	mov	r0, fp
  402bde:	f002 fa9d 	bl	40511c <__ssprint_r>
  402be2:	2800      	cmp	r0, #0
  402be4:	f47f aa00 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402be8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402bea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bec:	46c8      	mov	r8, r9
  402bee:	e7e8      	b.n	402bc2 <_svfprintf_r+0xd7e>
  402bf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bf2:	9819      	ldr	r0, [sp, #100]	; 0x64
  402bf4:	991a      	ldr	r1, [sp, #104]	; 0x68
  402bf6:	f8c8 1000 	str.w	r1, [r8]
  402bfa:	3301      	adds	r3, #1
  402bfc:	4404      	add	r4, r0
  402bfe:	2b07      	cmp	r3, #7
  402c00:	9427      	str	r4, [sp, #156]	; 0x9c
  402c02:	f8c8 0004 	str.w	r0, [r8, #4]
  402c06:	9326      	str	r3, [sp, #152]	; 0x98
  402c08:	f300 81f5 	bgt.w	402ff6 <_svfprintf_r+0x11b2>
  402c0c:	f108 0808 	add.w	r8, r8, #8
  402c10:	e7ac      	b.n	402b6c <_svfprintf_r+0xd28>
  402c12:	9b07      	ldr	r3, [sp, #28]
  402c14:	07da      	lsls	r2, r3, #31
  402c16:	f53f adfe 	bmi.w	402816 <_svfprintf_r+0x9d2>
  402c1a:	3701      	adds	r7, #1
  402c1c:	3401      	adds	r4, #1
  402c1e:	2301      	movs	r3, #1
  402c20:	2f07      	cmp	r7, #7
  402c22:	9427      	str	r4, [sp, #156]	; 0x9c
  402c24:	9726      	str	r7, [sp, #152]	; 0x98
  402c26:	f8c8 6000 	str.w	r6, [r8]
  402c2a:	f8c8 3004 	str.w	r3, [r8, #4]
  402c2e:	f77f ae25 	ble.w	40287c <_svfprintf_r+0xa38>
  402c32:	e74a      	b.n	402aca <_svfprintf_r+0xc86>
  402c34:	aa25      	add	r2, sp, #148	; 0x94
  402c36:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c38:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c3a:	f002 fa6f 	bl	40511c <__ssprint_r>
  402c3e:	2800      	cmp	r0, #0
  402c40:	f47f a9d2 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402c44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c46:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c48:	46c8      	mov	r8, r9
  402c4a:	e5f2      	b.n	402832 <_svfprintf_r+0x9ee>
  402c4c:	aa25      	add	r2, sp, #148	; 0x94
  402c4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c50:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c52:	f002 fa63 	bl	40511c <__ssprint_r>
  402c56:	2800      	cmp	r0, #0
  402c58:	f47f a9c6 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402c5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c5e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c60:	46c8      	mov	r8, r9
  402c62:	e5f5      	b.n	402850 <_svfprintf_r+0xa0c>
  402c64:	464e      	mov	r6, r9
  402c66:	f7ff b9fd 	b.w	402064 <_svfprintf_r+0x220>
  402c6a:	aa25      	add	r2, sp, #148	; 0x94
  402c6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c6e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c70:	f002 fa54 	bl	40511c <__ssprint_r>
  402c74:	2800      	cmp	r0, #0
  402c76:	f47f a9b7 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402c7a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c7c:	46c8      	mov	r8, r9
  402c7e:	f7ff ba72 	b.w	402166 <_svfprintf_r+0x322>
  402c82:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402c84:	4622      	mov	r2, r4
  402c86:	4620      	mov	r0, r4
  402c88:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402c8a:	4623      	mov	r3, r4
  402c8c:	4621      	mov	r1, r4
  402c8e:	f003 fb0b 	bl	4062a8 <__aeabi_dcmpun>
  402c92:	2800      	cmp	r0, #0
  402c94:	f040 8286 	bne.w	4031a4 <_svfprintf_r+0x1360>
  402c98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c9a:	3301      	adds	r3, #1
  402c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c9e:	f023 0320 	bic.w	r3, r3, #32
  402ca2:	930e      	str	r3, [sp, #56]	; 0x38
  402ca4:	f000 81e2 	beq.w	40306c <_svfprintf_r+0x1228>
  402ca8:	2b47      	cmp	r3, #71	; 0x47
  402caa:	f000 811e 	beq.w	402eea <_svfprintf_r+0x10a6>
  402cae:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402cb2:	9307      	str	r3, [sp, #28]
  402cb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402cb6:	1e1f      	subs	r7, r3, #0
  402cb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402cba:	9308      	str	r3, [sp, #32]
  402cbc:	bfbb      	ittet	lt
  402cbe:	463b      	movlt	r3, r7
  402cc0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402cc4:	2300      	movge	r3, #0
  402cc6:	232d      	movlt	r3, #45	; 0x2d
  402cc8:	9310      	str	r3, [sp, #64]	; 0x40
  402cca:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ccc:	2b66      	cmp	r3, #102	; 0x66
  402cce:	f000 81bb 	beq.w	403048 <_svfprintf_r+0x1204>
  402cd2:	2b46      	cmp	r3, #70	; 0x46
  402cd4:	f000 80df 	beq.w	402e96 <_svfprintf_r+0x1052>
  402cd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402cda:	9a08      	ldr	r2, [sp, #32]
  402cdc:	2b45      	cmp	r3, #69	; 0x45
  402cde:	bf0c      	ite	eq
  402ce0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402ce2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402ce4:	a823      	add	r0, sp, #140	; 0x8c
  402ce6:	a920      	add	r1, sp, #128	; 0x80
  402ce8:	bf08      	it	eq
  402cea:	1c5d      	addeq	r5, r3, #1
  402cec:	9004      	str	r0, [sp, #16]
  402cee:	9103      	str	r1, [sp, #12]
  402cf0:	a81f      	add	r0, sp, #124	; 0x7c
  402cf2:	2102      	movs	r1, #2
  402cf4:	463b      	mov	r3, r7
  402cf6:	9002      	str	r0, [sp, #8]
  402cf8:	9501      	str	r5, [sp, #4]
  402cfa:	9100      	str	r1, [sp, #0]
  402cfc:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cfe:	f000 fb73 	bl	4033e8 <_dtoa_r>
  402d02:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d04:	2b67      	cmp	r3, #103	; 0x67
  402d06:	4606      	mov	r6, r0
  402d08:	f040 81e0 	bne.w	4030cc <_svfprintf_r+0x1288>
  402d0c:	f01b 0f01 	tst.w	fp, #1
  402d10:	f000 8246 	beq.w	4031a0 <_svfprintf_r+0x135c>
  402d14:	1974      	adds	r4, r6, r5
  402d16:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402d18:	9808      	ldr	r0, [sp, #32]
  402d1a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402d1c:	4639      	mov	r1, r7
  402d1e:	f003 fa91 	bl	406244 <__aeabi_dcmpeq>
  402d22:	2800      	cmp	r0, #0
  402d24:	f040 8165 	bne.w	402ff2 <_svfprintf_r+0x11ae>
  402d28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d2a:	42a3      	cmp	r3, r4
  402d2c:	d206      	bcs.n	402d3c <_svfprintf_r+0xef8>
  402d2e:	2130      	movs	r1, #48	; 0x30
  402d30:	1c5a      	adds	r2, r3, #1
  402d32:	9223      	str	r2, [sp, #140]	; 0x8c
  402d34:	7019      	strb	r1, [r3, #0]
  402d36:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d38:	429c      	cmp	r4, r3
  402d3a:	d8f9      	bhi.n	402d30 <_svfprintf_r+0xeec>
  402d3c:	1b9b      	subs	r3, r3, r6
  402d3e:	9313      	str	r3, [sp, #76]	; 0x4c
  402d40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d42:	2b47      	cmp	r3, #71	; 0x47
  402d44:	f000 80e9 	beq.w	402f1a <_svfprintf_r+0x10d6>
  402d48:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d4a:	2b65      	cmp	r3, #101	; 0x65
  402d4c:	f340 81cd 	ble.w	4030ea <_svfprintf_r+0x12a6>
  402d50:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d52:	2b66      	cmp	r3, #102	; 0x66
  402d54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402d56:	9312      	str	r3, [sp, #72]	; 0x48
  402d58:	f000 819e 	beq.w	403098 <_svfprintf_r+0x1254>
  402d5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402d60:	4619      	mov	r1, r3
  402d62:	4291      	cmp	r1, r2
  402d64:	f300 818a 	bgt.w	40307c <_svfprintf_r+0x1238>
  402d68:	f01b 0f01 	tst.w	fp, #1
  402d6c:	f040 8213 	bne.w	403196 <_svfprintf_r+0x1352>
  402d70:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402d74:	9308      	str	r3, [sp, #32]
  402d76:	2367      	movs	r3, #103	; 0x67
  402d78:	920e      	str	r2, [sp, #56]	; 0x38
  402d7a:	9311      	str	r3, [sp, #68]	; 0x44
  402d7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402d7e:	2b00      	cmp	r3, #0
  402d80:	f040 80c4 	bne.w	402f0c <_svfprintf_r+0x10c8>
  402d84:	930a      	str	r3, [sp, #40]	; 0x28
  402d86:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d8a:	f7ff b973 	b.w	402074 <_svfprintf_r+0x230>
  402d8e:	4635      	mov	r5, r6
  402d90:	460c      	mov	r4, r1
  402d92:	4646      	mov	r6, r8
  402d94:	4690      	mov	r8, r2
  402d96:	3301      	adds	r3, #1
  402d98:	443c      	add	r4, r7
  402d9a:	2b07      	cmp	r3, #7
  402d9c:	9427      	str	r4, [sp, #156]	; 0x9c
  402d9e:	9326      	str	r3, [sp, #152]	; 0x98
  402da0:	e888 00a0 	stmia.w	r8, {r5, r7}
  402da4:	f73f aed1 	bgt.w	402b4a <_svfprintf_r+0xd06>
  402da8:	f108 0808 	add.w	r8, r8, #8
  402dac:	e6d7      	b.n	402b5e <_svfprintf_r+0xd1a>
  402dae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402db0:	6813      	ldr	r3, [r2, #0]
  402db2:	3204      	adds	r2, #4
  402db4:	920f      	str	r2, [sp, #60]	; 0x3c
  402db6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402db8:	601a      	str	r2, [r3, #0]
  402dba:	f7ff b86a 	b.w	401e92 <_svfprintf_r+0x4e>
  402dbe:	aa25      	add	r2, sp, #148	; 0x94
  402dc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dc4:	f002 f9aa 	bl	40511c <__ssprint_r>
  402dc8:	2800      	cmp	r0, #0
  402dca:	f47f a90d 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402dce:	46c8      	mov	r8, r9
  402dd0:	e48d      	b.n	4026ee <_svfprintf_r+0x8aa>
  402dd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dd4:	4a27      	ldr	r2, [pc, #156]	; (402e74 <_svfprintf_r+0x1030>)
  402dd6:	f8c8 2000 	str.w	r2, [r8]
  402dda:	3301      	adds	r3, #1
  402ddc:	3401      	adds	r4, #1
  402dde:	2201      	movs	r2, #1
  402de0:	2b07      	cmp	r3, #7
  402de2:	9427      	str	r4, [sp, #156]	; 0x9c
  402de4:	9326      	str	r3, [sp, #152]	; 0x98
  402de6:	f8c8 2004 	str.w	r2, [r8, #4]
  402dea:	dc72      	bgt.n	402ed2 <_svfprintf_r+0x108e>
  402dec:	f108 0808 	add.w	r8, r8, #8
  402df0:	b929      	cbnz	r1, 402dfe <_svfprintf_r+0xfba>
  402df2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402df4:	b91b      	cbnz	r3, 402dfe <_svfprintf_r+0xfba>
  402df6:	9b07      	ldr	r3, [sp, #28]
  402df8:	07d8      	lsls	r0, r3, #31
  402dfa:	f57f aa03 	bpl.w	402204 <_svfprintf_r+0x3c0>
  402dfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e00:	9819      	ldr	r0, [sp, #100]	; 0x64
  402e02:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402e04:	f8c8 2000 	str.w	r2, [r8]
  402e08:	3301      	adds	r3, #1
  402e0a:	4602      	mov	r2, r0
  402e0c:	4422      	add	r2, r4
  402e0e:	2b07      	cmp	r3, #7
  402e10:	9227      	str	r2, [sp, #156]	; 0x9c
  402e12:	f8c8 0004 	str.w	r0, [r8, #4]
  402e16:	9326      	str	r3, [sp, #152]	; 0x98
  402e18:	f300 818d 	bgt.w	403136 <_svfprintf_r+0x12f2>
  402e1c:	f108 0808 	add.w	r8, r8, #8
  402e20:	2900      	cmp	r1, #0
  402e22:	f2c0 8165 	blt.w	4030f0 <_svfprintf_r+0x12ac>
  402e26:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402e28:	f8c8 6000 	str.w	r6, [r8]
  402e2c:	3301      	adds	r3, #1
  402e2e:	188c      	adds	r4, r1, r2
  402e30:	2b07      	cmp	r3, #7
  402e32:	9427      	str	r4, [sp, #156]	; 0x9c
  402e34:	9326      	str	r3, [sp, #152]	; 0x98
  402e36:	f8c8 1004 	str.w	r1, [r8, #4]
  402e3a:	f77f a9e1 	ble.w	402200 <_svfprintf_r+0x3bc>
  402e3e:	e52c      	b.n	40289a <_svfprintf_r+0xa56>
  402e40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402e42:	9909      	ldr	r1, [sp, #36]	; 0x24
  402e44:	6813      	ldr	r3, [r2, #0]
  402e46:	17cd      	asrs	r5, r1, #31
  402e48:	4608      	mov	r0, r1
  402e4a:	3204      	adds	r2, #4
  402e4c:	4629      	mov	r1, r5
  402e4e:	920f      	str	r2, [sp, #60]	; 0x3c
  402e50:	e9c3 0100 	strd	r0, r1, [r3]
  402e54:	f7ff b81d 	b.w	401e92 <_svfprintf_r+0x4e>
  402e58:	aa25      	add	r2, sp, #148	; 0x94
  402e5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e5e:	f002 f95d 	bl	40511c <__ssprint_r>
  402e62:	2800      	cmp	r0, #0
  402e64:	f47f a8c0 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402e68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e6a:	46c8      	mov	r8, r9
  402e6c:	e458      	b.n	402720 <_svfprintf_r+0x8dc>
  402e6e:	bf00      	nop
  402e70:	00406dd0 	.word	0x00406dd0
  402e74:	00406dbc 	.word	0x00406dbc
  402e78:	2140      	movs	r1, #64	; 0x40
  402e7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e7c:	f001 fa0a 	bl	404294 <_malloc_r>
  402e80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402e82:	6010      	str	r0, [r2, #0]
  402e84:	6110      	str	r0, [r2, #16]
  402e86:	2800      	cmp	r0, #0
  402e88:	f000 81f2 	beq.w	403270 <_svfprintf_r+0x142c>
  402e8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402e8e:	2340      	movs	r3, #64	; 0x40
  402e90:	6153      	str	r3, [r2, #20]
  402e92:	f7fe bfee 	b.w	401e72 <_svfprintf_r+0x2e>
  402e96:	a823      	add	r0, sp, #140	; 0x8c
  402e98:	a920      	add	r1, sp, #128	; 0x80
  402e9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402e9c:	9004      	str	r0, [sp, #16]
  402e9e:	9103      	str	r1, [sp, #12]
  402ea0:	a81f      	add	r0, sp, #124	; 0x7c
  402ea2:	2103      	movs	r1, #3
  402ea4:	9002      	str	r0, [sp, #8]
  402ea6:	9a08      	ldr	r2, [sp, #32]
  402ea8:	9401      	str	r4, [sp, #4]
  402eaa:	463b      	mov	r3, r7
  402eac:	9100      	str	r1, [sp, #0]
  402eae:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eb0:	f000 fa9a 	bl	4033e8 <_dtoa_r>
  402eb4:	4625      	mov	r5, r4
  402eb6:	4606      	mov	r6, r0
  402eb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402eba:	2b46      	cmp	r3, #70	; 0x46
  402ebc:	eb06 0405 	add.w	r4, r6, r5
  402ec0:	f47f af29 	bne.w	402d16 <_svfprintf_r+0xed2>
  402ec4:	7833      	ldrb	r3, [r6, #0]
  402ec6:	2b30      	cmp	r3, #48	; 0x30
  402ec8:	f000 8178 	beq.w	4031bc <_svfprintf_r+0x1378>
  402ecc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402ece:	442c      	add	r4, r5
  402ed0:	e721      	b.n	402d16 <_svfprintf_r+0xed2>
  402ed2:	aa25      	add	r2, sp, #148	; 0x94
  402ed4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ed6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ed8:	f002 f920 	bl	40511c <__ssprint_r>
  402edc:	2800      	cmp	r0, #0
  402ede:	f47f a883 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402ee2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ee4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ee6:	46c8      	mov	r8, r9
  402ee8:	e782      	b.n	402df0 <_svfprintf_r+0xfac>
  402eea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402eec:	2b00      	cmp	r3, #0
  402eee:	bf08      	it	eq
  402ef0:	2301      	moveq	r3, #1
  402ef2:	930a      	str	r3, [sp, #40]	; 0x28
  402ef4:	e6db      	b.n	402cae <_svfprintf_r+0xe6a>
  402ef6:	4630      	mov	r0, r6
  402ef8:	940a      	str	r4, [sp, #40]	; 0x28
  402efa:	f002 f8a1 	bl	405040 <strlen>
  402efe:	950f      	str	r5, [sp, #60]	; 0x3c
  402f00:	900e      	str	r0, [sp, #56]	; 0x38
  402f02:	f8cd b01c 	str.w	fp, [sp, #28]
  402f06:	4603      	mov	r3, r0
  402f08:	f7ff b9f9 	b.w	4022fe <_svfprintf_r+0x4ba>
  402f0c:	272d      	movs	r7, #45	; 0x2d
  402f0e:	2300      	movs	r3, #0
  402f10:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402f14:	930a      	str	r3, [sp, #40]	; 0x28
  402f16:	f7ff b8ae 	b.w	402076 <_svfprintf_r+0x232>
  402f1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402f1c:	9312      	str	r3, [sp, #72]	; 0x48
  402f1e:	461a      	mov	r2, r3
  402f20:	3303      	adds	r3, #3
  402f22:	db04      	blt.n	402f2e <_svfprintf_r+0x10ea>
  402f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f26:	4619      	mov	r1, r3
  402f28:	4291      	cmp	r1, r2
  402f2a:	f6bf af17 	bge.w	402d5c <_svfprintf_r+0xf18>
  402f2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f30:	3b02      	subs	r3, #2
  402f32:	9311      	str	r3, [sp, #68]	; 0x44
  402f34:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402f38:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402f3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f3e:	3b01      	subs	r3, #1
  402f40:	2b00      	cmp	r3, #0
  402f42:	931f      	str	r3, [sp, #124]	; 0x7c
  402f44:	bfbd      	ittte	lt
  402f46:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402f48:	f1c3 0301 	rsblt	r3, r3, #1
  402f4c:	222d      	movlt	r2, #45	; 0x2d
  402f4e:	222b      	movge	r2, #43	; 0x2b
  402f50:	2b09      	cmp	r3, #9
  402f52:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402f56:	f340 8116 	ble.w	403186 <_svfprintf_r+0x1342>
  402f5a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402f5e:	4620      	mov	r0, r4
  402f60:	4dab      	ldr	r5, [pc, #684]	; (403210 <_svfprintf_r+0x13cc>)
  402f62:	e000      	b.n	402f66 <_svfprintf_r+0x1122>
  402f64:	4610      	mov	r0, r2
  402f66:	fb85 1203 	smull	r1, r2, r5, r3
  402f6a:	17d9      	asrs	r1, r3, #31
  402f6c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402f70:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402f74:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402f78:	3230      	adds	r2, #48	; 0x30
  402f7a:	2909      	cmp	r1, #9
  402f7c:	f800 2c01 	strb.w	r2, [r0, #-1]
  402f80:	460b      	mov	r3, r1
  402f82:	f100 32ff 	add.w	r2, r0, #4294967295
  402f86:	dced      	bgt.n	402f64 <_svfprintf_r+0x1120>
  402f88:	3330      	adds	r3, #48	; 0x30
  402f8a:	3802      	subs	r0, #2
  402f8c:	b2d9      	uxtb	r1, r3
  402f8e:	4284      	cmp	r4, r0
  402f90:	f802 1c01 	strb.w	r1, [r2, #-1]
  402f94:	f240 8165 	bls.w	403262 <_svfprintf_r+0x141e>
  402f98:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402f9c:	4613      	mov	r3, r2
  402f9e:	e001      	b.n	402fa4 <_svfprintf_r+0x1160>
  402fa0:	f813 1b01 	ldrb.w	r1, [r3], #1
  402fa4:	f800 1b01 	strb.w	r1, [r0], #1
  402fa8:	42a3      	cmp	r3, r4
  402faa:	d1f9      	bne.n	402fa0 <_svfprintf_r+0x115c>
  402fac:	3301      	adds	r3, #1
  402fae:	1a9b      	subs	r3, r3, r2
  402fb0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402fb4:	4413      	add	r3, r2
  402fb6:	aa21      	add	r2, sp, #132	; 0x84
  402fb8:	1a9b      	subs	r3, r3, r2
  402fba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402fbc:	931b      	str	r3, [sp, #108]	; 0x6c
  402fbe:	2a01      	cmp	r2, #1
  402fc0:	4413      	add	r3, r2
  402fc2:	930e      	str	r3, [sp, #56]	; 0x38
  402fc4:	f340 8119 	ble.w	4031fa <_svfprintf_r+0x13b6>
  402fc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402fca:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402fcc:	4413      	add	r3, r2
  402fce:	930e      	str	r3, [sp, #56]	; 0x38
  402fd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402fd4:	9308      	str	r3, [sp, #32]
  402fd6:	2300      	movs	r3, #0
  402fd8:	9312      	str	r3, [sp, #72]	; 0x48
  402fda:	e6cf      	b.n	402d7c <_svfprintf_r+0xf38>
  402fdc:	aa25      	add	r2, sp, #148	; 0x94
  402fde:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fe0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fe2:	f002 f89b 	bl	40511c <__ssprint_r>
  402fe6:	2800      	cmp	r0, #0
  402fe8:	f47e affe 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  402fec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fee:	46c8      	mov	r8, r9
  402ff0:	e4d7      	b.n	4029a2 <_svfprintf_r+0xb5e>
  402ff2:	4623      	mov	r3, r4
  402ff4:	e6a2      	b.n	402d3c <_svfprintf_r+0xef8>
  402ff6:	aa25      	add	r2, sp, #148	; 0x94
  402ff8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ffa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ffc:	f002 f88e 	bl	40511c <__ssprint_r>
  403000:	2800      	cmp	r0, #0
  403002:	f47e aff1 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  403006:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403008:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40300a:	46c8      	mov	r8, r9
  40300c:	e5ae      	b.n	402b6c <_svfprintf_r+0xd28>
  40300e:	aa25      	add	r2, sp, #148	; 0x94
  403010:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403012:	980c      	ldr	r0, [sp, #48]	; 0x30
  403014:	f002 f882 	bl	40511c <__ssprint_r>
  403018:	2800      	cmp	r0, #0
  40301a:	f47e afe5 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  40301e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403020:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403022:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403024:	1a9a      	subs	r2, r3, r2
  403026:	46c8      	mov	r8, r9
  403028:	e5b8      	b.n	402b9c <_svfprintf_r+0xd58>
  40302a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40302c:	9612      	str	r6, [sp, #72]	; 0x48
  40302e:	2b06      	cmp	r3, #6
  403030:	bf28      	it	cs
  403032:	2306      	movcs	r3, #6
  403034:	960a      	str	r6, [sp, #40]	; 0x28
  403036:	4637      	mov	r7, r6
  403038:	9308      	str	r3, [sp, #32]
  40303a:	950f      	str	r5, [sp, #60]	; 0x3c
  40303c:	f8cd b01c 	str.w	fp, [sp, #28]
  403040:	930e      	str	r3, [sp, #56]	; 0x38
  403042:	4e74      	ldr	r6, [pc, #464]	; (403214 <_svfprintf_r+0x13d0>)
  403044:	f7ff b816 	b.w	402074 <_svfprintf_r+0x230>
  403048:	a823      	add	r0, sp, #140	; 0x8c
  40304a:	a920      	add	r1, sp, #128	; 0x80
  40304c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40304e:	9004      	str	r0, [sp, #16]
  403050:	9103      	str	r1, [sp, #12]
  403052:	a81f      	add	r0, sp, #124	; 0x7c
  403054:	2103      	movs	r1, #3
  403056:	9002      	str	r0, [sp, #8]
  403058:	9a08      	ldr	r2, [sp, #32]
  40305a:	9501      	str	r5, [sp, #4]
  40305c:	463b      	mov	r3, r7
  40305e:	9100      	str	r1, [sp, #0]
  403060:	980c      	ldr	r0, [sp, #48]	; 0x30
  403062:	f000 f9c1 	bl	4033e8 <_dtoa_r>
  403066:	4606      	mov	r6, r0
  403068:	1944      	adds	r4, r0, r5
  40306a:	e72b      	b.n	402ec4 <_svfprintf_r+0x1080>
  40306c:	2306      	movs	r3, #6
  40306e:	930a      	str	r3, [sp, #40]	; 0x28
  403070:	e61d      	b.n	402cae <_svfprintf_r+0xe6a>
  403072:	272d      	movs	r7, #45	; 0x2d
  403074:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403078:	f7ff bacd 	b.w	402616 <_svfprintf_r+0x7d2>
  40307c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40307e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403080:	4413      	add	r3, r2
  403082:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403084:	930e      	str	r3, [sp, #56]	; 0x38
  403086:	2a00      	cmp	r2, #0
  403088:	f340 80b0 	ble.w	4031ec <_svfprintf_r+0x13a8>
  40308c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403090:	9308      	str	r3, [sp, #32]
  403092:	2367      	movs	r3, #103	; 0x67
  403094:	9311      	str	r3, [sp, #68]	; 0x44
  403096:	e671      	b.n	402d7c <_svfprintf_r+0xf38>
  403098:	2b00      	cmp	r3, #0
  40309a:	f340 80c3 	ble.w	403224 <_svfprintf_r+0x13e0>
  40309e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4030a0:	2a00      	cmp	r2, #0
  4030a2:	f040 8099 	bne.w	4031d8 <_svfprintf_r+0x1394>
  4030a6:	f01b 0f01 	tst.w	fp, #1
  4030aa:	f040 8095 	bne.w	4031d8 <_svfprintf_r+0x1394>
  4030ae:	9308      	str	r3, [sp, #32]
  4030b0:	930e      	str	r3, [sp, #56]	; 0x38
  4030b2:	e663      	b.n	402d7c <_svfprintf_r+0xf38>
  4030b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030b6:	9308      	str	r3, [sp, #32]
  4030b8:	930e      	str	r3, [sp, #56]	; 0x38
  4030ba:	900a      	str	r0, [sp, #40]	; 0x28
  4030bc:	950f      	str	r5, [sp, #60]	; 0x3c
  4030be:	f8cd b01c 	str.w	fp, [sp, #28]
  4030c2:	9012      	str	r0, [sp, #72]	; 0x48
  4030c4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4030c8:	f7fe bfd4 	b.w	402074 <_svfprintf_r+0x230>
  4030cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030ce:	2b47      	cmp	r3, #71	; 0x47
  4030d0:	f47f ae20 	bne.w	402d14 <_svfprintf_r+0xed0>
  4030d4:	f01b 0f01 	tst.w	fp, #1
  4030d8:	f47f aeee 	bne.w	402eb8 <_svfprintf_r+0x1074>
  4030dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4030de:	1b9b      	subs	r3, r3, r6
  4030e0:	9313      	str	r3, [sp, #76]	; 0x4c
  4030e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4030e4:	2b47      	cmp	r3, #71	; 0x47
  4030e6:	f43f af18 	beq.w	402f1a <_svfprintf_r+0x10d6>
  4030ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4030ec:	9312      	str	r3, [sp, #72]	; 0x48
  4030ee:	e721      	b.n	402f34 <_svfprintf_r+0x10f0>
  4030f0:	424f      	negs	r7, r1
  4030f2:	3110      	adds	r1, #16
  4030f4:	4d48      	ldr	r5, [pc, #288]	; (403218 <_svfprintf_r+0x13d4>)
  4030f6:	da2f      	bge.n	403158 <_svfprintf_r+0x1314>
  4030f8:	2410      	movs	r4, #16
  4030fa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4030fe:	e004      	b.n	40310a <_svfprintf_r+0x12c6>
  403100:	f108 0808 	add.w	r8, r8, #8
  403104:	3f10      	subs	r7, #16
  403106:	2f10      	cmp	r7, #16
  403108:	dd26      	ble.n	403158 <_svfprintf_r+0x1314>
  40310a:	3301      	adds	r3, #1
  40310c:	3210      	adds	r2, #16
  40310e:	2b07      	cmp	r3, #7
  403110:	9227      	str	r2, [sp, #156]	; 0x9c
  403112:	9326      	str	r3, [sp, #152]	; 0x98
  403114:	f8c8 5000 	str.w	r5, [r8]
  403118:	f8c8 4004 	str.w	r4, [r8, #4]
  40311c:	ddf0      	ble.n	403100 <_svfprintf_r+0x12bc>
  40311e:	aa25      	add	r2, sp, #148	; 0x94
  403120:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403122:	4658      	mov	r0, fp
  403124:	f001 fffa 	bl	40511c <__ssprint_r>
  403128:	2800      	cmp	r0, #0
  40312a:	f47e af5d 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  40312e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403130:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403132:	46c8      	mov	r8, r9
  403134:	e7e6      	b.n	403104 <_svfprintf_r+0x12c0>
  403136:	aa25      	add	r2, sp, #148	; 0x94
  403138:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40313a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40313c:	f001 ffee 	bl	40511c <__ssprint_r>
  403140:	2800      	cmp	r0, #0
  403142:	f47e af51 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  403146:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403148:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40314a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40314c:	46c8      	mov	r8, r9
  40314e:	e667      	b.n	402e20 <_svfprintf_r+0xfdc>
  403150:	2000      	movs	r0, #0
  403152:	900a      	str	r0, [sp, #40]	; 0x28
  403154:	f7fe bed0 	b.w	401ef8 <_svfprintf_r+0xb4>
  403158:	3301      	adds	r3, #1
  40315a:	443a      	add	r2, r7
  40315c:	2b07      	cmp	r3, #7
  40315e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403162:	9227      	str	r2, [sp, #156]	; 0x9c
  403164:	9326      	str	r3, [sp, #152]	; 0x98
  403166:	f108 0808 	add.w	r8, r8, #8
  40316a:	f77f ae5c 	ble.w	402e26 <_svfprintf_r+0xfe2>
  40316e:	aa25      	add	r2, sp, #148	; 0x94
  403170:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403172:	980c      	ldr	r0, [sp, #48]	; 0x30
  403174:	f001 ffd2 	bl	40511c <__ssprint_r>
  403178:	2800      	cmp	r0, #0
  40317a:	f47e af35 	bne.w	401fe8 <_svfprintf_r+0x1a4>
  40317e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403180:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403182:	46c8      	mov	r8, r9
  403184:	e64f      	b.n	402e26 <_svfprintf_r+0xfe2>
  403186:	3330      	adds	r3, #48	; 0x30
  403188:	2230      	movs	r2, #48	; 0x30
  40318a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40318e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403192:	ab22      	add	r3, sp, #136	; 0x88
  403194:	e70f      	b.n	402fb6 <_svfprintf_r+0x1172>
  403196:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403198:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40319a:	4413      	add	r3, r2
  40319c:	930e      	str	r3, [sp, #56]	; 0x38
  40319e:	e775      	b.n	40308c <_svfprintf_r+0x1248>
  4031a0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4031a2:	e5cb      	b.n	402d3c <_svfprintf_r+0xef8>
  4031a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4031a6:	4e1d      	ldr	r6, [pc, #116]	; (40321c <_svfprintf_r+0x13d8>)
  4031a8:	2b00      	cmp	r3, #0
  4031aa:	bfb6      	itet	lt
  4031ac:	272d      	movlt	r7, #45	; 0x2d
  4031ae:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4031b2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4031b6:	4b1a      	ldr	r3, [pc, #104]	; (403220 <_svfprintf_r+0x13dc>)
  4031b8:	f7ff ba2f 	b.w	40261a <_svfprintf_r+0x7d6>
  4031bc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4031be:	9808      	ldr	r0, [sp, #32]
  4031c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4031c2:	4639      	mov	r1, r7
  4031c4:	f003 f83e 	bl	406244 <__aeabi_dcmpeq>
  4031c8:	2800      	cmp	r0, #0
  4031ca:	f47f ae7f 	bne.w	402ecc <_svfprintf_r+0x1088>
  4031ce:	f1c5 0501 	rsb	r5, r5, #1
  4031d2:	951f      	str	r5, [sp, #124]	; 0x7c
  4031d4:	442c      	add	r4, r5
  4031d6:	e59e      	b.n	402d16 <_svfprintf_r+0xed2>
  4031d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4031da:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4031dc:	4413      	add	r3, r2
  4031de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4031e0:	441a      	add	r2, r3
  4031e2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4031e6:	920e      	str	r2, [sp, #56]	; 0x38
  4031e8:	9308      	str	r3, [sp, #32]
  4031ea:	e5c7      	b.n	402d7c <_svfprintf_r+0xf38>
  4031ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4031ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4031f0:	f1c3 0301 	rsb	r3, r3, #1
  4031f4:	441a      	add	r2, r3
  4031f6:	4613      	mov	r3, r2
  4031f8:	e7d0      	b.n	40319c <_svfprintf_r+0x1358>
  4031fa:	f01b 0301 	ands.w	r3, fp, #1
  4031fe:	9312      	str	r3, [sp, #72]	; 0x48
  403200:	f47f aee2 	bne.w	402fc8 <_svfprintf_r+0x1184>
  403204:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403206:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40320a:	9308      	str	r3, [sp, #32]
  40320c:	e5b6      	b.n	402d7c <_svfprintf_r+0xf38>
  40320e:	bf00      	nop
  403210:	66666667 	.word	0x66666667
  403214:	00406db4 	.word	0x00406db4
  403218:	00406dd0 	.word	0x00406dd0
  40321c:	00406d88 	.word	0x00406d88
  403220:	00406d84 	.word	0x00406d84
  403224:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403226:	b913      	cbnz	r3, 40322e <_svfprintf_r+0x13ea>
  403228:	f01b 0f01 	tst.w	fp, #1
  40322c:	d002      	beq.n	403234 <_svfprintf_r+0x13f0>
  40322e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403230:	3301      	adds	r3, #1
  403232:	e7d4      	b.n	4031de <_svfprintf_r+0x139a>
  403234:	2301      	movs	r3, #1
  403236:	e73a      	b.n	4030ae <_svfprintf_r+0x126a>
  403238:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40323a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40323e:	6828      	ldr	r0, [r5, #0]
  403240:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403244:	900a      	str	r0, [sp, #40]	; 0x28
  403246:	4628      	mov	r0, r5
  403248:	3004      	adds	r0, #4
  40324a:	46a2      	mov	sl, r4
  40324c:	900f      	str	r0, [sp, #60]	; 0x3c
  40324e:	f7fe be51 	b.w	401ef4 <_svfprintf_r+0xb0>
  403252:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403256:	f7ff b867 	b.w	402328 <_svfprintf_r+0x4e4>
  40325a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40325e:	f7ff ba15 	b.w	40268c <_svfprintf_r+0x848>
  403262:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403266:	e6a6      	b.n	402fb6 <_svfprintf_r+0x1172>
  403268:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40326c:	f7ff b8eb 	b.w	402446 <_svfprintf_r+0x602>
  403270:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403272:	230c      	movs	r3, #12
  403274:	6013      	str	r3, [r2, #0]
  403276:	f04f 33ff 	mov.w	r3, #4294967295
  40327a:	9309      	str	r3, [sp, #36]	; 0x24
  40327c:	f7fe bebd 	b.w	401ffa <_svfprintf_r+0x1b6>
  403280:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403284:	f7ff b99a 	b.w	4025bc <_svfprintf_r+0x778>
  403288:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40328c:	f7ff b976 	b.w	40257c <_svfprintf_r+0x738>
  403290:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403294:	f7ff b959 	b.w	40254a <_svfprintf_r+0x706>
  403298:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40329c:	f7ff b912 	b.w	4024c4 <_svfprintf_r+0x680>

004032a0 <register_fini>:
  4032a0:	4b02      	ldr	r3, [pc, #8]	; (4032ac <register_fini+0xc>)
  4032a2:	b113      	cbz	r3, 4032aa <register_fini+0xa>
  4032a4:	4802      	ldr	r0, [pc, #8]	; (4032b0 <register_fini+0x10>)
  4032a6:	f000 b805 	b.w	4032b4 <atexit>
  4032aa:	4770      	bx	lr
  4032ac:	00000000 	.word	0x00000000
  4032b0:	0040423d 	.word	0x0040423d

004032b4 <atexit>:
  4032b4:	2300      	movs	r3, #0
  4032b6:	4601      	mov	r1, r0
  4032b8:	461a      	mov	r2, r3
  4032ba:	4618      	mov	r0, r3
  4032bc:	f001 bfac 	b.w	405218 <__register_exitproc>

004032c0 <quorem>:
  4032c0:	6902      	ldr	r2, [r0, #16]
  4032c2:	690b      	ldr	r3, [r1, #16]
  4032c4:	4293      	cmp	r3, r2
  4032c6:	f300 808d 	bgt.w	4033e4 <quorem+0x124>
  4032ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032ce:	f103 38ff 	add.w	r8, r3, #4294967295
  4032d2:	f101 0714 	add.w	r7, r1, #20
  4032d6:	f100 0b14 	add.w	fp, r0, #20
  4032da:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4032de:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4032e2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4032e6:	b083      	sub	sp, #12
  4032e8:	3201      	adds	r2, #1
  4032ea:	fbb3 f9f2 	udiv	r9, r3, r2
  4032ee:	eb0b 0304 	add.w	r3, fp, r4
  4032f2:	9400      	str	r4, [sp, #0]
  4032f4:	eb07 0a04 	add.w	sl, r7, r4
  4032f8:	9301      	str	r3, [sp, #4]
  4032fa:	f1b9 0f00 	cmp.w	r9, #0
  4032fe:	d039      	beq.n	403374 <quorem+0xb4>
  403300:	2500      	movs	r5, #0
  403302:	462e      	mov	r6, r5
  403304:	46bc      	mov	ip, r7
  403306:	46de      	mov	lr, fp
  403308:	f85c 4b04 	ldr.w	r4, [ip], #4
  40330c:	f8de 3000 	ldr.w	r3, [lr]
  403310:	b2a2      	uxth	r2, r4
  403312:	fb09 5502 	mla	r5, r9, r2, r5
  403316:	0c22      	lsrs	r2, r4, #16
  403318:	0c2c      	lsrs	r4, r5, #16
  40331a:	fb09 4202 	mla	r2, r9, r2, r4
  40331e:	b2ad      	uxth	r5, r5
  403320:	1b75      	subs	r5, r6, r5
  403322:	b296      	uxth	r6, r2
  403324:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403328:	fa15 f383 	uxtah	r3, r5, r3
  40332c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403330:	b29b      	uxth	r3, r3
  403332:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403336:	45e2      	cmp	sl, ip
  403338:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40333c:	f84e 3b04 	str.w	r3, [lr], #4
  403340:	ea4f 4626 	mov.w	r6, r6, asr #16
  403344:	d2e0      	bcs.n	403308 <quorem+0x48>
  403346:	9b00      	ldr	r3, [sp, #0]
  403348:	f85b 3003 	ldr.w	r3, [fp, r3]
  40334c:	b993      	cbnz	r3, 403374 <quorem+0xb4>
  40334e:	9c01      	ldr	r4, [sp, #4]
  403350:	1f23      	subs	r3, r4, #4
  403352:	459b      	cmp	fp, r3
  403354:	d20c      	bcs.n	403370 <quorem+0xb0>
  403356:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40335a:	b94b      	cbnz	r3, 403370 <quorem+0xb0>
  40335c:	f1a4 0308 	sub.w	r3, r4, #8
  403360:	e002      	b.n	403368 <quorem+0xa8>
  403362:	681a      	ldr	r2, [r3, #0]
  403364:	3b04      	subs	r3, #4
  403366:	b91a      	cbnz	r2, 403370 <quorem+0xb0>
  403368:	459b      	cmp	fp, r3
  40336a:	f108 38ff 	add.w	r8, r8, #4294967295
  40336e:	d3f8      	bcc.n	403362 <quorem+0xa2>
  403370:	f8c0 8010 	str.w	r8, [r0, #16]
  403374:	4604      	mov	r4, r0
  403376:	f001 fd37 	bl	404de8 <__mcmp>
  40337a:	2800      	cmp	r0, #0
  40337c:	db2e      	blt.n	4033dc <quorem+0x11c>
  40337e:	f109 0901 	add.w	r9, r9, #1
  403382:	465d      	mov	r5, fp
  403384:	2300      	movs	r3, #0
  403386:	f857 1b04 	ldr.w	r1, [r7], #4
  40338a:	6828      	ldr	r0, [r5, #0]
  40338c:	b28a      	uxth	r2, r1
  40338e:	1a9a      	subs	r2, r3, r2
  403390:	0c0b      	lsrs	r3, r1, #16
  403392:	fa12 f280 	uxtah	r2, r2, r0
  403396:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40339a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40339e:	b292      	uxth	r2, r2
  4033a0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4033a4:	45ba      	cmp	sl, r7
  4033a6:	f845 2b04 	str.w	r2, [r5], #4
  4033aa:	ea4f 4323 	mov.w	r3, r3, asr #16
  4033ae:	d2ea      	bcs.n	403386 <quorem+0xc6>
  4033b0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4033b4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4033b8:	b982      	cbnz	r2, 4033dc <quorem+0x11c>
  4033ba:	1f1a      	subs	r2, r3, #4
  4033bc:	4593      	cmp	fp, r2
  4033be:	d20b      	bcs.n	4033d8 <quorem+0x118>
  4033c0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4033c4:	b942      	cbnz	r2, 4033d8 <quorem+0x118>
  4033c6:	3b08      	subs	r3, #8
  4033c8:	e002      	b.n	4033d0 <quorem+0x110>
  4033ca:	681a      	ldr	r2, [r3, #0]
  4033cc:	3b04      	subs	r3, #4
  4033ce:	b91a      	cbnz	r2, 4033d8 <quorem+0x118>
  4033d0:	459b      	cmp	fp, r3
  4033d2:	f108 38ff 	add.w	r8, r8, #4294967295
  4033d6:	d3f8      	bcc.n	4033ca <quorem+0x10a>
  4033d8:	f8c4 8010 	str.w	r8, [r4, #16]
  4033dc:	4648      	mov	r0, r9
  4033de:	b003      	add	sp, #12
  4033e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033e4:	2000      	movs	r0, #0
  4033e6:	4770      	bx	lr

004033e8 <_dtoa_r>:
  4033e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4033ec:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4033ee:	b09b      	sub	sp, #108	; 0x6c
  4033f0:	4604      	mov	r4, r0
  4033f2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4033f4:	4692      	mov	sl, r2
  4033f6:	469b      	mov	fp, r3
  4033f8:	b141      	cbz	r1, 40340c <_dtoa_r+0x24>
  4033fa:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4033fc:	604a      	str	r2, [r1, #4]
  4033fe:	2301      	movs	r3, #1
  403400:	4093      	lsls	r3, r2
  403402:	608b      	str	r3, [r1, #8]
  403404:	f001 fb18 	bl	404a38 <_Bfree>
  403408:	2300      	movs	r3, #0
  40340a:	6423      	str	r3, [r4, #64]	; 0x40
  40340c:	f1bb 0f00 	cmp.w	fp, #0
  403410:	465d      	mov	r5, fp
  403412:	db35      	blt.n	403480 <_dtoa_r+0x98>
  403414:	2300      	movs	r3, #0
  403416:	6033      	str	r3, [r6, #0]
  403418:	4b9d      	ldr	r3, [pc, #628]	; (403690 <_dtoa_r+0x2a8>)
  40341a:	43ab      	bics	r3, r5
  40341c:	d015      	beq.n	40344a <_dtoa_r+0x62>
  40341e:	4650      	mov	r0, sl
  403420:	4659      	mov	r1, fp
  403422:	2200      	movs	r2, #0
  403424:	2300      	movs	r3, #0
  403426:	f002 ff0d 	bl	406244 <__aeabi_dcmpeq>
  40342a:	4680      	mov	r8, r0
  40342c:	2800      	cmp	r0, #0
  40342e:	d02d      	beq.n	40348c <_dtoa_r+0xa4>
  403430:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403432:	2301      	movs	r3, #1
  403434:	6013      	str	r3, [r2, #0]
  403436:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403438:	2b00      	cmp	r3, #0
  40343a:	f000 80bd 	beq.w	4035b8 <_dtoa_r+0x1d0>
  40343e:	4895      	ldr	r0, [pc, #596]	; (403694 <_dtoa_r+0x2ac>)
  403440:	6018      	str	r0, [r3, #0]
  403442:	3801      	subs	r0, #1
  403444:	b01b      	add	sp, #108	; 0x6c
  403446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40344a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40344c:	f242 730f 	movw	r3, #9999	; 0x270f
  403450:	6013      	str	r3, [r2, #0]
  403452:	f1ba 0f00 	cmp.w	sl, #0
  403456:	d10d      	bne.n	403474 <_dtoa_r+0x8c>
  403458:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40345c:	b955      	cbnz	r5, 403474 <_dtoa_r+0x8c>
  40345e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403460:	488d      	ldr	r0, [pc, #564]	; (403698 <_dtoa_r+0x2b0>)
  403462:	2b00      	cmp	r3, #0
  403464:	d0ee      	beq.n	403444 <_dtoa_r+0x5c>
  403466:	f100 0308 	add.w	r3, r0, #8
  40346a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40346c:	6013      	str	r3, [r2, #0]
  40346e:	b01b      	add	sp, #108	; 0x6c
  403470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403474:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403476:	4889      	ldr	r0, [pc, #548]	; (40369c <_dtoa_r+0x2b4>)
  403478:	2b00      	cmp	r3, #0
  40347a:	d0e3      	beq.n	403444 <_dtoa_r+0x5c>
  40347c:	1cc3      	adds	r3, r0, #3
  40347e:	e7f4      	b.n	40346a <_dtoa_r+0x82>
  403480:	2301      	movs	r3, #1
  403482:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403486:	6033      	str	r3, [r6, #0]
  403488:	46ab      	mov	fp, r5
  40348a:	e7c5      	b.n	403418 <_dtoa_r+0x30>
  40348c:	aa18      	add	r2, sp, #96	; 0x60
  40348e:	ab19      	add	r3, sp, #100	; 0x64
  403490:	9201      	str	r2, [sp, #4]
  403492:	9300      	str	r3, [sp, #0]
  403494:	4652      	mov	r2, sl
  403496:	465b      	mov	r3, fp
  403498:	4620      	mov	r0, r4
  40349a:	f001 fd45 	bl	404f28 <__d2b>
  40349e:	0d2b      	lsrs	r3, r5, #20
  4034a0:	4681      	mov	r9, r0
  4034a2:	d071      	beq.n	403588 <_dtoa_r+0x1a0>
  4034a4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4034a8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4034ac:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4034ae:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4034b2:	4650      	mov	r0, sl
  4034b4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4034b8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4034bc:	2200      	movs	r2, #0
  4034be:	4b78      	ldr	r3, [pc, #480]	; (4036a0 <_dtoa_r+0x2b8>)
  4034c0:	f002 faa4 	bl	405a0c <__aeabi_dsub>
  4034c4:	a36c      	add	r3, pc, #432	; (adr r3, 403678 <_dtoa_r+0x290>)
  4034c6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4034ca:	f002 fc53 	bl	405d74 <__aeabi_dmul>
  4034ce:	a36c      	add	r3, pc, #432	; (adr r3, 403680 <_dtoa_r+0x298>)
  4034d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4034d4:	f002 fa9c 	bl	405a10 <__adddf3>
  4034d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4034dc:	4630      	mov	r0, r6
  4034de:	f002 fbe3 	bl	405ca8 <__aeabi_i2d>
  4034e2:	a369      	add	r3, pc, #420	; (adr r3, 403688 <_dtoa_r+0x2a0>)
  4034e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4034e8:	f002 fc44 	bl	405d74 <__aeabi_dmul>
  4034ec:	4602      	mov	r2, r0
  4034ee:	460b      	mov	r3, r1
  4034f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4034f4:	f002 fa8c 	bl	405a10 <__adddf3>
  4034f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4034fc:	f002 feea 	bl	4062d4 <__aeabi_d2iz>
  403500:	2200      	movs	r2, #0
  403502:	9002      	str	r0, [sp, #8]
  403504:	2300      	movs	r3, #0
  403506:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40350a:	f002 fea5 	bl	406258 <__aeabi_dcmplt>
  40350e:	2800      	cmp	r0, #0
  403510:	f040 8173 	bne.w	4037fa <_dtoa_r+0x412>
  403514:	9d02      	ldr	r5, [sp, #8]
  403516:	2d16      	cmp	r5, #22
  403518:	f200 815d 	bhi.w	4037d6 <_dtoa_r+0x3ee>
  40351c:	4b61      	ldr	r3, [pc, #388]	; (4036a4 <_dtoa_r+0x2bc>)
  40351e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403522:	e9d3 0100 	ldrd	r0, r1, [r3]
  403526:	4652      	mov	r2, sl
  403528:	465b      	mov	r3, fp
  40352a:	f002 feb3 	bl	406294 <__aeabi_dcmpgt>
  40352e:	2800      	cmp	r0, #0
  403530:	f000 81c5 	beq.w	4038be <_dtoa_r+0x4d6>
  403534:	1e6b      	subs	r3, r5, #1
  403536:	9302      	str	r3, [sp, #8]
  403538:	2300      	movs	r3, #0
  40353a:	930e      	str	r3, [sp, #56]	; 0x38
  40353c:	1bbf      	subs	r7, r7, r6
  40353e:	1e7b      	subs	r3, r7, #1
  403540:	9306      	str	r3, [sp, #24]
  403542:	f100 8154 	bmi.w	4037ee <_dtoa_r+0x406>
  403546:	2300      	movs	r3, #0
  403548:	9308      	str	r3, [sp, #32]
  40354a:	9b02      	ldr	r3, [sp, #8]
  40354c:	2b00      	cmp	r3, #0
  40354e:	f2c0 8145 	blt.w	4037dc <_dtoa_r+0x3f4>
  403552:	9a06      	ldr	r2, [sp, #24]
  403554:	930d      	str	r3, [sp, #52]	; 0x34
  403556:	4611      	mov	r1, r2
  403558:	4419      	add	r1, r3
  40355a:	2300      	movs	r3, #0
  40355c:	9106      	str	r1, [sp, #24]
  40355e:	930c      	str	r3, [sp, #48]	; 0x30
  403560:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403562:	2b09      	cmp	r3, #9
  403564:	d82a      	bhi.n	4035bc <_dtoa_r+0x1d4>
  403566:	2b05      	cmp	r3, #5
  403568:	f340 865b 	ble.w	404222 <_dtoa_r+0xe3a>
  40356c:	3b04      	subs	r3, #4
  40356e:	9324      	str	r3, [sp, #144]	; 0x90
  403570:	2500      	movs	r5, #0
  403572:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403574:	3b02      	subs	r3, #2
  403576:	2b03      	cmp	r3, #3
  403578:	f200 8642 	bhi.w	404200 <_dtoa_r+0xe18>
  40357c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403580:	02c903d4 	.word	0x02c903d4
  403584:	046103df 	.word	0x046103df
  403588:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40358a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40358c:	443e      	add	r6, r7
  40358e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403592:	2b20      	cmp	r3, #32
  403594:	f340 818e 	ble.w	4038b4 <_dtoa_r+0x4cc>
  403598:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40359c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4035a0:	409d      	lsls	r5, r3
  4035a2:	fa2a f000 	lsr.w	r0, sl, r0
  4035a6:	4328      	orrs	r0, r5
  4035a8:	f002 fb6e 	bl	405c88 <__aeabi_ui2d>
  4035ac:	2301      	movs	r3, #1
  4035ae:	3e01      	subs	r6, #1
  4035b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4035b4:	9314      	str	r3, [sp, #80]	; 0x50
  4035b6:	e781      	b.n	4034bc <_dtoa_r+0xd4>
  4035b8:	483b      	ldr	r0, [pc, #236]	; (4036a8 <_dtoa_r+0x2c0>)
  4035ba:	e743      	b.n	403444 <_dtoa_r+0x5c>
  4035bc:	2100      	movs	r1, #0
  4035be:	6461      	str	r1, [r4, #68]	; 0x44
  4035c0:	4620      	mov	r0, r4
  4035c2:	9125      	str	r1, [sp, #148]	; 0x94
  4035c4:	f001 fa12 	bl	4049ec <_Balloc>
  4035c8:	f04f 33ff 	mov.w	r3, #4294967295
  4035cc:	930a      	str	r3, [sp, #40]	; 0x28
  4035ce:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4035d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4035d2:	2301      	movs	r3, #1
  4035d4:	9004      	str	r0, [sp, #16]
  4035d6:	6420      	str	r0, [r4, #64]	; 0x40
  4035d8:	9224      	str	r2, [sp, #144]	; 0x90
  4035da:	930b      	str	r3, [sp, #44]	; 0x2c
  4035dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4035de:	2b00      	cmp	r3, #0
  4035e0:	f2c0 80d9 	blt.w	403796 <_dtoa_r+0x3ae>
  4035e4:	9a02      	ldr	r2, [sp, #8]
  4035e6:	2a0e      	cmp	r2, #14
  4035e8:	f300 80d5 	bgt.w	403796 <_dtoa_r+0x3ae>
  4035ec:	4b2d      	ldr	r3, [pc, #180]	; (4036a4 <_dtoa_r+0x2bc>)
  4035ee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4035f2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4035fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4035fc:	2b00      	cmp	r3, #0
  4035fe:	f2c0 83ba 	blt.w	403d76 <_dtoa_r+0x98e>
  403602:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403606:	4650      	mov	r0, sl
  403608:	462a      	mov	r2, r5
  40360a:	4633      	mov	r3, r6
  40360c:	4659      	mov	r1, fp
  40360e:	f002 fcdb 	bl	405fc8 <__aeabi_ddiv>
  403612:	f002 fe5f 	bl	4062d4 <__aeabi_d2iz>
  403616:	4680      	mov	r8, r0
  403618:	f002 fb46 	bl	405ca8 <__aeabi_i2d>
  40361c:	462a      	mov	r2, r5
  40361e:	4633      	mov	r3, r6
  403620:	f002 fba8 	bl	405d74 <__aeabi_dmul>
  403624:	460b      	mov	r3, r1
  403626:	4602      	mov	r2, r0
  403628:	4659      	mov	r1, fp
  40362a:	4650      	mov	r0, sl
  40362c:	f002 f9ee 	bl	405a0c <__aeabi_dsub>
  403630:	9d04      	ldr	r5, [sp, #16]
  403632:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403636:	702b      	strb	r3, [r5, #0]
  403638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40363a:	2b01      	cmp	r3, #1
  40363c:	4606      	mov	r6, r0
  40363e:	460f      	mov	r7, r1
  403640:	f105 0501 	add.w	r5, r5, #1
  403644:	d068      	beq.n	403718 <_dtoa_r+0x330>
  403646:	2200      	movs	r2, #0
  403648:	4b18      	ldr	r3, [pc, #96]	; (4036ac <_dtoa_r+0x2c4>)
  40364a:	f002 fb93 	bl	405d74 <__aeabi_dmul>
  40364e:	2200      	movs	r2, #0
  403650:	2300      	movs	r3, #0
  403652:	4606      	mov	r6, r0
  403654:	460f      	mov	r7, r1
  403656:	f002 fdf5 	bl	406244 <__aeabi_dcmpeq>
  40365a:	2800      	cmp	r0, #0
  40365c:	f040 8088 	bne.w	403770 <_dtoa_r+0x388>
  403660:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403664:	f04f 0a00 	mov.w	sl, #0
  403668:	f8df b040 	ldr.w	fp, [pc, #64]	; 4036ac <_dtoa_r+0x2c4>
  40366c:	940c      	str	r4, [sp, #48]	; 0x30
  40366e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403672:	e028      	b.n	4036c6 <_dtoa_r+0x2de>
  403674:	f3af 8000 	nop.w
  403678:	636f4361 	.word	0x636f4361
  40367c:	3fd287a7 	.word	0x3fd287a7
  403680:	8b60c8b3 	.word	0x8b60c8b3
  403684:	3fc68a28 	.word	0x3fc68a28
  403688:	509f79fb 	.word	0x509f79fb
  40368c:	3fd34413 	.word	0x3fd34413
  403690:	7ff00000 	.word	0x7ff00000
  403694:	00406dbd 	.word	0x00406dbd
  403698:	00406de0 	.word	0x00406de0
  40369c:	00406dec 	.word	0x00406dec
  4036a0:	3ff80000 	.word	0x3ff80000
  4036a4:	00406e18 	.word	0x00406e18
  4036a8:	00406dbc 	.word	0x00406dbc
  4036ac:	40240000 	.word	0x40240000
  4036b0:	f002 fb60 	bl	405d74 <__aeabi_dmul>
  4036b4:	2200      	movs	r2, #0
  4036b6:	2300      	movs	r3, #0
  4036b8:	4606      	mov	r6, r0
  4036ba:	460f      	mov	r7, r1
  4036bc:	f002 fdc2 	bl	406244 <__aeabi_dcmpeq>
  4036c0:	2800      	cmp	r0, #0
  4036c2:	f040 83c1 	bne.w	403e48 <_dtoa_r+0xa60>
  4036c6:	4642      	mov	r2, r8
  4036c8:	464b      	mov	r3, r9
  4036ca:	4630      	mov	r0, r6
  4036cc:	4639      	mov	r1, r7
  4036ce:	f002 fc7b 	bl	405fc8 <__aeabi_ddiv>
  4036d2:	f002 fdff 	bl	4062d4 <__aeabi_d2iz>
  4036d6:	4604      	mov	r4, r0
  4036d8:	f002 fae6 	bl	405ca8 <__aeabi_i2d>
  4036dc:	4642      	mov	r2, r8
  4036de:	464b      	mov	r3, r9
  4036e0:	f002 fb48 	bl	405d74 <__aeabi_dmul>
  4036e4:	4602      	mov	r2, r0
  4036e6:	460b      	mov	r3, r1
  4036e8:	4630      	mov	r0, r6
  4036ea:	4639      	mov	r1, r7
  4036ec:	f002 f98e 	bl	405a0c <__aeabi_dsub>
  4036f0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4036f4:	9e04      	ldr	r6, [sp, #16]
  4036f6:	f805 eb01 	strb.w	lr, [r5], #1
  4036fa:	eba5 0e06 	sub.w	lr, r5, r6
  4036fe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403700:	45b6      	cmp	lr, r6
  403702:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403706:	4652      	mov	r2, sl
  403708:	465b      	mov	r3, fp
  40370a:	d1d1      	bne.n	4036b0 <_dtoa_r+0x2c8>
  40370c:	46a0      	mov	r8, r4
  40370e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403712:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403714:	4606      	mov	r6, r0
  403716:	460f      	mov	r7, r1
  403718:	4632      	mov	r2, r6
  40371a:	463b      	mov	r3, r7
  40371c:	4630      	mov	r0, r6
  40371e:	4639      	mov	r1, r7
  403720:	f002 f976 	bl	405a10 <__adddf3>
  403724:	4606      	mov	r6, r0
  403726:	460f      	mov	r7, r1
  403728:	4602      	mov	r2, r0
  40372a:	460b      	mov	r3, r1
  40372c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403730:	f002 fd92 	bl	406258 <__aeabi_dcmplt>
  403734:	b948      	cbnz	r0, 40374a <_dtoa_r+0x362>
  403736:	4632      	mov	r2, r6
  403738:	463b      	mov	r3, r7
  40373a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40373e:	f002 fd81 	bl	406244 <__aeabi_dcmpeq>
  403742:	b1a8      	cbz	r0, 403770 <_dtoa_r+0x388>
  403744:	f018 0f01 	tst.w	r8, #1
  403748:	d012      	beq.n	403770 <_dtoa_r+0x388>
  40374a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40374e:	9a04      	ldr	r2, [sp, #16]
  403750:	1e6b      	subs	r3, r5, #1
  403752:	e004      	b.n	40375e <_dtoa_r+0x376>
  403754:	429a      	cmp	r2, r3
  403756:	f000 8401 	beq.w	403f5c <_dtoa_r+0xb74>
  40375a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40375e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403762:	f103 0501 	add.w	r5, r3, #1
  403766:	d0f5      	beq.n	403754 <_dtoa_r+0x36c>
  403768:	f108 0801 	add.w	r8, r8, #1
  40376c:	f883 8000 	strb.w	r8, [r3]
  403770:	4649      	mov	r1, r9
  403772:	4620      	mov	r0, r4
  403774:	f001 f960 	bl	404a38 <_Bfree>
  403778:	2200      	movs	r2, #0
  40377a:	9b02      	ldr	r3, [sp, #8]
  40377c:	702a      	strb	r2, [r5, #0]
  40377e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403780:	3301      	adds	r3, #1
  403782:	6013      	str	r3, [r2, #0]
  403784:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403786:	2b00      	cmp	r3, #0
  403788:	f000 839e 	beq.w	403ec8 <_dtoa_r+0xae0>
  40378c:	9804      	ldr	r0, [sp, #16]
  40378e:	601d      	str	r5, [r3, #0]
  403790:	b01b      	add	sp, #108	; 0x6c
  403792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403796:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403798:	2a00      	cmp	r2, #0
  40379a:	d03e      	beq.n	40381a <_dtoa_r+0x432>
  40379c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40379e:	2a01      	cmp	r2, #1
  4037a0:	f340 8311 	ble.w	403dc6 <_dtoa_r+0x9de>
  4037a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4037a8:	1e5f      	subs	r7, r3, #1
  4037aa:	42ba      	cmp	r2, r7
  4037ac:	f2c0 838f 	blt.w	403ece <_dtoa_r+0xae6>
  4037b0:	1bd7      	subs	r7, r2, r7
  4037b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037b4:	2b00      	cmp	r3, #0
  4037b6:	f2c0 848b 	blt.w	4040d0 <_dtoa_r+0xce8>
  4037ba:	9d08      	ldr	r5, [sp, #32]
  4037bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037be:	9a08      	ldr	r2, [sp, #32]
  4037c0:	441a      	add	r2, r3
  4037c2:	9208      	str	r2, [sp, #32]
  4037c4:	9a06      	ldr	r2, [sp, #24]
  4037c6:	2101      	movs	r1, #1
  4037c8:	441a      	add	r2, r3
  4037ca:	4620      	mov	r0, r4
  4037cc:	9206      	str	r2, [sp, #24]
  4037ce:	f001 f9cd 	bl	404b6c <__i2b>
  4037d2:	4606      	mov	r6, r0
  4037d4:	e024      	b.n	403820 <_dtoa_r+0x438>
  4037d6:	2301      	movs	r3, #1
  4037d8:	930e      	str	r3, [sp, #56]	; 0x38
  4037da:	e6af      	b.n	40353c <_dtoa_r+0x154>
  4037dc:	9a08      	ldr	r2, [sp, #32]
  4037de:	9b02      	ldr	r3, [sp, #8]
  4037e0:	1ad2      	subs	r2, r2, r3
  4037e2:	425b      	negs	r3, r3
  4037e4:	930c      	str	r3, [sp, #48]	; 0x30
  4037e6:	2300      	movs	r3, #0
  4037e8:	9208      	str	r2, [sp, #32]
  4037ea:	930d      	str	r3, [sp, #52]	; 0x34
  4037ec:	e6b8      	b.n	403560 <_dtoa_r+0x178>
  4037ee:	f1c7 0301 	rsb	r3, r7, #1
  4037f2:	9308      	str	r3, [sp, #32]
  4037f4:	2300      	movs	r3, #0
  4037f6:	9306      	str	r3, [sp, #24]
  4037f8:	e6a7      	b.n	40354a <_dtoa_r+0x162>
  4037fa:	9d02      	ldr	r5, [sp, #8]
  4037fc:	4628      	mov	r0, r5
  4037fe:	f002 fa53 	bl	405ca8 <__aeabi_i2d>
  403802:	4602      	mov	r2, r0
  403804:	460b      	mov	r3, r1
  403806:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40380a:	f002 fd1b 	bl	406244 <__aeabi_dcmpeq>
  40380e:	2800      	cmp	r0, #0
  403810:	f47f ae80 	bne.w	403514 <_dtoa_r+0x12c>
  403814:	1e6b      	subs	r3, r5, #1
  403816:	9302      	str	r3, [sp, #8]
  403818:	e67c      	b.n	403514 <_dtoa_r+0x12c>
  40381a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40381c:	9d08      	ldr	r5, [sp, #32]
  40381e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403820:	2d00      	cmp	r5, #0
  403822:	dd0c      	ble.n	40383e <_dtoa_r+0x456>
  403824:	9906      	ldr	r1, [sp, #24]
  403826:	2900      	cmp	r1, #0
  403828:	460b      	mov	r3, r1
  40382a:	dd08      	ble.n	40383e <_dtoa_r+0x456>
  40382c:	42a9      	cmp	r1, r5
  40382e:	9a08      	ldr	r2, [sp, #32]
  403830:	bfa8      	it	ge
  403832:	462b      	movge	r3, r5
  403834:	1ad2      	subs	r2, r2, r3
  403836:	1aed      	subs	r5, r5, r3
  403838:	1acb      	subs	r3, r1, r3
  40383a:	9208      	str	r2, [sp, #32]
  40383c:	9306      	str	r3, [sp, #24]
  40383e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403840:	b1d3      	cbz	r3, 403878 <_dtoa_r+0x490>
  403842:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403844:	2b00      	cmp	r3, #0
  403846:	f000 82b7 	beq.w	403db8 <_dtoa_r+0x9d0>
  40384a:	2f00      	cmp	r7, #0
  40384c:	dd10      	ble.n	403870 <_dtoa_r+0x488>
  40384e:	4631      	mov	r1, r6
  403850:	463a      	mov	r2, r7
  403852:	4620      	mov	r0, r4
  403854:	f001 fa26 	bl	404ca4 <__pow5mult>
  403858:	464a      	mov	r2, r9
  40385a:	4601      	mov	r1, r0
  40385c:	4606      	mov	r6, r0
  40385e:	4620      	mov	r0, r4
  403860:	f001 f98e 	bl	404b80 <__multiply>
  403864:	4649      	mov	r1, r9
  403866:	4680      	mov	r8, r0
  403868:	4620      	mov	r0, r4
  40386a:	f001 f8e5 	bl	404a38 <_Bfree>
  40386e:	46c1      	mov	r9, r8
  403870:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403872:	1bda      	subs	r2, r3, r7
  403874:	f040 82a1 	bne.w	403dba <_dtoa_r+0x9d2>
  403878:	2101      	movs	r1, #1
  40387a:	4620      	mov	r0, r4
  40387c:	f001 f976 	bl	404b6c <__i2b>
  403880:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403882:	2b00      	cmp	r3, #0
  403884:	4680      	mov	r8, r0
  403886:	dd1c      	ble.n	4038c2 <_dtoa_r+0x4da>
  403888:	4601      	mov	r1, r0
  40388a:	461a      	mov	r2, r3
  40388c:	4620      	mov	r0, r4
  40388e:	f001 fa09 	bl	404ca4 <__pow5mult>
  403892:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403894:	2b01      	cmp	r3, #1
  403896:	4680      	mov	r8, r0
  403898:	f340 8254 	ble.w	403d44 <_dtoa_r+0x95c>
  40389c:	2300      	movs	r3, #0
  40389e:	930c      	str	r3, [sp, #48]	; 0x30
  4038a0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4038a4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4038a8:	6918      	ldr	r0, [r3, #16]
  4038aa:	f001 f90f 	bl	404acc <__hi0bits>
  4038ae:	f1c0 0020 	rsb	r0, r0, #32
  4038b2:	e010      	b.n	4038d6 <_dtoa_r+0x4ee>
  4038b4:	f1c3 0520 	rsb	r5, r3, #32
  4038b8:	fa0a f005 	lsl.w	r0, sl, r5
  4038bc:	e674      	b.n	4035a8 <_dtoa_r+0x1c0>
  4038be:	900e      	str	r0, [sp, #56]	; 0x38
  4038c0:	e63c      	b.n	40353c <_dtoa_r+0x154>
  4038c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4038c4:	2b01      	cmp	r3, #1
  4038c6:	f340 8287 	ble.w	403dd8 <_dtoa_r+0x9f0>
  4038ca:	2300      	movs	r3, #0
  4038cc:	930c      	str	r3, [sp, #48]	; 0x30
  4038ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4038d0:	2001      	movs	r0, #1
  4038d2:	2b00      	cmp	r3, #0
  4038d4:	d1e4      	bne.n	4038a0 <_dtoa_r+0x4b8>
  4038d6:	9a06      	ldr	r2, [sp, #24]
  4038d8:	4410      	add	r0, r2
  4038da:	f010 001f 	ands.w	r0, r0, #31
  4038de:	f000 80a1 	beq.w	403a24 <_dtoa_r+0x63c>
  4038e2:	f1c0 0320 	rsb	r3, r0, #32
  4038e6:	2b04      	cmp	r3, #4
  4038e8:	f340 849e 	ble.w	404228 <_dtoa_r+0xe40>
  4038ec:	9b08      	ldr	r3, [sp, #32]
  4038ee:	f1c0 001c 	rsb	r0, r0, #28
  4038f2:	4403      	add	r3, r0
  4038f4:	9308      	str	r3, [sp, #32]
  4038f6:	4613      	mov	r3, r2
  4038f8:	4403      	add	r3, r0
  4038fa:	4405      	add	r5, r0
  4038fc:	9306      	str	r3, [sp, #24]
  4038fe:	9b08      	ldr	r3, [sp, #32]
  403900:	2b00      	cmp	r3, #0
  403902:	dd05      	ble.n	403910 <_dtoa_r+0x528>
  403904:	4649      	mov	r1, r9
  403906:	461a      	mov	r2, r3
  403908:	4620      	mov	r0, r4
  40390a:	f001 fa1b 	bl	404d44 <__lshift>
  40390e:	4681      	mov	r9, r0
  403910:	9b06      	ldr	r3, [sp, #24]
  403912:	2b00      	cmp	r3, #0
  403914:	dd05      	ble.n	403922 <_dtoa_r+0x53a>
  403916:	4641      	mov	r1, r8
  403918:	461a      	mov	r2, r3
  40391a:	4620      	mov	r0, r4
  40391c:	f001 fa12 	bl	404d44 <__lshift>
  403920:	4680      	mov	r8, r0
  403922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403924:	2b00      	cmp	r3, #0
  403926:	f040 8086 	bne.w	403a36 <_dtoa_r+0x64e>
  40392a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40392c:	2b00      	cmp	r3, #0
  40392e:	f340 8266 	ble.w	403dfe <_dtoa_r+0xa16>
  403932:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403934:	2b00      	cmp	r3, #0
  403936:	f000 8098 	beq.w	403a6a <_dtoa_r+0x682>
  40393a:	2d00      	cmp	r5, #0
  40393c:	dd05      	ble.n	40394a <_dtoa_r+0x562>
  40393e:	4631      	mov	r1, r6
  403940:	462a      	mov	r2, r5
  403942:	4620      	mov	r0, r4
  403944:	f001 f9fe 	bl	404d44 <__lshift>
  403948:	4606      	mov	r6, r0
  40394a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40394c:	2b00      	cmp	r3, #0
  40394e:	f040 8337 	bne.w	403fc0 <_dtoa_r+0xbd8>
  403952:	9606      	str	r6, [sp, #24]
  403954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403956:	9a04      	ldr	r2, [sp, #16]
  403958:	f8dd b018 	ldr.w	fp, [sp, #24]
  40395c:	3b01      	subs	r3, #1
  40395e:	18d3      	adds	r3, r2, r3
  403960:	930b      	str	r3, [sp, #44]	; 0x2c
  403962:	f00a 0301 	and.w	r3, sl, #1
  403966:	930c      	str	r3, [sp, #48]	; 0x30
  403968:	4617      	mov	r7, r2
  40396a:	46c2      	mov	sl, r8
  40396c:	4651      	mov	r1, sl
  40396e:	4648      	mov	r0, r9
  403970:	f7ff fca6 	bl	4032c0 <quorem>
  403974:	4631      	mov	r1, r6
  403976:	4605      	mov	r5, r0
  403978:	4648      	mov	r0, r9
  40397a:	f001 fa35 	bl	404de8 <__mcmp>
  40397e:	465a      	mov	r2, fp
  403980:	900a      	str	r0, [sp, #40]	; 0x28
  403982:	4651      	mov	r1, sl
  403984:	4620      	mov	r0, r4
  403986:	f001 fa4b 	bl	404e20 <__mdiff>
  40398a:	68c2      	ldr	r2, [r0, #12]
  40398c:	4680      	mov	r8, r0
  40398e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403992:	2a00      	cmp	r2, #0
  403994:	f040 822b 	bne.w	403dee <_dtoa_r+0xa06>
  403998:	4601      	mov	r1, r0
  40399a:	4648      	mov	r0, r9
  40399c:	9308      	str	r3, [sp, #32]
  40399e:	f001 fa23 	bl	404de8 <__mcmp>
  4039a2:	4641      	mov	r1, r8
  4039a4:	9006      	str	r0, [sp, #24]
  4039a6:	4620      	mov	r0, r4
  4039a8:	f001 f846 	bl	404a38 <_Bfree>
  4039ac:	9a06      	ldr	r2, [sp, #24]
  4039ae:	9b08      	ldr	r3, [sp, #32]
  4039b0:	b932      	cbnz	r2, 4039c0 <_dtoa_r+0x5d8>
  4039b2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4039b4:	b921      	cbnz	r1, 4039c0 <_dtoa_r+0x5d8>
  4039b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4039b8:	2a00      	cmp	r2, #0
  4039ba:	f000 83ef 	beq.w	40419c <_dtoa_r+0xdb4>
  4039be:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4039c0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4039c2:	2900      	cmp	r1, #0
  4039c4:	f2c0 829f 	blt.w	403f06 <_dtoa_r+0xb1e>
  4039c8:	d105      	bne.n	4039d6 <_dtoa_r+0x5ee>
  4039ca:	9924      	ldr	r1, [sp, #144]	; 0x90
  4039cc:	b919      	cbnz	r1, 4039d6 <_dtoa_r+0x5ee>
  4039ce:	990c      	ldr	r1, [sp, #48]	; 0x30
  4039d0:	2900      	cmp	r1, #0
  4039d2:	f000 8298 	beq.w	403f06 <_dtoa_r+0xb1e>
  4039d6:	2a00      	cmp	r2, #0
  4039d8:	f300 8306 	bgt.w	403fe8 <_dtoa_r+0xc00>
  4039dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4039de:	703b      	strb	r3, [r7, #0]
  4039e0:	f107 0801 	add.w	r8, r7, #1
  4039e4:	4297      	cmp	r7, r2
  4039e6:	4645      	mov	r5, r8
  4039e8:	f000 830c 	beq.w	404004 <_dtoa_r+0xc1c>
  4039ec:	4649      	mov	r1, r9
  4039ee:	2300      	movs	r3, #0
  4039f0:	220a      	movs	r2, #10
  4039f2:	4620      	mov	r0, r4
  4039f4:	f001 f82a 	bl	404a4c <__multadd>
  4039f8:	455e      	cmp	r6, fp
  4039fa:	4681      	mov	r9, r0
  4039fc:	4631      	mov	r1, r6
  4039fe:	f04f 0300 	mov.w	r3, #0
  403a02:	f04f 020a 	mov.w	r2, #10
  403a06:	4620      	mov	r0, r4
  403a08:	f000 81eb 	beq.w	403de2 <_dtoa_r+0x9fa>
  403a0c:	f001 f81e 	bl	404a4c <__multadd>
  403a10:	4659      	mov	r1, fp
  403a12:	4606      	mov	r6, r0
  403a14:	2300      	movs	r3, #0
  403a16:	220a      	movs	r2, #10
  403a18:	4620      	mov	r0, r4
  403a1a:	f001 f817 	bl	404a4c <__multadd>
  403a1e:	4647      	mov	r7, r8
  403a20:	4683      	mov	fp, r0
  403a22:	e7a3      	b.n	40396c <_dtoa_r+0x584>
  403a24:	201c      	movs	r0, #28
  403a26:	9b08      	ldr	r3, [sp, #32]
  403a28:	4403      	add	r3, r0
  403a2a:	9308      	str	r3, [sp, #32]
  403a2c:	9b06      	ldr	r3, [sp, #24]
  403a2e:	4403      	add	r3, r0
  403a30:	4405      	add	r5, r0
  403a32:	9306      	str	r3, [sp, #24]
  403a34:	e763      	b.n	4038fe <_dtoa_r+0x516>
  403a36:	4641      	mov	r1, r8
  403a38:	4648      	mov	r0, r9
  403a3a:	f001 f9d5 	bl	404de8 <__mcmp>
  403a3e:	2800      	cmp	r0, #0
  403a40:	f6bf af73 	bge.w	40392a <_dtoa_r+0x542>
  403a44:	9f02      	ldr	r7, [sp, #8]
  403a46:	4649      	mov	r1, r9
  403a48:	2300      	movs	r3, #0
  403a4a:	220a      	movs	r2, #10
  403a4c:	4620      	mov	r0, r4
  403a4e:	3f01      	subs	r7, #1
  403a50:	9702      	str	r7, [sp, #8]
  403a52:	f000 fffb 	bl	404a4c <__multadd>
  403a56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403a58:	4681      	mov	r9, r0
  403a5a:	2b00      	cmp	r3, #0
  403a5c:	f040 83b6 	bne.w	4041cc <_dtoa_r+0xde4>
  403a60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403a62:	2b00      	cmp	r3, #0
  403a64:	f340 83bf 	ble.w	4041e6 <_dtoa_r+0xdfe>
  403a68:	930a      	str	r3, [sp, #40]	; 0x28
  403a6a:	f8dd b010 	ldr.w	fp, [sp, #16]
  403a6e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403a70:	465d      	mov	r5, fp
  403a72:	e002      	b.n	403a7a <_dtoa_r+0x692>
  403a74:	f000 ffea 	bl	404a4c <__multadd>
  403a78:	4681      	mov	r9, r0
  403a7a:	4641      	mov	r1, r8
  403a7c:	4648      	mov	r0, r9
  403a7e:	f7ff fc1f 	bl	4032c0 <quorem>
  403a82:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403a86:	f805 ab01 	strb.w	sl, [r5], #1
  403a8a:	eba5 030b 	sub.w	r3, r5, fp
  403a8e:	42bb      	cmp	r3, r7
  403a90:	f04f 020a 	mov.w	r2, #10
  403a94:	f04f 0300 	mov.w	r3, #0
  403a98:	4649      	mov	r1, r9
  403a9a:	4620      	mov	r0, r4
  403a9c:	dbea      	blt.n	403a74 <_dtoa_r+0x68c>
  403a9e:	9b04      	ldr	r3, [sp, #16]
  403aa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403aa2:	2a01      	cmp	r2, #1
  403aa4:	bfac      	ite	ge
  403aa6:	189b      	addge	r3, r3, r2
  403aa8:	3301      	addlt	r3, #1
  403aaa:	461d      	mov	r5, r3
  403aac:	f04f 0b00 	mov.w	fp, #0
  403ab0:	4649      	mov	r1, r9
  403ab2:	2201      	movs	r2, #1
  403ab4:	4620      	mov	r0, r4
  403ab6:	f001 f945 	bl	404d44 <__lshift>
  403aba:	4641      	mov	r1, r8
  403abc:	4681      	mov	r9, r0
  403abe:	f001 f993 	bl	404de8 <__mcmp>
  403ac2:	2800      	cmp	r0, #0
  403ac4:	f340 823d 	ble.w	403f42 <_dtoa_r+0xb5a>
  403ac8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403acc:	9904      	ldr	r1, [sp, #16]
  403ace:	1e6b      	subs	r3, r5, #1
  403ad0:	e004      	b.n	403adc <_dtoa_r+0x6f4>
  403ad2:	428b      	cmp	r3, r1
  403ad4:	f000 81ae 	beq.w	403e34 <_dtoa_r+0xa4c>
  403ad8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403adc:	2a39      	cmp	r2, #57	; 0x39
  403ade:	f103 0501 	add.w	r5, r3, #1
  403ae2:	d0f6      	beq.n	403ad2 <_dtoa_r+0x6ea>
  403ae4:	3201      	adds	r2, #1
  403ae6:	701a      	strb	r2, [r3, #0]
  403ae8:	4641      	mov	r1, r8
  403aea:	4620      	mov	r0, r4
  403aec:	f000 ffa4 	bl	404a38 <_Bfree>
  403af0:	2e00      	cmp	r6, #0
  403af2:	f43f ae3d 	beq.w	403770 <_dtoa_r+0x388>
  403af6:	f1bb 0f00 	cmp.w	fp, #0
  403afa:	d005      	beq.n	403b08 <_dtoa_r+0x720>
  403afc:	45b3      	cmp	fp, r6
  403afe:	d003      	beq.n	403b08 <_dtoa_r+0x720>
  403b00:	4659      	mov	r1, fp
  403b02:	4620      	mov	r0, r4
  403b04:	f000 ff98 	bl	404a38 <_Bfree>
  403b08:	4631      	mov	r1, r6
  403b0a:	4620      	mov	r0, r4
  403b0c:	f000 ff94 	bl	404a38 <_Bfree>
  403b10:	e62e      	b.n	403770 <_dtoa_r+0x388>
  403b12:	2300      	movs	r3, #0
  403b14:	930b      	str	r3, [sp, #44]	; 0x2c
  403b16:	9b02      	ldr	r3, [sp, #8]
  403b18:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b1a:	4413      	add	r3, r2
  403b1c:	930f      	str	r3, [sp, #60]	; 0x3c
  403b1e:	3301      	adds	r3, #1
  403b20:	2b01      	cmp	r3, #1
  403b22:	461f      	mov	r7, r3
  403b24:	461e      	mov	r6, r3
  403b26:	930a      	str	r3, [sp, #40]	; 0x28
  403b28:	bfb8      	it	lt
  403b2a:	2701      	movlt	r7, #1
  403b2c:	2100      	movs	r1, #0
  403b2e:	2f17      	cmp	r7, #23
  403b30:	6461      	str	r1, [r4, #68]	; 0x44
  403b32:	d90a      	bls.n	403b4a <_dtoa_r+0x762>
  403b34:	2201      	movs	r2, #1
  403b36:	2304      	movs	r3, #4
  403b38:	005b      	lsls	r3, r3, #1
  403b3a:	f103 0014 	add.w	r0, r3, #20
  403b3e:	4287      	cmp	r7, r0
  403b40:	4611      	mov	r1, r2
  403b42:	f102 0201 	add.w	r2, r2, #1
  403b46:	d2f7      	bcs.n	403b38 <_dtoa_r+0x750>
  403b48:	6461      	str	r1, [r4, #68]	; 0x44
  403b4a:	4620      	mov	r0, r4
  403b4c:	f000 ff4e 	bl	4049ec <_Balloc>
  403b50:	2e0e      	cmp	r6, #14
  403b52:	9004      	str	r0, [sp, #16]
  403b54:	6420      	str	r0, [r4, #64]	; 0x40
  403b56:	f63f ad41 	bhi.w	4035dc <_dtoa_r+0x1f4>
  403b5a:	2d00      	cmp	r5, #0
  403b5c:	f43f ad3e 	beq.w	4035dc <_dtoa_r+0x1f4>
  403b60:	9902      	ldr	r1, [sp, #8]
  403b62:	2900      	cmp	r1, #0
  403b64:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403b68:	f340 8202 	ble.w	403f70 <_dtoa_r+0xb88>
  403b6c:	4bb8      	ldr	r3, [pc, #736]	; (403e50 <_dtoa_r+0xa68>)
  403b6e:	f001 020f 	and.w	r2, r1, #15
  403b72:	110d      	asrs	r5, r1, #4
  403b74:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b78:	06e9      	lsls	r1, r5, #27
  403b7a:	e9d3 6700 	ldrd	r6, r7, [r3]
  403b7e:	f140 81ae 	bpl.w	403ede <_dtoa_r+0xaf6>
  403b82:	4bb4      	ldr	r3, [pc, #720]	; (403e54 <_dtoa_r+0xa6c>)
  403b84:	4650      	mov	r0, sl
  403b86:	4659      	mov	r1, fp
  403b88:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403b8c:	f002 fa1c 	bl	405fc8 <__aeabi_ddiv>
  403b90:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403b94:	f005 050f 	and.w	r5, r5, #15
  403b98:	f04f 0a03 	mov.w	sl, #3
  403b9c:	b18d      	cbz	r5, 403bc2 <_dtoa_r+0x7da>
  403b9e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403e54 <_dtoa_r+0xa6c>
  403ba2:	07ea      	lsls	r2, r5, #31
  403ba4:	d509      	bpl.n	403bba <_dtoa_r+0x7d2>
  403ba6:	4630      	mov	r0, r6
  403ba8:	4639      	mov	r1, r7
  403baa:	e9d8 2300 	ldrd	r2, r3, [r8]
  403bae:	f002 f8e1 	bl	405d74 <__aeabi_dmul>
  403bb2:	f10a 0a01 	add.w	sl, sl, #1
  403bb6:	4606      	mov	r6, r0
  403bb8:	460f      	mov	r7, r1
  403bba:	106d      	asrs	r5, r5, #1
  403bbc:	f108 0808 	add.w	r8, r8, #8
  403bc0:	d1ef      	bne.n	403ba2 <_dtoa_r+0x7ba>
  403bc2:	463b      	mov	r3, r7
  403bc4:	4632      	mov	r2, r6
  403bc6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403bca:	f002 f9fd 	bl	405fc8 <__aeabi_ddiv>
  403bce:	4607      	mov	r7, r0
  403bd0:	4688      	mov	r8, r1
  403bd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403bd4:	b143      	cbz	r3, 403be8 <_dtoa_r+0x800>
  403bd6:	2200      	movs	r2, #0
  403bd8:	4b9f      	ldr	r3, [pc, #636]	; (403e58 <_dtoa_r+0xa70>)
  403bda:	4638      	mov	r0, r7
  403bdc:	4641      	mov	r1, r8
  403bde:	f002 fb3b 	bl	406258 <__aeabi_dcmplt>
  403be2:	2800      	cmp	r0, #0
  403be4:	f040 8286 	bne.w	4040f4 <_dtoa_r+0xd0c>
  403be8:	4650      	mov	r0, sl
  403bea:	f002 f85d 	bl	405ca8 <__aeabi_i2d>
  403bee:	463a      	mov	r2, r7
  403bf0:	4643      	mov	r3, r8
  403bf2:	f002 f8bf 	bl	405d74 <__aeabi_dmul>
  403bf6:	4b99      	ldr	r3, [pc, #612]	; (403e5c <_dtoa_r+0xa74>)
  403bf8:	2200      	movs	r2, #0
  403bfa:	f001 ff09 	bl	405a10 <__adddf3>
  403bfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c00:	4605      	mov	r5, r0
  403c02:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403c06:	2b00      	cmp	r3, #0
  403c08:	f000 813e 	beq.w	403e88 <_dtoa_r+0xaa0>
  403c0c:	9b02      	ldr	r3, [sp, #8]
  403c0e:	9315      	str	r3, [sp, #84]	; 0x54
  403c10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c12:	9312      	str	r3, [sp, #72]	; 0x48
  403c14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c16:	2b00      	cmp	r3, #0
  403c18:	f000 81fa 	beq.w	404010 <_dtoa_r+0xc28>
  403c1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403c1e:	4b8c      	ldr	r3, [pc, #560]	; (403e50 <_dtoa_r+0xa68>)
  403c20:	498f      	ldr	r1, [pc, #572]	; (403e60 <_dtoa_r+0xa78>)
  403c22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c26:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403c2a:	2000      	movs	r0, #0
  403c2c:	f002 f9cc 	bl	405fc8 <__aeabi_ddiv>
  403c30:	462a      	mov	r2, r5
  403c32:	4633      	mov	r3, r6
  403c34:	f001 feea 	bl	405a0c <__aeabi_dsub>
  403c38:	4682      	mov	sl, r0
  403c3a:	468b      	mov	fp, r1
  403c3c:	4638      	mov	r0, r7
  403c3e:	4641      	mov	r1, r8
  403c40:	f002 fb48 	bl	4062d4 <__aeabi_d2iz>
  403c44:	4605      	mov	r5, r0
  403c46:	f002 f82f 	bl	405ca8 <__aeabi_i2d>
  403c4a:	4602      	mov	r2, r0
  403c4c:	460b      	mov	r3, r1
  403c4e:	4638      	mov	r0, r7
  403c50:	4641      	mov	r1, r8
  403c52:	f001 fedb 	bl	405a0c <__aeabi_dsub>
  403c56:	3530      	adds	r5, #48	; 0x30
  403c58:	fa5f f885 	uxtb.w	r8, r5
  403c5c:	9d04      	ldr	r5, [sp, #16]
  403c5e:	4606      	mov	r6, r0
  403c60:	460f      	mov	r7, r1
  403c62:	f885 8000 	strb.w	r8, [r5]
  403c66:	4602      	mov	r2, r0
  403c68:	460b      	mov	r3, r1
  403c6a:	4650      	mov	r0, sl
  403c6c:	4659      	mov	r1, fp
  403c6e:	3501      	adds	r5, #1
  403c70:	f002 fb10 	bl	406294 <__aeabi_dcmpgt>
  403c74:	2800      	cmp	r0, #0
  403c76:	d154      	bne.n	403d22 <_dtoa_r+0x93a>
  403c78:	4632      	mov	r2, r6
  403c7a:	463b      	mov	r3, r7
  403c7c:	2000      	movs	r0, #0
  403c7e:	4976      	ldr	r1, [pc, #472]	; (403e58 <_dtoa_r+0xa70>)
  403c80:	f001 fec4 	bl	405a0c <__aeabi_dsub>
  403c84:	4602      	mov	r2, r0
  403c86:	460b      	mov	r3, r1
  403c88:	4650      	mov	r0, sl
  403c8a:	4659      	mov	r1, fp
  403c8c:	f002 fb02 	bl	406294 <__aeabi_dcmpgt>
  403c90:	2800      	cmp	r0, #0
  403c92:	f040 8270 	bne.w	404176 <_dtoa_r+0xd8e>
  403c96:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403c98:	2a01      	cmp	r2, #1
  403c9a:	f000 8111 	beq.w	403ec0 <_dtoa_r+0xad8>
  403c9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403ca0:	9a04      	ldr	r2, [sp, #16]
  403ca2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403ca6:	4413      	add	r3, r2
  403ca8:	4699      	mov	r9, r3
  403caa:	e00d      	b.n	403cc8 <_dtoa_r+0x8e0>
  403cac:	2000      	movs	r0, #0
  403cae:	496a      	ldr	r1, [pc, #424]	; (403e58 <_dtoa_r+0xa70>)
  403cb0:	f001 feac 	bl	405a0c <__aeabi_dsub>
  403cb4:	4652      	mov	r2, sl
  403cb6:	465b      	mov	r3, fp
  403cb8:	f002 face 	bl	406258 <__aeabi_dcmplt>
  403cbc:	2800      	cmp	r0, #0
  403cbe:	f040 8258 	bne.w	404172 <_dtoa_r+0xd8a>
  403cc2:	454d      	cmp	r5, r9
  403cc4:	f000 80fa 	beq.w	403ebc <_dtoa_r+0xad4>
  403cc8:	4650      	mov	r0, sl
  403cca:	4659      	mov	r1, fp
  403ccc:	2200      	movs	r2, #0
  403cce:	4b65      	ldr	r3, [pc, #404]	; (403e64 <_dtoa_r+0xa7c>)
  403cd0:	f002 f850 	bl	405d74 <__aeabi_dmul>
  403cd4:	2200      	movs	r2, #0
  403cd6:	4b63      	ldr	r3, [pc, #396]	; (403e64 <_dtoa_r+0xa7c>)
  403cd8:	4682      	mov	sl, r0
  403cda:	468b      	mov	fp, r1
  403cdc:	4630      	mov	r0, r6
  403cde:	4639      	mov	r1, r7
  403ce0:	f002 f848 	bl	405d74 <__aeabi_dmul>
  403ce4:	460f      	mov	r7, r1
  403ce6:	4606      	mov	r6, r0
  403ce8:	f002 faf4 	bl	4062d4 <__aeabi_d2iz>
  403cec:	4680      	mov	r8, r0
  403cee:	f001 ffdb 	bl	405ca8 <__aeabi_i2d>
  403cf2:	4602      	mov	r2, r0
  403cf4:	460b      	mov	r3, r1
  403cf6:	4630      	mov	r0, r6
  403cf8:	4639      	mov	r1, r7
  403cfa:	f001 fe87 	bl	405a0c <__aeabi_dsub>
  403cfe:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403d02:	fa5f f888 	uxtb.w	r8, r8
  403d06:	4652      	mov	r2, sl
  403d08:	465b      	mov	r3, fp
  403d0a:	f805 8b01 	strb.w	r8, [r5], #1
  403d0e:	4606      	mov	r6, r0
  403d10:	460f      	mov	r7, r1
  403d12:	f002 faa1 	bl	406258 <__aeabi_dcmplt>
  403d16:	4632      	mov	r2, r6
  403d18:	463b      	mov	r3, r7
  403d1a:	2800      	cmp	r0, #0
  403d1c:	d0c6      	beq.n	403cac <_dtoa_r+0x8c4>
  403d1e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403d22:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403d24:	9302      	str	r3, [sp, #8]
  403d26:	e523      	b.n	403770 <_dtoa_r+0x388>
  403d28:	2300      	movs	r3, #0
  403d2a:	930b      	str	r3, [sp, #44]	; 0x2c
  403d2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403d2e:	2b00      	cmp	r3, #0
  403d30:	f340 80dc 	ble.w	403eec <_dtoa_r+0xb04>
  403d34:	461f      	mov	r7, r3
  403d36:	461e      	mov	r6, r3
  403d38:	930f      	str	r3, [sp, #60]	; 0x3c
  403d3a:	930a      	str	r3, [sp, #40]	; 0x28
  403d3c:	e6f6      	b.n	403b2c <_dtoa_r+0x744>
  403d3e:	2301      	movs	r3, #1
  403d40:	930b      	str	r3, [sp, #44]	; 0x2c
  403d42:	e7f3      	b.n	403d2c <_dtoa_r+0x944>
  403d44:	f1ba 0f00 	cmp.w	sl, #0
  403d48:	f47f ada8 	bne.w	40389c <_dtoa_r+0x4b4>
  403d4c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403d50:	2b00      	cmp	r3, #0
  403d52:	f47f adba 	bne.w	4038ca <_dtoa_r+0x4e2>
  403d56:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403d5a:	0d3f      	lsrs	r7, r7, #20
  403d5c:	053f      	lsls	r7, r7, #20
  403d5e:	2f00      	cmp	r7, #0
  403d60:	f000 820d 	beq.w	40417e <_dtoa_r+0xd96>
  403d64:	9b08      	ldr	r3, [sp, #32]
  403d66:	3301      	adds	r3, #1
  403d68:	9308      	str	r3, [sp, #32]
  403d6a:	9b06      	ldr	r3, [sp, #24]
  403d6c:	3301      	adds	r3, #1
  403d6e:	9306      	str	r3, [sp, #24]
  403d70:	2301      	movs	r3, #1
  403d72:	930c      	str	r3, [sp, #48]	; 0x30
  403d74:	e5ab      	b.n	4038ce <_dtoa_r+0x4e6>
  403d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d78:	2b00      	cmp	r3, #0
  403d7a:	f73f ac42 	bgt.w	403602 <_dtoa_r+0x21a>
  403d7e:	f040 8221 	bne.w	4041c4 <_dtoa_r+0xddc>
  403d82:	2200      	movs	r2, #0
  403d84:	4b38      	ldr	r3, [pc, #224]	; (403e68 <_dtoa_r+0xa80>)
  403d86:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d8a:	f001 fff3 	bl	405d74 <__aeabi_dmul>
  403d8e:	4652      	mov	r2, sl
  403d90:	465b      	mov	r3, fp
  403d92:	f002 fa75 	bl	406280 <__aeabi_dcmpge>
  403d96:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403d9a:	4646      	mov	r6, r8
  403d9c:	2800      	cmp	r0, #0
  403d9e:	d041      	beq.n	403e24 <_dtoa_r+0xa3c>
  403da0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403da2:	9d04      	ldr	r5, [sp, #16]
  403da4:	43db      	mvns	r3, r3
  403da6:	9302      	str	r3, [sp, #8]
  403da8:	4641      	mov	r1, r8
  403daa:	4620      	mov	r0, r4
  403dac:	f000 fe44 	bl	404a38 <_Bfree>
  403db0:	2e00      	cmp	r6, #0
  403db2:	f43f acdd 	beq.w	403770 <_dtoa_r+0x388>
  403db6:	e6a7      	b.n	403b08 <_dtoa_r+0x720>
  403db8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403dba:	4649      	mov	r1, r9
  403dbc:	4620      	mov	r0, r4
  403dbe:	f000 ff71 	bl	404ca4 <__pow5mult>
  403dc2:	4681      	mov	r9, r0
  403dc4:	e558      	b.n	403878 <_dtoa_r+0x490>
  403dc6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403dc8:	2a00      	cmp	r2, #0
  403dca:	f000 8187 	beq.w	4040dc <_dtoa_r+0xcf4>
  403dce:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403dd2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403dd4:	9d08      	ldr	r5, [sp, #32]
  403dd6:	e4f2      	b.n	4037be <_dtoa_r+0x3d6>
  403dd8:	f1ba 0f00 	cmp.w	sl, #0
  403ddc:	f47f ad75 	bne.w	4038ca <_dtoa_r+0x4e2>
  403de0:	e7b4      	b.n	403d4c <_dtoa_r+0x964>
  403de2:	f000 fe33 	bl	404a4c <__multadd>
  403de6:	4647      	mov	r7, r8
  403de8:	4606      	mov	r6, r0
  403dea:	4683      	mov	fp, r0
  403dec:	e5be      	b.n	40396c <_dtoa_r+0x584>
  403dee:	4601      	mov	r1, r0
  403df0:	4620      	mov	r0, r4
  403df2:	9306      	str	r3, [sp, #24]
  403df4:	f000 fe20 	bl	404a38 <_Bfree>
  403df8:	2201      	movs	r2, #1
  403dfa:	9b06      	ldr	r3, [sp, #24]
  403dfc:	e5e0      	b.n	4039c0 <_dtoa_r+0x5d8>
  403dfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e00:	2b02      	cmp	r3, #2
  403e02:	f77f ad96 	ble.w	403932 <_dtoa_r+0x54a>
  403e06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e08:	2b00      	cmp	r3, #0
  403e0a:	d1c9      	bne.n	403da0 <_dtoa_r+0x9b8>
  403e0c:	4641      	mov	r1, r8
  403e0e:	2205      	movs	r2, #5
  403e10:	4620      	mov	r0, r4
  403e12:	f000 fe1b 	bl	404a4c <__multadd>
  403e16:	4601      	mov	r1, r0
  403e18:	4680      	mov	r8, r0
  403e1a:	4648      	mov	r0, r9
  403e1c:	f000 ffe4 	bl	404de8 <__mcmp>
  403e20:	2800      	cmp	r0, #0
  403e22:	ddbd      	ble.n	403da0 <_dtoa_r+0x9b8>
  403e24:	9a02      	ldr	r2, [sp, #8]
  403e26:	9904      	ldr	r1, [sp, #16]
  403e28:	2331      	movs	r3, #49	; 0x31
  403e2a:	3201      	adds	r2, #1
  403e2c:	9202      	str	r2, [sp, #8]
  403e2e:	700b      	strb	r3, [r1, #0]
  403e30:	1c4d      	adds	r5, r1, #1
  403e32:	e7b9      	b.n	403da8 <_dtoa_r+0x9c0>
  403e34:	9a02      	ldr	r2, [sp, #8]
  403e36:	3201      	adds	r2, #1
  403e38:	9202      	str	r2, [sp, #8]
  403e3a:	9a04      	ldr	r2, [sp, #16]
  403e3c:	2331      	movs	r3, #49	; 0x31
  403e3e:	7013      	strb	r3, [r2, #0]
  403e40:	e652      	b.n	403ae8 <_dtoa_r+0x700>
  403e42:	2301      	movs	r3, #1
  403e44:	930b      	str	r3, [sp, #44]	; 0x2c
  403e46:	e666      	b.n	403b16 <_dtoa_r+0x72e>
  403e48:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403e4c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403e4e:	e48f      	b.n	403770 <_dtoa_r+0x388>
  403e50:	00406e18 	.word	0x00406e18
  403e54:	00406df0 	.word	0x00406df0
  403e58:	3ff00000 	.word	0x3ff00000
  403e5c:	401c0000 	.word	0x401c0000
  403e60:	3fe00000 	.word	0x3fe00000
  403e64:	40240000 	.word	0x40240000
  403e68:	40140000 	.word	0x40140000
  403e6c:	4650      	mov	r0, sl
  403e6e:	f001 ff1b 	bl	405ca8 <__aeabi_i2d>
  403e72:	463a      	mov	r2, r7
  403e74:	4643      	mov	r3, r8
  403e76:	f001 ff7d 	bl	405d74 <__aeabi_dmul>
  403e7a:	2200      	movs	r2, #0
  403e7c:	4bc1      	ldr	r3, [pc, #772]	; (404184 <_dtoa_r+0xd9c>)
  403e7e:	f001 fdc7 	bl	405a10 <__adddf3>
  403e82:	4605      	mov	r5, r0
  403e84:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403e88:	4641      	mov	r1, r8
  403e8a:	2200      	movs	r2, #0
  403e8c:	4bbe      	ldr	r3, [pc, #760]	; (404188 <_dtoa_r+0xda0>)
  403e8e:	4638      	mov	r0, r7
  403e90:	f001 fdbc 	bl	405a0c <__aeabi_dsub>
  403e94:	462a      	mov	r2, r5
  403e96:	4633      	mov	r3, r6
  403e98:	4682      	mov	sl, r0
  403e9a:	468b      	mov	fp, r1
  403e9c:	f002 f9fa 	bl	406294 <__aeabi_dcmpgt>
  403ea0:	4680      	mov	r8, r0
  403ea2:	2800      	cmp	r0, #0
  403ea4:	f040 8110 	bne.w	4040c8 <_dtoa_r+0xce0>
  403ea8:	462a      	mov	r2, r5
  403eaa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403eae:	4650      	mov	r0, sl
  403eb0:	4659      	mov	r1, fp
  403eb2:	f002 f9d1 	bl	406258 <__aeabi_dcmplt>
  403eb6:	b118      	cbz	r0, 403ec0 <_dtoa_r+0xad8>
  403eb8:	4646      	mov	r6, r8
  403eba:	e771      	b.n	403da0 <_dtoa_r+0x9b8>
  403ebc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ec0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403ec4:	f7ff bb8a 	b.w	4035dc <_dtoa_r+0x1f4>
  403ec8:	9804      	ldr	r0, [sp, #16]
  403eca:	f7ff babb 	b.w	403444 <_dtoa_r+0x5c>
  403ece:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ed0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403ed2:	970c      	str	r7, [sp, #48]	; 0x30
  403ed4:	1afb      	subs	r3, r7, r3
  403ed6:	441a      	add	r2, r3
  403ed8:	920d      	str	r2, [sp, #52]	; 0x34
  403eda:	2700      	movs	r7, #0
  403edc:	e469      	b.n	4037b2 <_dtoa_r+0x3ca>
  403ede:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403ee2:	f04f 0a02 	mov.w	sl, #2
  403ee6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403eea:	e657      	b.n	403b9c <_dtoa_r+0x7b4>
  403eec:	2100      	movs	r1, #0
  403eee:	2301      	movs	r3, #1
  403ef0:	6461      	str	r1, [r4, #68]	; 0x44
  403ef2:	4620      	mov	r0, r4
  403ef4:	9325      	str	r3, [sp, #148]	; 0x94
  403ef6:	f000 fd79 	bl	4049ec <_Balloc>
  403efa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403efc:	9004      	str	r0, [sp, #16]
  403efe:	6420      	str	r0, [r4, #64]	; 0x40
  403f00:	930a      	str	r3, [sp, #40]	; 0x28
  403f02:	930f      	str	r3, [sp, #60]	; 0x3c
  403f04:	e629      	b.n	403b5a <_dtoa_r+0x772>
  403f06:	2a00      	cmp	r2, #0
  403f08:	46d0      	mov	r8, sl
  403f0a:	f8cd b018 	str.w	fp, [sp, #24]
  403f0e:	469a      	mov	sl, r3
  403f10:	dd11      	ble.n	403f36 <_dtoa_r+0xb4e>
  403f12:	4649      	mov	r1, r9
  403f14:	2201      	movs	r2, #1
  403f16:	4620      	mov	r0, r4
  403f18:	f000 ff14 	bl	404d44 <__lshift>
  403f1c:	4641      	mov	r1, r8
  403f1e:	4681      	mov	r9, r0
  403f20:	f000 ff62 	bl	404de8 <__mcmp>
  403f24:	2800      	cmp	r0, #0
  403f26:	f340 8146 	ble.w	4041b6 <_dtoa_r+0xdce>
  403f2a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403f2e:	f000 8106 	beq.w	40413e <_dtoa_r+0xd56>
  403f32:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403f36:	46b3      	mov	fp, r6
  403f38:	f887 a000 	strb.w	sl, [r7]
  403f3c:	1c7d      	adds	r5, r7, #1
  403f3e:	9e06      	ldr	r6, [sp, #24]
  403f40:	e5d2      	b.n	403ae8 <_dtoa_r+0x700>
  403f42:	d104      	bne.n	403f4e <_dtoa_r+0xb66>
  403f44:	f01a 0f01 	tst.w	sl, #1
  403f48:	d001      	beq.n	403f4e <_dtoa_r+0xb66>
  403f4a:	e5bd      	b.n	403ac8 <_dtoa_r+0x6e0>
  403f4c:	4615      	mov	r5, r2
  403f4e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403f52:	2b30      	cmp	r3, #48	; 0x30
  403f54:	f105 32ff 	add.w	r2, r5, #4294967295
  403f58:	d0f8      	beq.n	403f4c <_dtoa_r+0xb64>
  403f5a:	e5c5      	b.n	403ae8 <_dtoa_r+0x700>
  403f5c:	9904      	ldr	r1, [sp, #16]
  403f5e:	2230      	movs	r2, #48	; 0x30
  403f60:	700a      	strb	r2, [r1, #0]
  403f62:	9a02      	ldr	r2, [sp, #8]
  403f64:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403f68:	3201      	adds	r2, #1
  403f6a:	9202      	str	r2, [sp, #8]
  403f6c:	f7ff bbfc 	b.w	403768 <_dtoa_r+0x380>
  403f70:	f000 80bb 	beq.w	4040ea <_dtoa_r+0xd02>
  403f74:	9b02      	ldr	r3, [sp, #8]
  403f76:	425d      	negs	r5, r3
  403f78:	4b84      	ldr	r3, [pc, #528]	; (40418c <_dtoa_r+0xda4>)
  403f7a:	f005 020f 	and.w	r2, r5, #15
  403f7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403f82:	e9d3 2300 	ldrd	r2, r3, [r3]
  403f86:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403f8a:	f001 fef3 	bl	405d74 <__aeabi_dmul>
  403f8e:	112d      	asrs	r5, r5, #4
  403f90:	4607      	mov	r7, r0
  403f92:	4688      	mov	r8, r1
  403f94:	f000 812c 	beq.w	4041f0 <_dtoa_r+0xe08>
  403f98:	4e7d      	ldr	r6, [pc, #500]	; (404190 <_dtoa_r+0xda8>)
  403f9a:	f04f 0a02 	mov.w	sl, #2
  403f9e:	07eb      	lsls	r3, r5, #31
  403fa0:	d509      	bpl.n	403fb6 <_dtoa_r+0xbce>
  403fa2:	4638      	mov	r0, r7
  403fa4:	4641      	mov	r1, r8
  403fa6:	e9d6 2300 	ldrd	r2, r3, [r6]
  403faa:	f001 fee3 	bl	405d74 <__aeabi_dmul>
  403fae:	f10a 0a01 	add.w	sl, sl, #1
  403fb2:	4607      	mov	r7, r0
  403fb4:	4688      	mov	r8, r1
  403fb6:	106d      	asrs	r5, r5, #1
  403fb8:	f106 0608 	add.w	r6, r6, #8
  403fbc:	d1ef      	bne.n	403f9e <_dtoa_r+0xbb6>
  403fbe:	e608      	b.n	403bd2 <_dtoa_r+0x7ea>
  403fc0:	6871      	ldr	r1, [r6, #4]
  403fc2:	4620      	mov	r0, r4
  403fc4:	f000 fd12 	bl	4049ec <_Balloc>
  403fc8:	6933      	ldr	r3, [r6, #16]
  403fca:	3302      	adds	r3, #2
  403fcc:	009a      	lsls	r2, r3, #2
  403fce:	4605      	mov	r5, r0
  403fd0:	f106 010c 	add.w	r1, r6, #12
  403fd4:	300c      	adds	r0, #12
  403fd6:	f000 fc63 	bl	4048a0 <memcpy>
  403fda:	4629      	mov	r1, r5
  403fdc:	2201      	movs	r2, #1
  403fde:	4620      	mov	r0, r4
  403fe0:	f000 feb0 	bl	404d44 <__lshift>
  403fe4:	9006      	str	r0, [sp, #24]
  403fe6:	e4b5      	b.n	403954 <_dtoa_r+0x56c>
  403fe8:	2b39      	cmp	r3, #57	; 0x39
  403fea:	f8cd b018 	str.w	fp, [sp, #24]
  403fee:	46d0      	mov	r8, sl
  403ff0:	f000 80a5 	beq.w	40413e <_dtoa_r+0xd56>
  403ff4:	f103 0a01 	add.w	sl, r3, #1
  403ff8:	46b3      	mov	fp, r6
  403ffa:	f887 a000 	strb.w	sl, [r7]
  403ffe:	1c7d      	adds	r5, r7, #1
  404000:	9e06      	ldr	r6, [sp, #24]
  404002:	e571      	b.n	403ae8 <_dtoa_r+0x700>
  404004:	465a      	mov	r2, fp
  404006:	46d0      	mov	r8, sl
  404008:	46b3      	mov	fp, r6
  40400a:	469a      	mov	sl, r3
  40400c:	4616      	mov	r6, r2
  40400e:	e54f      	b.n	403ab0 <_dtoa_r+0x6c8>
  404010:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404012:	495e      	ldr	r1, [pc, #376]	; (40418c <_dtoa_r+0xda4>)
  404014:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404018:	462a      	mov	r2, r5
  40401a:	4633      	mov	r3, r6
  40401c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404020:	f001 fea8 	bl	405d74 <__aeabi_dmul>
  404024:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404028:	4638      	mov	r0, r7
  40402a:	4641      	mov	r1, r8
  40402c:	f002 f952 	bl	4062d4 <__aeabi_d2iz>
  404030:	4605      	mov	r5, r0
  404032:	f001 fe39 	bl	405ca8 <__aeabi_i2d>
  404036:	460b      	mov	r3, r1
  404038:	4602      	mov	r2, r0
  40403a:	4641      	mov	r1, r8
  40403c:	4638      	mov	r0, r7
  40403e:	f001 fce5 	bl	405a0c <__aeabi_dsub>
  404042:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404044:	460f      	mov	r7, r1
  404046:	9904      	ldr	r1, [sp, #16]
  404048:	3530      	adds	r5, #48	; 0x30
  40404a:	2b01      	cmp	r3, #1
  40404c:	700d      	strb	r5, [r1, #0]
  40404e:	4606      	mov	r6, r0
  404050:	f101 0501 	add.w	r5, r1, #1
  404054:	d026      	beq.n	4040a4 <_dtoa_r+0xcbc>
  404056:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404058:	9a04      	ldr	r2, [sp, #16]
  40405a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404198 <_dtoa_r+0xdb0>
  40405e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404062:	4413      	add	r3, r2
  404064:	f04f 0a00 	mov.w	sl, #0
  404068:	4699      	mov	r9, r3
  40406a:	4652      	mov	r2, sl
  40406c:	465b      	mov	r3, fp
  40406e:	4630      	mov	r0, r6
  404070:	4639      	mov	r1, r7
  404072:	f001 fe7f 	bl	405d74 <__aeabi_dmul>
  404076:	460f      	mov	r7, r1
  404078:	4606      	mov	r6, r0
  40407a:	f002 f92b 	bl	4062d4 <__aeabi_d2iz>
  40407e:	4680      	mov	r8, r0
  404080:	f001 fe12 	bl	405ca8 <__aeabi_i2d>
  404084:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404088:	4602      	mov	r2, r0
  40408a:	460b      	mov	r3, r1
  40408c:	4630      	mov	r0, r6
  40408e:	4639      	mov	r1, r7
  404090:	f001 fcbc 	bl	405a0c <__aeabi_dsub>
  404094:	f805 8b01 	strb.w	r8, [r5], #1
  404098:	454d      	cmp	r5, r9
  40409a:	4606      	mov	r6, r0
  40409c:	460f      	mov	r7, r1
  40409e:	d1e4      	bne.n	40406a <_dtoa_r+0xc82>
  4040a0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4040a4:	4b3b      	ldr	r3, [pc, #236]	; (404194 <_dtoa_r+0xdac>)
  4040a6:	2200      	movs	r2, #0
  4040a8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4040ac:	f001 fcb0 	bl	405a10 <__adddf3>
  4040b0:	4632      	mov	r2, r6
  4040b2:	463b      	mov	r3, r7
  4040b4:	f002 f8d0 	bl	406258 <__aeabi_dcmplt>
  4040b8:	2800      	cmp	r0, #0
  4040ba:	d046      	beq.n	40414a <_dtoa_r+0xd62>
  4040bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4040be:	9302      	str	r3, [sp, #8]
  4040c0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4040c4:	f7ff bb43 	b.w	40374e <_dtoa_r+0x366>
  4040c8:	f04f 0800 	mov.w	r8, #0
  4040cc:	4646      	mov	r6, r8
  4040ce:	e6a9      	b.n	403e24 <_dtoa_r+0xa3c>
  4040d0:	9b08      	ldr	r3, [sp, #32]
  4040d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4040d4:	1a9d      	subs	r5, r3, r2
  4040d6:	2300      	movs	r3, #0
  4040d8:	f7ff bb71 	b.w	4037be <_dtoa_r+0x3d6>
  4040dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4040de:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4040e0:	9d08      	ldr	r5, [sp, #32]
  4040e2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4040e6:	f7ff bb6a 	b.w	4037be <_dtoa_r+0x3d6>
  4040ea:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4040ee:	f04f 0a02 	mov.w	sl, #2
  4040f2:	e56e      	b.n	403bd2 <_dtoa_r+0x7ea>
  4040f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4040f6:	2b00      	cmp	r3, #0
  4040f8:	f43f aeb8 	beq.w	403e6c <_dtoa_r+0xa84>
  4040fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040fe:	2b00      	cmp	r3, #0
  404100:	f77f aede 	ble.w	403ec0 <_dtoa_r+0xad8>
  404104:	2200      	movs	r2, #0
  404106:	4b24      	ldr	r3, [pc, #144]	; (404198 <_dtoa_r+0xdb0>)
  404108:	4638      	mov	r0, r7
  40410a:	4641      	mov	r1, r8
  40410c:	f001 fe32 	bl	405d74 <__aeabi_dmul>
  404110:	4607      	mov	r7, r0
  404112:	4688      	mov	r8, r1
  404114:	f10a 0001 	add.w	r0, sl, #1
  404118:	f001 fdc6 	bl	405ca8 <__aeabi_i2d>
  40411c:	463a      	mov	r2, r7
  40411e:	4643      	mov	r3, r8
  404120:	f001 fe28 	bl	405d74 <__aeabi_dmul>
  404124:	2200      	movs	r2, #0
  404126:	4b17      	ldr	r3, [pc, #92]	; (404184 <_dtoa_r+0xd9c>)
  404128:	f001 fc72 	bl	405a10 <__adddf3>
  40412c:	9a02      	ldr	r2, [sp, #8]
  40412e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404130:	9312      	str	r3, [sp, #72]	; 0x48
  404132:	3a01      	subs	r2, #1
  404134:	4605      	mov	r5, r0
  404136:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40413a:	9215      	str	r2, [sp, #84]	; 0x54
  40413c:	e56a      	b.n	403c14 <_dtoa_r+0x82c>
  40413e:	2239      	movs	r2, #57	; 0x39
  404140:	46b3      	mov	fp, r6
  404142:	703a      	strb	r2, [r7, #0]
  404144:	9e06      	ldr	r6, [sp, #24]
  404146:	1c7d      	adds	r5, r7, #1
  404148:	e4c0      	b.n	403acc <_dtoa_r+0x6e4>
  40414a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40414e:	2000      	movs	r0, #0
  404150:	4910      	ldr	r1, [pc, #64]	; (404194 <_dtoa_r+0xdac>)
  404152:	f001 fc5b 	bl	405a0c <__aeabi_dsub>
  404156:	4632      	mov	r2, r6
  404158:	463b      	mov	r3, r7
  40415a:	f002 f89b 	bl	406294 <__aeabi_dcmpgt>
  40415e:	b908      	cbnz	r0, 404164 <_dtoa_r+0xd7c>
  404160:	e6ae      	b.n	403ec0 <_dtoa_r+0xad8>
  404162:	4615      	mov	r5, r2
  404164:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404168:	2b30      	cmp	r3, #48	; 0x30
  40416a:	f105 32ff 	add.w	r2, r5, #4294967295
  40416e:	d0f8      	beq.n	404162 <_dtoa_r+0xd7a>
  404170:	e5d7      	b.n	403d22 <_dtoa_r+0x93a>
  404172:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404176:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404178:	9302      	str	r3, [sp, #8]
  40417a:	f7ff bae8 	b.w	40374e <_dtoa_r+0x366>
  40417e:	970c      	str	r7, [sp, #48]	; 0x30
  404180:	f7ff bba5 	b.w	4038ce <_dtoa_r+0x4e6>
  404184:	401c0000 	.word	0x401c0000
  404188:	40140000 	.word	0x40140000
  40418c:	00406e18 	.word	0x00406e18
  404190:	00406df0 	.word	0x00406df0
  404194:	3fe00000 	.word	0x3fe00000
  404198:	40240000 	.word	0x40240000
  40419c:	2b39      	cmp	r3, #57	; 0x39
  40419e:	f8cd b018 	str.w	fp, [sp, #24]
  4041a2:	46d0      	mov	r8, sl
  4041a4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4041a8:	469a      	mov	sl, r3
  4041aa:	d0c8      	beq.n	40413e <_dtoa_r+0xd56>
  4041ac:	f1bb 0f00 	cmp.w	fp, #0
  4041b0:	f73f aebf 	bgt.w	403f32 <_dtoa_r+0xb4a>
  4041b4:	e6bf      	b.n	403f36 <_dtoa_r+0xb4e>
  4041b6:	f47f aebe 	bne.w	403f36 <_dtoa_r+0xb4e>
  4041ba:	f01a 0f01 	tst.w	sl, #1
  4041be:	f43f aeba 	beq.w	403f36 <_dtoa_r+0xb4e>
  4041c2:	e6b2      	b.n	403f2a <_dtoa_r+0xb42>
  4041c4:	f04f 0800 	mov.w	r8, #0
  4041c8:	4646      	mov	r6, r8
  4041ca:	e5e9      	b.n	403da0 <_dtoa_r+0x9b8>
  4041cc:	4631      	mov	r1, r6
  4041ce:	2300      	movs	r3, #0
  4041d0:	220a      	movs	r2, #10
  4041d2:	4620      	mov	r0, r4
  4041d4:	f000 fc3a 	bl	404a4c <__multadd>
  4041d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4041da:	2b00      	cmp	r3, #0
  4041dc:	4606      	mov	r6, r0
  4041de:	dd0a      	ble.n	4041f6 <_dtoa_r+0xe0e>
  4041e0:	930a      	str	r3, [sp, #40]	; 0x28
  4041e2:	f7ff bbaa 	b.w	40393a <_dtoa_r+0x552>
  4041e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4041e8:	2b02      	cmp	r3, #2
  4041ea:	dc23      	bgt.n	404234 <_dtoa_r+0xe4c>
  4041ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4041ee:	e43b      	b.n	403a68 <_dtoa_r+0x680>
  4041f0:	f04f 0a02 	mov.w	sl, #2
  4041f4:	e4ed      	b.n	403bd2 <_dtoa_r+0x7ea>
  4041f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4041f8:	2b02      	cmp	r3, #2
  4041fa:	dc1b      	bgt.n	404234 <_dtoa_r+0xe4c>
  4041fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4041fe:	e7ef      	b.n	4041e0 <_dtoa_r+0xdf8>
  404200:	2500      	movs	r5, #0
  404202:	6465      	str	r5, [r4, #68]	; 0x44
  404204:	4629      	mov	r1, r5
  404206:	4620      	mov	r0, r4
  404208:	f000 fbf0 	bl	4049ec <_Balloc>
  40420c:	f04f 33ff 	mov.w	r3, #4294967295
  404210:	930a      	str	r3, [sp, #40]	; 0x28
  404212:	930f      	str	r3, [sp, #60]	; 0x3c
  404214:	2301      	movs	r3, #1
  404216:	9004      	str	r0, [sp, #16]
  404218:	9525      	str	r5, [sp, #148]	; 0x94
  40421a:	6420      	str	r0, [r4, #64]	; 0x40
  40421c:	930b      	str	r3, [sp, #44]	; 0x2c
  40421e:	f7ff b9dd 	b.w	4035dc <_dtoa_r+0x1f4>
  404222:	2501      	movs	r5, #1
  404224:	f7ff b9a5 	b.w	403572 <_dtoa_r+0x18a>
  404228:	f43f ab69 	beq.w	4038fe <_dtoa_r+0x516>
  40422c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404230:	f7ff bbf9 	b.w	403a26 <_dtoa_r+0x63e>
  404234:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404236:	930a      	str	r3, [sp, #40]	; 0x28
  404238:	e5e5      	b.n	403e06 <_dtoa_r+0xa1e>
  40423a:	bf00      	nop

0040423c <__libc_fini_array>:
  40423c:	b538      	push	{r3, r4, r5, lr}
  40423e:	4c0a      	ldr	r4, [pc, #40]	; (404268 <__libc_fini_array+0x2c>)
  404240:	4d0a      	ldr	r5, [pc, #40]	; (40426c <__libc_fini_array+0x30>)
  404242:	1b64      	subs	r4, r4, r5
  404244:	10a4      	asrs	r4, r4, #2
  404246:	d00a      	beq.n	40425e <__libc_fini_array+0x22>
  404248:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40424c:	3b01      	subs	r3, #1
  40424e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404252:	3c01      	subs	r4, #1
  404254:	f855 3904 	ldr.w	r3, [r5], #-4
  404258:	4798      	blx	r3
  40425a:	2c00      	cmp	r4, #0
  40425c:	d1f9      	bne.n	404252 <__libc_fini_array+0x16>
  40425e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404262:	f002 bed7 	b.w	407014 <_fini>
  404266:	bf00      	nop
  404268:	00407024 	.word	0x00407024
  40426c:	00407020 	.word	0x00407020

00404270 <_localeconv_r>:
  404270:	4a04      	ldr	r2, [pc, #16]	; (404284 <_localeconv_r+0x14>)
  404272:	4b05      	ldr	r3, [pc, #20]	; (404288 <_localeconv_r+0x18>)
  404274:	6812      	ldr	r2, [r2, #0]
  404276:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404278:	2800      	cmp	r0, #0
  40427a:	bf08      	it	eq
  40427c:	4618      	moveq	r0, r3
  40427e:	30f0      	adds	r0, #240	; 0xf0
  404280:	4770      	bx	lr
  404282:	bf00      	nop
  404284:	20400024 	.word	0x20400024
  404288:	20400864 	.word	0x20400864

0040428c <__retarget_lock_acquire_recursive>:
  40428c:	4770      	bx	lr
  40428e:	bf00      	nop

00404290 <__retarget_lock_release_recursive>:
  404290:	4770      	bx	lr
  404292:	bf00      	nop

00404294 <_malloc_r>:
  404294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404298:	f101 060b 	add.w	r6, r1, #11
  40429c:	2e16      	cmp	r6, #22
  40429e:	b083      	sub	sp, #12
  4042a0:	4605      	mov	r5, r0
  4042a2:	f240 809e 	bls.w	4043e2 <_malloc_r+0x14e>
  4042a6:	f036 0607 	bics.w	r6, r6, #7
  4042aa:	f100 80bd 	bmi.w	404428 <_malloc_r+0x194>
  4042ae:	42b1      	cmp	r1, r6
  4042b0:	f200 80ba 	bhi.w	404428 <_malloc_r+0x194>
  4042b4:	f000 fb8e 	bl	4049d4 <__malloc_lock>
  4042b8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4042bc:	f0c0 8293 	bcc.w	4047e6 <_malloc_r+0x552>
  4042c0:	0a73      	lsrs	r3, r6, #9
  4042c2:	f000 80b8 	beq.w	404436 <_malloc_r+0x1a2>
  4042c6:	2b04      	cmp	r3, #4
  4042c8:	f200 8179 	bhi.w	4045be <_malloc_r+0x32a>
  4042cc:	09b3      	lsrs	r3, r6, #6
  4042ce:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4042d2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4042d6:	00c3      	lsls	r3, r0, #3
  4042d8:	4fbf      	ldr	r7, [pc, #764]	; (4045d8 <_malloc_r+0x344>)
  4042da:	443b      	add	r3, r7
  4042dc:	f1a3 0108 	sub.w	r1, r3, #8
  4042e0:	685c      	ldr	r4, [r3, #4]
  4042e2:	42a1      	cmp	r1, r4
  4042e4:	d106      	bne.n	4042f4 <_malloc_r+0x60>
  4042e6:	e00c      	b.n	404302 <_malloc_r+0x6e>
  4042e8:	2a00      	cmp	r2, #0
  4042ea:	f280 80aa 	bge.w	404442 <_malloc_r+0x1ae>
  4042ee:	68e4      	ldr	r4, [r4, #12]
  4042f0:	42a1      	cmp	r1, r4
  4042f2:	d006      	beq.n	404302 <_malloc_r+0x6e>
  4042f4:	6863      	ldr	r3, [r4, #4]
  4042f6:	f023 0303 	bic.w	r3, r3, #3
  4042fa:	1b9a      	subs	r2, r3, r6
  4042fc:	2a0f      	cmp	r2, #15
  4042fe:	ddf3      	ble.n	4042e8 <_malloc_r+0x54>
  404300:	4670      	mov	r0, lr
  404302:	693c      	ldr	r4, [r7, #16]
  404304:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4045ec <_malloc_r+0x358>
  404308:	4574      	cmp	r4, lr
  40430a:	f000 81ab 	beq.w	404664 <_malloc_r+0x3d0>
  40430e:	6863      	ldr	r3, [r4, #4]
  404310:	f023 0303 	bic.w	r3, r3, #3
  404314:	1b9a      	subs	r2, r3, r6
  404316:	2a0f      	cmp	r2, #15
  404318:	f300 8190 	bgt.w	40463c <_malloc_r+0x3a8>
  40431c:	2a00      	cmp	r2, #0
  40431e:	f8c7 e014 	str.w	lr, [r7, #20]
  404322:	f8c7 e010 	str.w	lr, [r7, #16]
  404326:	f280 809d 	bge.w	404464 <_malloc_r+0x1d0>
  40432a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40432e:	f080 8161 	bcs.w	4045f4 <_malloc_r+0x360>
  404332:	08db      	lsrs	r3, r3, #3
  404334:	f103 0c01 	add.w	ip, r3, #1
  404338:	1099      	asrs	r1, r3, #2
  40433a:	687a      	ldr	r2, [r7, #4]
  40433c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404340:	f8c4 8008 	str.w	r8, [r4, #8]
  404344:	2301      	movs	r3, #1
  404346:	408b      	lsls	r3, r1
  404348:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40434c:	4313      	orrs	r3, r2
  40434e:	3908      	subs	r1, #8
  404350:	60e1      	str	r1, [r4, #12]
  404352:	607b      	str	r3, [r7, #4]
  404354:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404358:	f8c8 400c 	str.w	r4, [r8, #12]
  40435c:	1082      	asrs	r2, r0, #2
  40435e:	2401      	movs	r4, #1
  404360:	4094      	lsls	r4, r2
  404362:	429c      	cmp	r4, r3
  404364:	f200 808b 	bhi.w	40447e <_malloc_r+0x1ea>
  404368:	421c      	tst	r4, r3
  40436a:	d106      	bne.n	40437a <_malloc_r+0xe6>
  40436c:	f020 0003 	bic.w	r0, r0, #3
  404370:	0064      	lsls	r4, r4, #1
  404372:	421c      	tst	r4, r3
  404374:	f100 0004 	add.w	r0, r0, #4
  404378:	d0fa      	beq.n	404370 <_malloc_r+0xdc>
  40437a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40437e:	46cc      	mov	ip, r9
  404380:	4680      	mov	r8, r0
  404382:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404386:	459c      	cmp	ip, r3
  404388:	d107      	bne.n	40439a <_malloc_r+0x106>
  40438a:	e16d      	b.n	404668 <_malloc_r+0x3d4>
  40438c:	2a00      	cmp	r2, #0
  40438e:	f280 817b 	bge.w	404688 <_malloc_r+0x3f4>
  404392:	68db      	ldr	r3, [r3, #12]
  404394:	459c      	cmp	ip, r3
  404396:	f000 8167 	beq.w	404668 <_malloc_r+0x3d4>
  40439a:	6859      	ldr	r1, [r3, #4]
  40439c:	f021 0103 	bic.w	r1, r1, #3
  4043a0:	1b8a      	subs	r2, r1, r6
  4043a2:	2a0f      	cmp	r2, #15
  4043a4:	ddf2      	ble.n	40438c <_malloc_r+0xf8>
  4043a6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4043aa:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4043ae:	9300      	str	r3, [sp, #0]
  4043b0:	199c      	adds	r4, r3, r6
  4043b2:	4628      	mov	r0, r5
  4043b4:	f046 0601 	orr.w	r6, r6, #1
  4043b8:	f042 0501 	orr.w	r5, r2, #1
  4043bc:	605e      	str	r6, [r3, #4]
  4043be:	f8c8 c00c 	str.w	ip, [r8, #12]
  4043c2:	f8cc 8008 	str.w	r8, [ip, #8]
  4043c6:	617c      	str	r4, [r7, #20]
  4043c8:	613c      	str	r4, [r7, #16]
  4043ca:	f8c4 e00c 	str.w	lr, [r4, #12]
  4043ce:	f8c4 e008 	str.w	lr, [r4, #8]
  4043d2:	6065      	str	r5, [r4, #4]
  4043d4:	505a      	str	r2, [r3, r1]
  4043d6:	f000 fb03 	bl	4049e0 <__malloc_unlock>
  4043da:	9b00      	ldr	r3, [sp, #0]
  4043dc:	f103 0408 	add.w	r4, r3, #8
  4043e0:	e01e      	b.n	404420 <_malloc_r+0x18c>
  4043e2:	2910      	cmp	r1, #16
  4043e4:	d820      	bhi.n	404428 <_malloc_r+0x194>
  4043e6:	f000 faf5 	bl	4049d4 <__malloc_lock>
  4043ea:	2610      	movs	r6, #16
  4043ec:	2318      	movs	r3, #24
  4043ee:	2002      	movs	r0, #2
  4043f0:	4f79      	ldr	r7, [pc, #484]	; (4045d8 <_malloc_r+0x344>)
  4043f2:	443b      	add	r3, r7
  4043f4:	f1a3 0208 	sub.w	r2, r3, #8
  4043f8:	685c      	ldr	r4, [r3, #4]
  4043fa:	4294      	cmp	r4, r2
  4043fc:	f000 813d 	beq.w	40467a <_malloc_r+0x3e6>
  404400:	6863      	ldr	r3, [r4, #4]
  404402:	68e1      	ldr	r1, [r4, #12]
  404404:	68a6      	ldr	r6, [r4, #8]
  404406:	f023 0303 	bic.w	r3, r3, #3
  40440a:	4423      	add	r3, r4
  40440c:	4628      	mov	r0, r5
  40440e:	685a      	ldr	r2, [r3, #4]
  404410:	60f1      	str	r1, [r6, #12]
  404412:	f042 0201 	orr.w	r2, r2, #1
  404416:	608e      	str	r6, [r1, #8]
  404418:	605a      	str	r2, [r3, #4]
  40441a:	f000 fae1 	bl	4049e0 <__malloc_unlock>
  40441e:	3408      	adds	r4, #8
  404420:	4620      	mov	r0, r4
  404422:	b003      	add	sp, #12
  404424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404428:	2400      	movs	r4, #0
  40442a:	230c      	movs	r3, #12
  40442c:	4620      	mov	r0, r4
  40442e:	602b      	str	r3, [r5, #0]
  404430:	b003      	add	sp, #12
  404432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404436:	2040      	movs	r0, #64	; 0x40
  404438:	f44f 7300 	mov.w	r3, #512	; 0x200
  40443c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404440:	e74a      	b.n	4042d8 <_malloc_r+0x44>
  404442:	4423      	add	r3, r4
  404444:	68e1      	ldr	r1, [r4, #12]
  404446:	685a      	ldr	r2, [r3, #4]
  404448:	68a6      	ldr	r6, [r4, #8]
  40444a:	f042 0201 	orr.w	r2, r2, #1
  40444e:	60f1      	str	r1, [r6, #12]
  404450:	4628      	mov	r0, r5
  404452:	608e      	str	r6, [r1, #8]
  404454:	605a      	str	r2, [r3, #4]
  404456:	f000 fac3 	bl	4049e0 <__malloc_unlock>
  40445a:	3408      	adds	r4, #8
  40445c:	4620      	mov	r0, r4
  40445e:	b003      	add	sp, #12
  404460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404464:	4423      	add	r3, r4
  404466:	4628      	mov	r0, r5
  404468:	685a      	ldr	r2, [r3, #4]
  40446a:	f042 0201 	orr.w	r2, r2, #1
  40446e:	605a      	str	r2, [r3, #4]
  404470:	f000 fab6 	bl	4049e0 <__malloc_unlock>
  404474:	3408      	adds	r4, #8
  404476:	4620      	mov	r0, r4
  404478:	b003      	add	sp, #12
  40447a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40447e:	68bc      	ldr	r4, [r7, #8]
  404480:	6863      	ldr	r3, [r4, #4]
  404482:	f023 0803 	bic.w	r8, r3, #3
  404486:	45b0      	cmp	r8, r6
  404488:	d304      	bcc.n	404494 <_malloc_r+0x200>
  40448a:	eba8 0306 	sub.w	r3, r8, r6
  40448e:	2b0f      	cmp	r3, #15
  404490:	f300 8085 	bgt.w	40459e <_malloc_r+0x30a>
  404494:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4045f0 <_malloc_r+0x35c>
  404498:	4b50      	ldr	r3, [pc, #320]	; (4045dc <_malloc_r+0x348>)
  40449a:	f8d9 2000 	ldr.w	r2, [r9]
  40449e:	681b      	ldr	r3, [r3, #0]
  4044a0:	3201      	adds	r2, #1
  4044a2:	4433      	add	r3, r6
  4044a4:	eb04 0a08 	add.w	sl, r4, r8
  4044a8:	f000 8155 	beq.w	404756 <_malloc_r+0x4c2>
  4044ac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4044b0:	330f      	adds	r3, #15
  4044b2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4044b6:	f02b 0b0f 	bic.w	fp, fp, #15
  4044ba:	4659      	mov	r1, fp
  4044bc:	4628      	mov	r0, r5
  4044be:	f000 fd8f 	bl	404fe0 <_sbrk_r>
  4044c2:	1c41      	adds	r1, r0, #1
  4044c4:	4602      	mov	r2, r0
  4044c6:	f000 80fc 	beq.w	4046c2 <_malloc_r+0x42e>
  4044ca:	4582      	cmp	sl, r0
  4044cc:	f200 80f7 	bhi.w	4046be <_malloc_r+0x42a>
  4044d0:	4b43      	ldr	r3, [pc, #268]	; (4045e0 <_malloc_r+0x34c>)
  4044d2:	6819      	ldr	r1, [r3, #0]
  4044d4:	4459      	add	r1, fp
  4044d6:	6019      	str	r1, [r3, #0]
  4044d8:	f000 814d 	beq.w	404776 <_malloc_r+0x4e2>
  4044dc:	f8d9 0000 	ldr.w	r0, [r9]
  4044e0:	3001      	adds	r0, #1
  4044e2:	bf1b      	ittet	ne
  4044e4:	eba2 0a0a 	subne.w	sl, r2, sl
  4044e8:	4451      	addne	r1, sl
  4044ea:	f8c9 2000 	streq.w	r2, [r9]
  4044ee:	6019      	strne	r1, [r3, #0]
  4044f0:	f012 0107 	ands.w	r1, r2, #7
  4044f4:	f000 8115 	beq.w	404722 <_malloc_r+0x48e>
  4044f8:	f1c1 0008 	rsb	r0, r1, #8
  4044fc:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404500:	4402      	add	r2, r0
  404502:	3108      	adds	r1, #8
  404504:	eb02 090b 	add.w	r9, r2, fp
  404508:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40450c:	eba1 0909 	sub.w	r9, r1, r9
  404510:	4649      	mov	r1, r9
  404512:	4628      	mov	r0, r5
  404514:	9301      	str	r3, [sp, #4]
  404516:	9200      	str	r2, [sp, #0]
  404518:	f000 fd62 	bl	404fe0 <_sbrk_r>
  40451c:	1c43      	adds	r3, r0, #1
  40451e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404522:	f000 8143 	beq.w	4047ac <_malloc_r+0x518>
  404526:	1a80      	subs	r0, r0, r2
  404528:	4448      	add	r0, r9
  40452a:	f040 0001 	orr.w	r0, r0, #1
  40452e:	6819      	ldr	r1, [r3, #0]
  404530:	60ba      	str	r2, [r7, #8]
  404532:	4449      	add	r1, r9
  404534:	42bc      	cmp	r4, r7
  404536:	6050      	str	r0, [r2, #4]
  404538:	6019      	str	r1, [r3, #0]
  40453a:	d017      	beq.n	40456c <_malloc_r+0x2d8>
  40453c:	f1b8 0f0f 	cmp.w	r8, #15
  404540:	f240 80fb 	bls.w	40473a <_malloc_r+0x4a6>
  404544:	6860      	ldr	r0, [r4, #4]
  404546:	f1a8 020c 	sub.w	r2, r8, #12
  40454a:	f022 0207 	bic.w	r2, r2, #7
  40454e:	eb04 0e02 	add.w	lr, r4, r2
  404552:	f000 0001 	and.w	r0, r0, #1
  404556:	f04f 0c05 	mov.w	ip, #5
  40455a:	4310      	orrs	r0, r2
  40455c:	2a0f      	cmp	r2, #15
  40455e:	6060      	str	r0, [r4, #4]
  404560:	f8ce c004 	str.w	ip, [lr, #4]
  404564:	f8ce c008 	str.w	ip, [lr, #8]
  404568:	f200 8117 	bhi.w	40479a <_malloc_r+0x506>
  40456c:	4b1d      	ldr	r3, [pc, #116]	; (4045e4 <_malloc_r+0x350>)
  40456e:	68bc      	ldr	r4, [r7, #8]
  404570:	681a      	ldr	r2, [r3, #0]
  404572:	4291      	cmp	r1, r2
  404574:	bf88      	it	hi
  404576:	6019      	strhi	r1, [r3, #0]
  404578:	4b1b      	ldr	r3, [pc, #108]	; (4045e8 <_malloc_r+0x354>)
  40457a:	681a      	ldr	r2, [r3, #0]
  40457c:	4291      	cmp	r1, r2
  40457e:	6862      	ldr	r2, [r4, #4]
  404580:	bf88      	it	hi
  404582:	6019      	strhi	r1, [r3, #0]
  404584:	f022 0203 	bic.w	r2, r2, #3
  404588:	4296      	cmp	r6, r2
  40458a:	eba2 0306 	sub.w	r3, r2, r6
  40458e:	d801      	bhi.n	404594 <_malloc_r+0x300>
  404590:	2b0f      	cmp	r3, #15
  404592:	dc04      	bgt.n	40459e <_malloc_r+0x30a>
  404594:	4628      	mov	r0, r5
  404596:	f000 fa23 	bl	4049e0 <__malloc_unlock>
  40459a:	2400      	movs	r4, #0
  40459c:	e740      	b.n	404420 <_malloc_r+0x18c>
  40459e:	19a2      	adds	r2, r4, r6
  4045a0:	f043 0301 	orr.w	r3, r3, #1
  4045a4:	f046 0601 	orr.w	r6, r6, #1
  4045a8:	6066      	str	r6, [r4, #4]
  4045aa:	4628      	mov	r0, r5
  4045ac:	60ba      	str	r2, [r7, #8]
  4045ae:	6053      	str	r3, [r2, #4]
  4045b0:	f000 fa16 	bl	4049e0 <__malloc_unlock>
  4045b4:	3408      	adds	r4, #8
  4045b6:	4620      	mov	r0, r4
  4045b8:	b003      	add	sp, #12
  4045ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045be:	2b14      	cmp	r3, #20
  4045c0:	d971      	bls.n	4046a6 <_malloc_r+0x412>
  4045c2:	2b54      	cmp	r3, #84	; 0x54
  4045c4:	f200 80a3 	bhi.w	40470e <_malloc_r+0x47a>
  4045c8:	0b33      	lsrs	r3, r6, #12
  4045ca:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4045ce:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4045d2:	00c3      	lsls	r3, r0, #3
  4045d4:	e680      	b.n	4042d8 <_malloc_r+0x44>
  4045d6:	bf00      	nop
  4045d8:	20400454 	.word	0x20400454
  4045dc:	20400cac 	.word	0x20400cac
  4045e0:	20400c7c 	.word	0x20400c7c
  4045e4:	20400ca4 	.word	0x20400ca4
  4045e8:	20400ca8 	.word	0x20400ca8
  4045ec:	2040045c 	.word	0x2040045c
  4045f0:	2040085c 	.word	0x2040085c
  4045f4:	0a5a      	lsrs	r2, r3, #9
  4045f6:	2a04      	cmp	r2, #4
  4045f8:	d95b      	bls.n	4046b2 <_malloc_r+0x41e>
  4045fa:	2a14      	cmp	r2, #20
  4045fc:	f200 80ae 	bhi.w	40475c <_malloc_r+0x4c8>
  404600:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404604:	00c9      	lsls	r1, r1, #3
  404606:	325b      	adds	r2, #91	; 0x5b
  404608:	eb07 0c01 	add.w	ip, r7, r1
  40460c:	5879      	ldr	r1, [r7, r1]
  40460e:	f1ac 0c08 	sub.w	ip, ip, #8
  404612:	458c      	cmp	ip, r1
  404614:	f000 8088 	beq.w	404728 <_malloc_r+0x494>
  404618:	684a      	ldr	r2, [r1, #4]
  40461a:	f022 0203 	bic.w	r2, r2, #3
  40461e:	4293      	cmp	r3, r2
  404620:	d273      	bcs.n	40470a <_malloc_r+0x476>
  404622:	6889      	ldr	r1, [r1, #8]
  404624:	458c      	cmp	ip, r1
  404626:	d1f7      	bne.n	404618 <_malloc_r+0x384>
  404628:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40462c:	687b      	ldr	r3, [r7, #4]
  40462e:	60e2      	str	r2, [r4, #12]
  404630:	f8c4 c008 	str.w	ip, [r4, #8]
  404634:	6094      	str	r4, [r2, #8]
  404636:	f8cc 400c 	str.w	r4, [ip, #12]
  40463a:	e68f      	b.n	40435c <_malloc_r+0xc8>
  40463c:	19a1      	adds	r1, r4, r6
  40463e:	f046 0c01 	orr.w	ip, r6, #1
  404642:	f042 0601 	orr.w	r6, r2, #1
  404646:	f8c4 c004 	str.w	ip, [r4, #4]
  40464a:	4628      	mov	r0, r5
  40464c:	6179      	str	r1, [r7, #20]
  40464e:	6139      	str	r1, [r7, #16]
  404650:	f8c1 e00c 	str.w	lr, [r1, #12]
  404654:	f8c1 e008 	str.w	lr, [r1, #8]
  404658:	604e      	str	r6, [r1, #4]
  40465a:	50e2      	str	r2, [r4, r3]
  40465c:	f000 f9c0 	bl	4049e0 <__malloc_unlock>
  404660:	3408      	adds	r4, #8
  404662:	e6dd      	b.n	404420 <_malloc_r+0x18c>
  404664:	687b      	ldr	r3, [r7, #4]
  404666:	e679      	b.n	40435c <_malloc_r+0xc8>
  404668:	f108 0801 	add.w	r8, r8, #1
  40466c:	f018 0f03 	tst.w	r8, #3
  404670:	f10c 0c08 	add.w	ip, ip, #8
  404674:	f47f ae85 	bne.w	404382 <_malloc_r+0xee>
  404678:	e02d      	b.n	4046d6 <_malloc_r+0x442>
  40467a:	68dc      	ldr	r4, [r3, #12]
  40467c:	42a3      	cmp	r3, r4
  40467e:	bf08      	it	eq
  404680:	3002      	addeq	r0, #2
  404682:	f43f ae3e 	beq.w	404302 <_malloc_r+0x6e>
  404686:	e6bb      	b.n	404400 <_malloc_r+0x16c>
  404688:	4419      	add	r1, r3
  40468a:	461c      	mov	r4, r3
  40468c:	684a      	ldr	r2, [r1, #4]
  40468e:	68db      	ldr	r3, [r3, #12]
  404690:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404694:	f042 0201 	orr.w	r2, r2, #1
  404698:	604a      	str	r2, [r1, #4]
  40469a:	4628      	mov	r0, r5
  40469c:	60f3      	str	r3, [r6, #12]
  40469e:	609e      	str	r6, [r3, #8]
  4046a0:	f000 f99e 	bl	4049e0 <__malloc_unlock>
  4046a4:	e6bc      	b.n	404420 <_malloc_r+0x18c>
  4046a6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4046aa:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4046ae:	00c3      	lsls	r3, r0, #3
  4046b0:	e612      	b.n	4042d8 <_malloc_r+0x44>
  4046b2:	099a      	lsrs	r2, r3, #6
  4046b4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4046b8:	00c9      	lsls	r1, r1, #3
  4046ba:	3238      	adds	r2, #56	; 0x38
  4046bc:	e7a4      	b.n	404608 <_malloc_r+0x374>
  4046be:	42bc      	cmp	r4, r7
  4046c0:	d054      	beq.n	40476c <_malloc_r+0x4d8>
  4046c2:	68bc      	ldr	r4, [r7, #8]
  4046c4:	6862      	ldr	r2, [r4, #4]
  4046c6:	f022 0203 	bic.w	r2, r2, #3
  4046ca:	e75d      	b.n	404588 <_malloc_r+0x2f4>
  4046cc:	f859 3908 	ldr.w	r3, [r9], #-8
  4046d0:	4599      	cmp	r9, r3
  4046d2:	f040 8086 	bne.w	4047e2 <_malloc_r+0x54e>
  4046d6:	f010 0f03 	tst.w	r0, #3
  4046da:	f100 30ff 	add.w	r0, r0, #4294967295
  4046de:	d1f5      	bne.n	4046cc <_malloc_r+0x438>
  4046e0:	687b      	ldr	r3, [r7, #4]
  4046e2:	ea23 0304 	bic.w	r3, r3, r4
  4046e6:	607b      	str	r3, [r7, #4]
  4046e8:	0064      	lsls	r4, r4, #1
  4046ea:	429c      	cmp	r4, r3
  4046ec:	f63f aec7 	bhi.w	40447e <_malloc_r+0x1ea>
  4046f0:	2c00      	cmp	r4, #0
  4046f2:	f43f aec4 	beq.w	40447e <_malloc_r+0x1ea>
  4046f6:	421c      	tst	r4, r3
  4046f8:	4640      	mov	r0, r8
  4046fa:	f47f ae3e 	bne.w	40437a <_malloc_r+0xe6>
  4046fe:	0064      	lsls	r4, r4, #1
  404700:	421c      	tst	r4, r3
  404702:	f100 0004 	add.w	r0, r0, #4
  404706:	d0fa      	beq.n	4046fe <_malloc_r+0x46a>
  404708:	e637      	b.n	40437a <_malloc_r+0xe6>
  40470a:	468c      	mov	ip, r1
  40470c:	e78c      	b.n	404628 <_malloc_r+0x394>
  40470e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404712:	d815      	bhi.n	404740 <_malloc_r+0x4ac>
  404714:	0bf3      	lsrs	r3, r6, #15
  404716:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40471a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40471e:	00c3      	lsls	r3, r0, #3
  404720:	e5da      	b.n	4042d8 <_malloc_r+0x44>
  404722:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404726:	e6ed      	b.n	404504 <_malloc_r+0x270>
  404728:	687b      	ldr	r3, [r7, #4]
  40472a:	1092      	asrs	r2, r2, #2
  40472c:	2101      	movs	r1, #1
  40472e:	fa01 f202 	lsl.w	r2, r1, r2
  404732:	4313      	orrs	r3, r2
  404734:	607b      	str	r3, [r7, #4]
  404736:	4662      	mov	r2, ip
  404738:	e779      	b.n	40462e <_malloc_r+0x39a>
  40473a:	2301      	movs	r3, #1
  40473c:	6053      	str	r3, [r2, #4]
  40473e:	e729      	b.n	404594 <_malloc_r+0x300>
  404740:	f240 5254 	movw	r2, #1364	; 0x554
  404744:	4293      	cmp	r3, r2
  404746:	d822      	bhi.n	40478e <_malloc_r+0x4fa>
  404748:	0cb3      	lsrs	r3, r6, #18
  40474a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40474e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404752:	00c3      	lsls	r3, r0, #3
  404754:	e5c0      	b.n	4042d8 <_malloc_r+0x44>
  404756:	f103 0b10 	add.w	fp, r3, #16
  40475a:	e6ae      	b.n	4044ba <_malloc_r+0x226>
  40475c:	2a54      	cmp	r2, #84	; 0x54
  40475e:	d829      	bhi.n	4047b4 <_malloc_r+0x520>
  404760:	0b1a      	lsrs	r2, r3, #12
  404762:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404766:	00c9      	lsls	r1, r1, #3
  404768:	326e      	adds	r2, #110	; 0x6e
  40476a:	e74d      	b.n	404608 <_malloc_r+0x374>
  40476c:	4b20      	ldr	r3, [pc, #128]	; (4047f0 <_malloc_r+0x55c>)
  40476e:	6819      	ldr	r1, [r3, #0]
  404770:	4459      	add	r1, fp
  404772:	6019      	str	r1, [r3, #0]
  404774:	e6b2      	b.n	4044dc <_malloc_r+0x248>
  404776:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40477a:	2800      	cmp	r0, #0
  40477c:	f47f aeae 	bne.w	4044dc <_malloc_r+0x248>
  404780:	eb08 030b 	add.w	r3, r8, fp
  404784:	68ba      	ldr	r2, [r7, #8]
  404786:	f043 0301 	orr.w	r3, r3, #1
  40478a:	6053      	str	r3, [r2, #4]
  40478c:	e6ee      	b.n	40456c <_malloc_r+0x2d8>
  40478e:	207f      	movs	r0, #127	; 0x7f
  404790:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404794:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404798:	e59e      	b.n	4042d8 <_malloc_r+0x44>
  40479a:	f104 0108 	add.w	r1, r4, #8
  40479e:	4628      	mov	r0, r5
  4047a0:	9300      	str	r3, [sp, #0]
  4047a2:	f000 fe1b 	bl	4053dc <_free_r>
  4047a6:	9b00      	ldr	r3, [sp, #0]
  4047a8:	6819      	ldr	r1, [r3, #0]
  4047aa:	e6df      	b.n	40456c <_malloc_r+0x2d8>
  4047ac:	2001      	movs	r0, #1
  4047ae:	f04f 0900 	mov.w	r9, #0
  4047b2:	e6bc      	b.n	40452e <_malloc_r+0x29a>
  4047b4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4047b8:	d805      	bhi.n	4047c6 <_malloc_r+0x532>
  4047ba:	0bda      	lsrs	r2, r3, #15
  4047bc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4047c0:	00c9      	lsls	r1, r1, #3
  4047c2:	3277      	adds	r2, #119	; 0x77
  4047c4:	e720      	b.n	404608 <_malloc_r+0x374>
  4047c6:	f240 5154 	movw	r1, #1364	; 0x554
  4047ca:	428a      	cmp	r2, r1
  4047cc:	d805      	bhi.n	4047da <_malloc_r+0x546>
  4047ce:	0c9a      	lsrs	r2, r3, #18
  4047d0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4047d4:	00c9      	lsls	r1, r1, #3
  4047d6:	327c      	adds	r2, #124	; 0x7c
  4047d8:	e716      	b.n	404608 <_malloc_r+0x374>
  4047da:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4047de:	227e      	movs	r2, #126	; 0x7e
  4047e0:	e712      	b.n	404608 <_malloc_r+0x374>
  4047e2:	687b      	ldr	r3, [r7, #4]
  4047e4:	e780      	b.n	4046e8 <_malloc_r+0x454>
  4047e6:	08f0      	lsrs	r0, r6, #3
  4047e8:	f106 0308 	add.w	r3, r6, #8
  4047ec:	e600      	b.n	4043f0 <_malloc_r+0x15c>
  4047ee:	bf00      	nop
  4047f0:	20400c7c 	.word	0x20400c7c
	...

00404800 <memchr>:
  404800:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404804:	2a10      	cmp	r2, #16
  404806:	db2b      	blt.n	404860 <memchr+0x60>
  404808:	f010 0f07 	tst.w	r0, #7
  40480c:	d008      	beq.n	404820 <memchr+0x20>
  40480e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404812:	3a01      	subs	r2, #1
  404814:	428b      	cmp	r3, r1
  404816:	d02d      	beq.n	404874 <memchr+0x74>
  404818:	f010 0f07 	tst.w	r0, #7
  40481c:	b342      	cbz	r2, 404870 <memchr+0x70>
  40481e:	d1f6      	bne.n	40480e <memchr+0xe>
  404820:	b4f0      	push	{r4, r5, r6, r7}
  404822:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404826:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40482a:	f022 0407 	bic.w	r4, r2, #7
  40482e:	f07f 0700 	mvns.w	r7, #0
  404832:	2300      	movs	r3, #0
  404834:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404838:	3c08      	subs	r4, #8
  40483a:	ea85 0501 	eor.w	r5, r5, r1
  40483e:	ea86 0601 	eor.w	r6, r6, r1
  404842:	fa85 f547 	uadd8	r5, r5, r7
  404846:	faa3 f587 	sel	r5, r3, r7
  40484a:	fa86 f647 	uadd8	r6, r6, r7
  40484e:	faa5 f687 	sel	r6, r5, r7
  404852:	b98e      	cbnz	r6, 404878 <memchr+0x78>
  404854:	d1ee      	bne.n	404834 <memchr+0x34>
  404856:	bcf0      	pop	{r4, r5, r6, r7}
  404858:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40485c:	f002 0207 	and.w	r2, r2, #7
  404860:	b132      	cbz	r2, 404870 <memchr+0x70>
  404862:	f810 3b01 	ldrb.w	r3, [r0], #1
  404866:	3a01      	subs	r2, #1
  404868:	ea83 0301 	eor.w	r3, r3, r1
  40486c:	b113      	cbz	r3, 404874 <memchr+0x74>
  40486e:	d1f8      	bne.n	404862 <memchr+0x62>
  404870:	2000      	movs	r0, #0
  404872:	4770      	bx	lr
  404874:	3801      	subs	r0, #1
  404876:	4770      	bx	lr
  404878:	2d00      	cmp	r5, #0
  40487a:	bf06      	itte	eq
  40487c:	4635      	moveq	r5, r6
  40487e:	3803      	subeq	r0, #3
  404880:	3807      	subne	r0, #7
  404882:	f015 0f01 	tst.w	r5, #1
  404886:	d107      	bne.n	404898 <memchr+0x98>
  404888:	3001      	adds	r0, #1
  40488a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40488e:	bf02      	ittt	eq
  404890:	3001      	addeq	r0, #1
  404892:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404896:	3001      	addeq	r0, #1
  404898:	bcf0      	pop	{r4, r5, r6, r7}
  40489a:	3801      	subs	r0, #1
  40489c:	4770      	bx	lr
  40489e:	bf00      	nop

004048a0 <memcpy>:
  4048a0:	4684      	mov	ip, r0
  4048a2:	ea41 0300 	orr.w	r3, r1, r0
  4048a6:	f013 0303 	ands.w	r3, r3, #3
  4048aa:	d16d      	bne.n	404988 <memcpy+0xe8>
  4048ac:	3a40      	subs	r2, #64	; 0x40
  4048ae:	d341      	bcc.n	404934 <memcpy+0x94>
  4048b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b4:	f840 3b04 	str.w	r3, [r0], #4
  4048b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048bc:	f840 3b04 	str.w	r3, [r0], #4
  4048c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048c4:	f840 3b04 	str.w	r3, [r0], #4
  4048c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048cc:	f840 3b04 	str.w	r3, [r0], #4
  4048d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048d4:	f840 3b04 	str.w	r3, [r0], #4
  4048d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048dc:	f840 3b04 	str.w	r3, [r0], #4
  4048e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048e4:	f840 3b04 	str.w	r3, [r0], #4
  4048e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048ec:	f840 3b04 	str.w	r3, [r0], #4
  4048f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048f4:	f840 3b04 	str.w	r3, [r0], #4
  4048f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048fc:	f840 3b04 	str.w	r3, [r0], #4
  404900:	f851 3b04 	ldr.w	r3, [r1], #4
  404904:	f840 3b04 	str.w	r3, [r0], #4
  404908:	f851 3b04 	ldr.w	r3, [r1], #4
  40490c:	f840 3b04 	str.w	r3, [r0], #4
  404910:	f851 3b04 	ldr.w	r3, [r1], #4
  404914:	f840 3b04 	str.w	r3, [r0], #4
  404918:	f851 3b04 	ldr.w	r3, [r1], #4
  40491c:	f840 3b04 	str.w	r3, [r0], #4
  404920:	f851 3b04 	ldr.w	r3, [r1], #4
  404924:	f840 3b04 	str.w	r3, [r0], #4
  404928:	f851 3b04 	ldr.w	r3, [r1], #4
  40492c:	f840 3b04 	str.w	r3, [r0], #4
  404930:	3a40      	subs	r2, #64	; 0x40
  404932:	d2bd      	bcs.n	4048b0 <memcpy+0x10>
  404934:	3230      	adds	r2, #48	; 0x30
  404936:	d311      	bcc.n	40495c <memcpy+0xbc>
  404938:	f851 3b04 	ldr.w	r3, [r1], #4
  40493c:	f840 3b04 	str.w	r3, [r0], #4
  404940:	f851 3b04 	ldr.w	r3, [r1], #4
  404944:	f840 3b04 	str.w	r3, [r0], #4
  404948:	f851 3b04 	ldr.w	r3, [r1], #4
  40494c:	f840 3b04 	str.w	r3, [r0], #4
  404950:	f851 3b04 	ldr.w	r3, [r1], #4
  404954:	f840 3b04 	str.w	r3, [r0], #4
  404958:	3a10      	subs	r2, #16
  40495a:	d2ed      	bcs.n	404938 <memcpy+0x98>
  40495c:	320c      	adds	r2, #12
  40495e:	d305      	bcc.n	40496c <memcpy+0xcc>
  404960:	f851 3b04 	ldr.w	r3, [r1], #4
  404964:	f840 3b04 	str.w	r3, [r0], #4
  404968:	3a04      	subs	r2, #4
  40496a:	d2f9      	bcs.n	404960 <memcpy+0xc0>
  40496c:	3204      	adds	r2, #4
  40496e:	d008      	beq.n	404982 <memcpy+0xe2>
  404970:	07d2      	lsls	r2, r2, #31
  404972:	bf1c      	itt	ne
  404974:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404978:	f800 3b01 	strbne.w	r3, [r0], #1
  40497c:	d301      	bcc.n	404982 <memcpy+0xe2>
  40497e:	880b      	ldrh	r3, [r1, #0]
  404980:	8003      	strh	r3, [r0, #0]
  404982:	4660      	mov	r0, ip
  404984:	4770      	bx	lr
  404986:	bf00      	nop
  404988:	2a08      	cmp	r2, #8
  40498a:	d313      	bcc.n	4049b4 <memcpy+0x114>
  40498c:	078b      	lsls	r3, r1, #30
  40498e:	d08d      	beq.n	4048ac <memcpy+0xc>
  404990:	f010 0303 	ands.w	r3, r0, #3
  404994:	d08a      	beq.n	4048ac <memcpy+0xc>
  404996:	f1c3 0304 	rsb	r3, r3, #4
  40499a:	1ad2      	subs	r2, r2, r3
  40499c:	07db      	lsls	r3, r3, #31
  40499e:	bf1c      	itt	ne
  4049a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4049a4:	f800 3b01 	strbne.w	r3, [r0], #1
  4049a8:	d380      	bcc.n	4048ac <memcpy+0xc>
  4049aa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4049ae:	f820 3b02 	strh.w	r3, [r0], #2
  4049b2:	e77b      	b.n	4048ac <memcpy+0xc>
  4049b4:	3a04      	subs	r2, #4
  4049b6:	d3d9      	bcc.n	40496c <memcpy+0xcc>
  4049b8:	3a01      	subs	r2, #1
  4049ba:	f811 3b01 	ldrb.w	r3, [r1], #1
  4049be:	f800 3b01 	strb.w	r3, [r0], #1
  4049c2:	d2f9      	bcs.n	4049b8 <memcpy+0x118>
  4049c4:	780b      	ldrb	r3, [r1, #0]
  4049c6:	7003      	strb	r3, [r0, #0]
  4049c8:	784b      	ldrb	r3, [r1, #1]
  4049ca:	7043      	strb	r3, [r0, #1]
  4049cc:	788b      	ldrb	r3, [r1, #2]
  4049ce:	7083      	strb	r3, [r0, #2]
  4049d0:	4660      	mov	r0, ip
  4049d2:	4770      	bx	lr

004049d4 <__malloc_lock>:
  4049d4:	4801      	ldr	r0, [pc, #4]	; (4049dc <__malloc_lock+0x8>)
  4049d6:	f7ff bc59 	b.w	40428c <__retarget_lock_acquire_recursive>
  4049da:	bf00      	nop
  4049dc:	20400d24 	.word	0x20400d24

004049e0 <__malloc_unlock>:
  4049e0:	4801      	ldr	r0, [pc, #4]	; (4049e8 <__malloc_unlock+0x8>)
  4049e2:	f7ff bc55 	b.w	404290 <__retarget_lock_release_recursive>
  4049e6:	bf00      	nop
  4049e8:	20400d24 	.word	0x20400d24

004049ec <_Balloc>:
  4049ec:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4049ee:	b570      	push	{r4, r5, r6, lr}
  4049f0:	4605      	mov	r5, r0
  4049f2:	460c      	mov	r4, r1
  4049f4:	b14b      	cbz	r3, 404a0a <_Balloc+0x1e>
  4049f6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4049fa:	b180      	cbz	r0, 404a1e <_Balloc+0x32>
  4049fc:	6802      	ldr	r2, [r0, #0]
  4049fe:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404a02:	2300      	movs	r3, #0
  404a04:	6103      	str	r3, [r0, #16]
  404a06:	60c3      	str	r3, [r0, #12]
  404a08:	bd70      	pop	{r4, r5, r6, pc}
  404a0a:	2221      	movs	r2, #33	; 0x21
  404a0c:	2104      	movs	r1, #4
  404a0e:	f000 fc65 	bl	4052dc <_calloc_r>
  404a12:	64e8      	str	r0, [r5, #76]	; 0x4c
  404a14:	4603      	mov	r3, r0
  404a16:	2800      	cmp	r0, #0
  404a18:	d1ed      	bne.n	4049f6 <_Balloc+0xa>
  404a1a:	2000      	movs	r0, #0
  404a1c:	bd70      	pop	{r4, r5, r6, pc}
  404a1e:	2101      	movs	r1, #1
  404a20:	fa01 f604 	lsl.w	r6, r1, r4
  404a24:	1d72      	adds	r2, r6, #5
  404a26:	4628      	mov	r0, r5
  404a28:	0092      	lsls	r2, r2, #2
  404a2a:	f000 fc57 	bl	4052dc <_calloc_r>
  404a2e:	2800      	cmp	r0, #0
  404a30:	d0f3      	beq.n	404a1a <_Balloc+0x2e>
  404a32:	6044      	str	r4, [r0, #4]
  404a34:	6086      	str	r6, [r0, #8]
  404a36:	e7e4      	b.n	404a02 <_Balloc+0x16>

00404a38 <_Bfree>:
  404a38:	b131      	cbz	r1, 404a48 <_Bfree+0x10>
  404a3a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404a3c:	684a      	ldr	r2, [r1, #4]
  404a3e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404a42:	6008      	str	r0, [r1, #0]
  404a44:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404a48:	4770      	bx	lr
  404a4a:	bf00      	nop

00404a4c <__multadd>:
  404a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404a4e:	690c      	ldr	r4, [r1, #16]
  404a50:	b083      	sub	sp, #12
  404a52:	460d      	mov	r5, r1
  404a54:	4606      	mov	r6, r0
  404a56:	f101 0e14 	add.w	lr, r1, #20
  404a5a:	2700      	movs	r7, #0
  404a5c:	f8de 0000 	ldr.w	r0, [lr]
  404a60:	b281      	uxth	r1, r0
  404a62:	fb02 3301 	mla	r3, r2, r1, r3
  404a66:	0c01      	lsrs	r1, r0, #16
  404a68:	0c18      	lsrs	r0, r3, #16
  404a6a:	fb02 0101 	mla	r1, r2, r1, r0
  404a6e:	b29b      	uxth	r3, r3
  404a70:	3701      	adds	r7, #1
  404a72:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404a76:	42bc      	cmp	r4, r7
  404a78:	f84e 3b04 	str.w	r3, [lr], #4
  404a7c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404a80:	dcec      	bgt.n	404a5c <__multadd+0x10>
  404a82:	b13b      	cbz	r3, 404a94 <__multadd+0x48>
  404a84:	68aa      	ldr	r2, [r5, #8]
  404a86:	4294      	cmp	r4, r2
  404a88:	da07      	bge.n	404a9a <__multadd+0x4e>
  404a8a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404a8e:	3401      	adds	r4, #1
  404a90:	6153      	str	r3, [r2, #20]
  404a92:	612c      	str	r4, [r5, #16]
  404a94:	4628      	mov	r0, r5
  404a96:	b003      	add	sp, #12
  404a98:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a9a:	6869      	ldr	r1, [r5, #4]
  404a9c:	9301      	str	r3, [sp, #4]
  404a9e:	3101      	adds	r1, #1
  404aa0:	4630      	mov	r0, r6
  404aa2:	f7ff ffa3 	bl	4049ec <_Balloc>
  404aa6:	692a      	ldr	r2, [r5, #16]
  404aa8:	3202      	adds	r2, #2
  404aaa:	f105 010c 	add.w	r1, r5, #12
  404aae:	4607      	mov	r7, r0
  404ab0:	0092      	lsls	r2, r2, #2
  404ab2:	300c      	adds	r0, #12
  404ab4:	f7ff fef4 	bl	4048a0 <memcpy>
  404ab8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404aba:	6869      	ldr	r1, [r5, #4]
  404abc:	9b01      	ldr	r3, [sp, #4]
  404abe:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404ac2:	6028      	str	r0, [r5, #0]
  404ac4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404ac8:	463d      	mov	r5, r7
  404aca:	e7de      	b.n	404a8a <__multadd+0x3e>

00404acc <__hi0bits>:
  404acc:	0c02      	lsrs	r2, r0, #16
  404ace:	0412      	lsls	r2, r2, #16
  404ad0:	4603      	mov	r3, r0
  404ad2:	b9b2      	cbnz	r2, 404b02 <__hi0bits+0x36>
  404ad4:	0403      	lsls	r3, r0, #16
  404ad6:	2010      	movs	r0, #16
  404ad8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404adc:	bf04      	itt	eq
  404ade:	021b      	lsleq	r3, r3, #8
  404ae0:	3008      	addeq	r0, #8
  404ae2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404ae6:	bf04      	itt	eq
  404ae8:	011b      	lsleq	r3, r3, #4
  404aea:	3004      	addeq	r0, #4
  404aec:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404af0:	bf04      	itt	eq
  404af2:	009b      	lsleq	r3, r3, #2
  404af4:	3002      	addeq	r0, #2
  404af6:	2b00      	cmp	r3, #0
  404af8:	db02      	blt.n	404b00 <__hi0bits+0x34>
  404afa:	005b      	lsls	r3, r3, #1
  404afc:	d403      	bmi.n	404b06 <__hi0bits+0x3a>
  404afe:	2020      	movs	r0, #32
  404b00:	4770      	bx	lr
  404b02:	2000      	movs	r0, #0
  404b04:	e7e8      	b.n	404ad8 <__hi0bits+0xc>
  404b06:	3001      	adds	r0, #1
  404b08:	4770      	bx	lr
  404b0a:	bf00      	nop

00404b0c <__lo0bits>:
  404b0c:	6803      	ldr	r3, [r0, #0]
  404b0e:	f013 0207 	ands.w	r2, r3, #7
  404b12:	4601      	mov	r1, r0
  404b14:	d007      	beq.n	404b26 <__lo0bits+0x1a>
  404b16:	07da      	lsls	r2, r3, #31
  404b18:	d421      	bmi.n	404b5e <__lo0bits+0x52>
  404b1a:	0798      	lsls	r0, r3, #30
  404b1c:	d421      	bmi.n	404b62 <__lo0bits+0x56>
  404b1e:	089b      	lsrs	r3, r3, #2
  404b20:	600b      	str	r3, [r1, #0]
  404b22:	2002      	movs	r0, #2
  404b24:	4770      	bx	lr
  404b26:	b298      	uxth	r0, r3
  404b28:	b198      	cbz	r0, 404b52 <__lo0bits+0x46>
  404b2a:	4610      	mov	r0, r2
  404b2c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404b30:	bf04      	itt	eq
  404b32:	0a1b      	lsreq	r3, r3, #8
  404b34:	3008      	addeq	r0, #8
  404b36:	071a      	lsls	r2, r3, #28
  404b38:	bf04      	itt	eq
  404b3a:	091b      	lsreq	r3, r3, #4
  404b3c:	3004      	addeq	r0, #4
  404b3e:	079a      	lsls	r2, r3, #30
  404b40:	bf04      	itt	eq
  404b42:	089b      	lsreq	r3, r3, #2
  404b44:	3002      	addeq	r0, #2
  404b46:	07da      	lsls	r2, r3, #31
  404b48:	d407      	bmi.n	404b5a <__lo0bits+0x4e>
  404b4a:	085b      	lsrs	r3, r3, #1
  404b4c:	d104      	bne.n	404b58 <__lo0bits+0x4c>
  404b4e:	2020      	movs	r0, #32
  404b50:	4770      	bx	lr
  404b52:	0c1b      	lsrs	r3, r3, #16
  404b54:	2010      	movs	r0, #16
  404b56:	e7e9      	b.n	404b2c <__lo0bits+0x20>
  404b58:	3001      	adds	r0, #1
  404b5a:	600b      	str	r3, [r1, #0]
  404b5c:	4770      	bx	lr
  404b5e:	2000      	movs	r0, #0
  404b60:	4770      	bx	lr
  404b62:	085b      	lsrs	r3, r3, #1
  404b64:	600b      	str	r3, [r1, #0]
  404b66:	2001      	movs	r0, #1
  404b68:	4770      	bx	lr
  404b6a:	bf00      	nop

00404b6c <__i2b>:
  404b6c:	b510      	push	{r4, lr}
  404b6e:	460c      	mov	r4, r1
  404b70:	2101      	movs	r1, #1
  404b72:	f7ff ff3b 	bl	4049ec <_Balloc>
  404b76:	2201      	movs	r2, #1
  404b78:	6144      	str	r4, [r0, #20]
  404b7a:	6102      	str	r2, [r0, #16]
  404b7c:	bd10      	pop	{r4, pc}
  404b7e:	bf00      	nop

00404b80 <__multiply>:
  404b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b84:	690c      	ldr	r4, [r1, #16]
  404b86:	6915      	ldr	r5, [r2, #16]
  404b88:	42ac      	cmp	r4, r5
  404b8a:	b083      	sub	sp, #12
  404b8c:	468b      	mov	fp, r1
  404b8e:	4616      	mov	r6, r2
  404b90:	da04      	bge.n	404b9c <__multiply+0x1c>
  404b92:	4622      	mov	r2, r4
  404b94:	46b3      	mov	fp, r6
  404b96:	462c      	mov	r4, r5
  404b98:	460e      	mov	r6, r1
  404b9a:	4615      	mov	r5, r2
  404b9c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404ba0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404ba4:	eb04 0805 	add.w	r8, r4, r5
  404ba8:	4598      	cmp	r8, r3
  404baa:	bfc8      	it	gt
  404bac:	3101      	addgt	r1, #1
  404bae:	f7ff ff1d 	bl	4049ec <_Balloc>
  404bb2:	f100 0914 	add.w	r9, r0, #20
  404bb6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404bba:	45d1      	cmp	r9, sl
  404bbc:	9000      	str	r0, [sp, #0]
  404bbe:	d205      	bcs.n	404bcc <__multiply+0x4c>
  404bc0:	464b      	mov	r3, r9
  404bc2:	2100      	movs	r1, #0
  404bc4:	f843 1b04 	str.w	r1, [r3], #4
  404bc8:	459a      	cmp	sl, r3
  404bca:	d8fb      	bhi.n	404bc4 <__multiply+0x44>
  404bcc:	f106 0c14 	add.w	ip, r6, #20
  404bd0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404bd4:	f10b 0b14 	add.w	fp, fp, #20
  404bd8:	459c      	cmp	ip, r3
  404bda:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404bde:	d24c      	bcs.n	404c7a <__multiply+0xfa>
  404be0:	f8cd a004 	str.w	sl, [sp, #4]
  404be4:	469a      	mov	sl, r3
  404be6:	f8dc 5000 	ldr.w	r5, [ip]
  404bea:	b2af      	uxth	r7, r5
  404bec:	b1ef      	cbz	r7, 404c2a <__multiply+0xaa>
  404bee:	2100      	movs	r1, #0
  404bf0:	464d      	mov	r5, r9
  404bf2:	465e      	mov	r6, fp
  404bf4:	460c      	mov	r4, r1
  404bf6:	f856 2b04 	ldr.w	r2, [r6], #4
  404bfa:	6828      	ldr	r0, [r5, #0]
  404bfc:	b293      	uxth	r3, r2
  404bfe:	b281      	uxth	r1, r0
  404c00:	fb07 1303 	mla	r3, r7, r3, r1
  404c04:	0c12      	lsrs	r2, r2, #16
  404c06:	0c01      	lsrs	r1, r0, #16
  404c08:	4423      	add	r3, r4
  404c0a:	fb07 1102 	mla	r1, r7, r2, r1
  404c0e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404c12:	b29b      	uxth	r3, r3
  404c14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404c18:	45b6      	cmp	lr, r6
  404c1a:	f845 3b04 	str.w	r3, [r5], #4
  404c1e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404c22:	d8e8      	bhi.n	404bf6 <__multiply+0x76>
  404c24:	602c      	str	r4, [r5, #0]
  404c26:	f8dc 5000 	ldr.w	r5, [ip]
  404c2a:	0c2d      	lsrs	r5, r5, #16
  404c2c:	d01d      	beq.n	404c6a <__multiply+0xea>
  404c2e:	f8d9 3000 	ldr.w	r3, [r9]
  404c32:	4648      	mov	r0, r9
  404c34:	461c      	mov	r4, r3
  404c36:	4659      	mov	r1, fp
  404c38:	2200      	movs	r2, #0
  404c3a:	880e      	ldrh	r6, [r1, #0]
  404c3c:	0c24      	lsrs	r4, r4, #16
  404c3e:	fb05 4406 	mla	r4, r5, r6, r4
  404c42:	4422      	add	r2, r4
  404c44:	b29b      	uxth	r3, r3
  404c46:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404c4a:	f840 3b04 	str.w	r3, [r0], #4
  404c4e:	f851 3b04 	ldr.w	r3, [r1], #4
  404c52:	6804      	ldr	r4, [r0, #0]
  404c54:	0c1b      	lsrs	r3, r3, #16
  404c56:	b2a6      	uxth	r6, r4
  404c58:	fb05 6303 	mla	r3, r5, r3, r6
  404c5c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404c60:	458e      	cmp	lr, r1
  404c62:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404c66:	d8e8      	bhi.n	404c3a <__multiply+0xba>
  404c68:	6003      	str	r3, [r0, #0]
  404c6a:	f10c 0c04 	add.w	ip, ip, #4
  404c6e:	45e2      	cmp	sl, ip
  404c70:	f109 0904 	add.w	r9, r9, #4
  404c74:	d8b7      	bhi.n	404be6 <__multiply+0x66>
  404c76:	f8dd a004 	ldr.w	sl, [sp, #4]
  404c7a:	f1b8 0f00 	cmp.w	r8, #0
  404c7e:	dd0b      	ble.n	404c98 <__multiply+0x118>
  404c80:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404c84:	f1aa 0a04 	sub.w	sl, sl, #4
  404c88:	b11b      	cbz	r3, 404c92 <__multiply+0x112>
  404c8a:	e005      	b.n	404c98 <__multiply+0x118>
  404c8c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404c90:	b913      	cbnz	r3, 404c98 <__multiply+0x118>
  404c92:	f1b8 0801 	subs.w	r8, r8, #1
  404c96:	d1f9      	bne.n	404c8c <__multiply+0x10c>
  404c98:	9800      	ldr	r0, [sp, #0]
  404c9a:	f8c0 8010 	str.w	r8, [r0, #16]
  404c9e:	b003      	add	sp, #12
  404ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404ca4 <__pow5mult>:
  404ca4:	f012 0303 	ands.w	r3, r2, #3
  404ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404cac:	4614      	mov	r4, r2
  404cae:	4607      	mov	r7, r0
  404cb0:	d12e      	bne.n	404d10 <__pow5mult+0x6c>
  404cb2:	460d      	mov	r5, r1
  404cb4:	10a4      	asrs	r4, r4, #2
  404cb6:	d01c      	beq.n	404cf2 <__pow5mult+0x4e>
  404cb8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404cba:	b396      	cbz	r6, 404d22 <__pow5mult+0x7e>
  404cbc:	07e3      	lsls	r3, r4, #31
  404cbe:	f04f 0800 	mov.w	r8, #0
  404cc2:	d406      	bmi.n	404cd2 <__pow5mult+0x2e>
  404cc4:	1064      	asrs	r4, r4, #1
  404cc6:	d014      	beq.n	404cf2 <__pow5mult+0x4e>
  404cc8:	6830      	ldr	r0, [r6, #0]
  404cca:	b1a8      	cbz	r0, 404cf8 <__pow5mult+0x54>
  404ccc:	4606      	mov	r6, r0
  404cce:	07e3      	lsls	r3, r4, #31
  404cd0:	d5f8      	bpl.n	404cc4 <__pow5mult+0x20>
  404cd2:	4632      	mov	r2, r6
  404cd4:	4629      	mov	r1, r5
  404cd6:	4638      	mov	r0, r7
  404cd8:	f7ff ff52 	bl	404b80 <__multiply>
  404cdc:	b1b5      	cbz	r5, 404d0c <__pow5mult+0x68>
  404cde:	686a      	ldr	r2, [r5, #4]
  404ce0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404ce2:	1064      	asrs	r4, r4, #1
  404ce4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404ce8:	6029      	str	r1, [r5, #0]
  404cea:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404cee:	4605      	mov	r5, r0
  404cf0:	d1ea      	bne.n	404cc8 <__pow5mult+0x24>
  404cf2:	4628      	mov	r0, r5
  404cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404cf8:	4632      	mov	r2, r6
  404cfa:	4631      	mov	r1, r6
  404cfc:	4638      	mov	r0, r7
  404cfe:	f7ff ff3f 	bl	404b80 <__multiply>
  404d02:	6030      	str	r0, [r6, #0]
  404d04:	f8c0 8000 	str.w	r8, [r0]
  404d08:	4606      	mov	r6, r0
  404d0a:	e7e0      	b.n	404cce <__pow5mult+0x2a>
  404d0c:	4605      	mov	r5, r0
  404d0e:	e7d9      	b.n	404cc4 <__pow5mult+0x20>
  404d10:	1e5a      	subs	r2, r3, #1
  404d12:	4d0b      	ldr	r5, [pc, #44]	; (404d40 <__pow5mult+0x9c>)
  404d14:	2300      	movs	r3, #0
  404d16:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404d1a:	f7ff fe97 	bl	404a4c <__multadd>
  404d1e:	4605      	mov	r5, r0
  404d20:	e7c8      	b.n	404cb4 <__pow5mult+0x10>
  404d22:	2101      	movs	r1, #1
  404d24:	4638      	mov	r0, r7
  404d26:	f7ff fe61 	bl	4049ec <_Balloc>
  404d2a:	f240 2171 	movw	r1, #625	; 0x271
  404d2e:	2201      	movs	r2, #1
  404d30:	2300      	movs	r3, #0
  404d32:	6141      	str	r1, [r0, #20]
  404d34:	6102      	str	r2, [r0, #16]
  404d36:	4606      	mov	r6, r0
  404d38:	64b8      	str	r0, [r7, #72]	; 0x48
  404d3a:	6003      	str	r3, [r0, #0]
  404d3c:	e7be      	b.n	404cbc <__pow5mult+0x18>
  404d3e:	bf00      	nop
  404d40:	00406ee0 	.word	0x00406ee0

00404d44 <__lshift>:
  404d44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404d48:	4691      	mov	r9, r2
  404d4a:	690a      	ldr	r2, [r1, #16]
  404d4c:	688b      	ldr	r3, [r1, #8]
  404d4e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404d52:	eb04 0802 	add.w	r8, r4, r2
  404d56:	f108 0501 	add.w	r5, r8, #1
  404d5a:	429d      	cmp	r5, r3
  404d5c:	460e      	mov	r6, r1
  404d5e:	4607      	mov	r7, r0
  404d60:	6849      	ldr	r1, [r1, #4]
  404d62:	dd04      	ble.n	404d6e <__lshift+0x2a>
  404d64:	005b      	lsls	r3, r3, #1
  404d66:	429d      	cmp	r5, r3
  404d68:	f101 0101 	add.w	r1, r1, #1
  404d6c:	dcfa      	bgt.n	404d64 <__lshift+0x20>
  404d6e:	4638      	mov	r0, r7
  404d70:	f7ff fe3c 	bl	4049ec <_Balloc>
  404d74:	2c00      	cmp	r4, #0
  404d76:	f100 0314 	add.w	r3, r0, #20
  404d7a:	dd06      	ble.n	404d8a <__lshift+0x46>
  404d7c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404d80:	2100      	movs	r1, #0
  404d82:	f843 1b04 	str.w	r1, [r3], #4
  404d86:	429a      	cmp	r2, r3
  404d88:	d1fb      	bne.n	404d82 <__lshift+0x3e>
  404d8a:	6934      	ldr	r4, [r6, #16]
  404d8c:	f106 0114 	add.w	r1, r6, #20
  404d90:	f019 091f 	ands.w	r9, r9, #31
  404d94:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404d98:	d01d      	beq.n	404dd6 <__lshift+0x92>
  404d9a:	f1c9 0c20 	rsb	ip, r9, #32
  404d9e:	2200      	movs	r2, #0
  404da0:	680c      	ldr	r4, [r1, #0]
  404da2:	fa04 f409 	lsl.w	r4, r4, r9
  404da6:	4314      	orrs	r4, r2
  404da8:	f843 4b04 	str.w	r4, [r3], #4
  404dac:	f851 2b04 	ldr.w	r2, [r1], #4
  404db0:	458e      	cmp	lr, r1
  404db2:	fa22 f20c 	lsr.w	r2, r2, ip
  404db6:	d8f3      	bhi.n	404da0 <__lshift+0x5c>
  404db8:	601a      	str	r2, [r3, #0]
  404dba:	b10a      	cbz	r2, 404dc0 <__lshift+0x7c>
  404dbc:	f108 0502 	add.w	r5, r8, #2
  404dc0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404dc2:	6872      	ldr	r2, [r6, #4]
  404dc4:	3d01      	subs	r5, #1
  404dc6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404dca:	6105      	str	r5, [r0, #16]
  404dcc:	6031      	str	r1, [r6, #0]
  404dce:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404dd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404dd6:	3b04      	subs	r3, #4
  404dd8:	f851 2b04 	ldr.w	r2, [r1], #4
  404ddc:	f843 2f04 	str.w	r2, [r3, #4]!
  404de0:	458e      	cmp	lr, r1
  404de2:	d8f9      	bhi.n	404dd8 <__lshift+0x94>
  404de4:	e7ec      	b.n	404dc0 <__lshift+0x7c>
  404de6:	bf00      	nop

00404de8 <__mcmp>:
  404de8:	b430      	push	{r4, r5}
  404dea:	690b      	ldr	r3, [r1, #16]
  404dec:	4605      	mov	r5, r0
  404dee:	6900      	ldr	r0, [r0, #16]
  404df0:	1ac0      	subs	r0, r0, r3
  404df2:	d10f      	bne.n	404e14 <__mcmp+0x2c>
  404df4:	009b      	lsls	r3, r3, #2
  404df6:	3514      	adds	r5, #20
  404df8:	3114      	adds	r1, #20
  404dfa:	4419      	add	r1, r3
  404dfc:	442b      	add	r3, r5
  404dfe:	e001      	b.n	404e04 <__mcmp+0x1c>
  404e00:	429d      	cmp	r5, r3
  404e02:	d207      	bcs.n	404e14 <__mcmp+0x2c>
  404e04:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404e08:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404e0c:	4294      	cmp	r4, r2
  404e0e:	d0f7      	beq.n	404e00 <__mcmp+0x18>
  404e10:	d302      	bcc.n	404e18 <__mcmp+0x30>
  404e12:	2001      	movs	r0, #1
  404e14:	bc30      	pop	{r4, r5}
  404e16:	4770      	bx	lr
  404e18:	f04f 30ff 	mov.w	r0, #4294967295
  404e1c:	e7fa      	b.n	404e14 <__mcmp+0x2c>
  404e1e:	bf00      	nop

00404e20 <__mdiff>:
  404e20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e24:	690f      	ldr	r7, [r1, #16]
  404e26:	460e      	mov	r6, r1
  404e28:	6911      	ldr	r1, [r2, #16]
  404e2a:	1a7f      	subs	r7, r7, r1
  404e2c:	2f00      	cmp	r7, #0
  404e2e:	4690      	mov	r8, r2
  404e30:	d117      	bne.n	404e62 <__mdiff+0x42>
  404e32:	0089      	lsls	r1, r1, #2
  404e34:	f106 0514 	add.w	r5, r6, #20
  404e38:	f102 0e14 	add.w	lr, r2, #20
  404e3c:	186b      	adds	r3, r5, r1
  404e3e:	4471      	add	r1, lr
  404e40:	e001      	b.n	404e46 <__mdiff+0x26>
  404e42:	429d      	cmp	r5, r3
  404e44:	d25c      	bcs.n	404f00 <__mdiff+0xe0>
  404e46:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404e4a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404e4e:	42a2      	cmp	r2, r4
  404e50:	d0f7      	beq.n	404e42 <__mdiff+0x22>
  404e52:	d25e      	bcs.n	404f12 <__mdiff+0xf2>
  404e54:	4633      	mov	r3, r6
  404e56:	462c      	mov	r4, r5
  404e58:	4646      	mov	r6, r8
  404e5a:	4675      	mov	r5, lr
  404e5c:	4698      	mov	r8, r3
  404e5e:	2701      	movs	r7, #1
  404e60:	e005      	b.n	404e6e <__mdiff+0x4e>
  404e62:	db58      	blt.n	404f16 <__mdiff+0xf6>
  404e64:	f106 0514 	add.w	r5, r6, #20
  404e68:	f108 0414 	add.w	r4, r8, #20
  404e6c:	2700      	movs	r7, #0
  404e6e:	6871      	ldr	r1, [r6, #4]
  404e70:	f7ff fdbc 	bl	4049ec <_Balloc>
  404e74:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404e78:	6936      	ldr	r6, [r6, #16]
  404e7a:	60c7      	str	r7, [r0, #12]
  404e7c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404e80:	46a6      	mov	lr, r4
  404e82:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404e86:	f100 0414 	add.w	r4, r0, #20
  404e8a:	2300      	movs	r3, #0
  404e8c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404e90:	f855 8b04 	ldr.w	r8, [r5], #4
  404e94:	b28a      	uxth	r2, r1
  404e96:	fa13 f388 	uxtah	r3, r3, r8
  404e9a:	0c09      	lsrs	r1, r1, #16
  404e9c:	1a9a      	subs	r2, r3, r2
  404e9e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404ea2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404ea6:	b292      	uxth	r2, r2
  404ea8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404eac:	45f4      	cmp	ip, lr
  404eae:	f844 2b04 	str.w	r2, [r4], #4
  404eb2:	ea4f 4323 	mov.w	r3, r3, asr #16
  404eb6:	d8e9      	bhi.n	404e8c <__mdiff+0x6c>
  404eb8:	42af      	cmp	r7, r5
  404eba:	d917      	bls.n	404eec <__mdiff+0xcc>
  404ebc:	46a4      	mov	ip, r4
  404ebe:	46ae      	mov	lr, r5
  404ec0:	f85e 2b04 	ldr.w	r2, [lr], #4
  404ec4:	fa13 f382 	uxtah	r3, r3, r2
  404ec8:	1419      	asrs	r1, r3, #16
  404eca:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404ece:	b29b      	uxth	r3, r3
  404ed0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404ed4:	4577      	cmp	r7, lr
  404ed6:	f84c 2b04 	str.w	r2, [ip], #4
  404eda:	ea4f 4321 	mov.w	r3, r1, asr #16
  404ede:	d8ef      	bhi.n	404ec0 <__mdiff+0xa0>
  404ee0:	43ed      	mvns	r5, r5
  404ee2:	442f      	add	r7, r5
  404ee4:	f027 0703 	bic.w	r7, r7, #3
  404ee8:	3704      	adds	r7, #4
  404eea:	443c      	add	r4, r7
  404eec:	3c04      	subs	r4, #4
  404eee:	b922      	cbnz	r2, 404efa <__mdiff+0xda>
  404ef0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404ef4:	3e01      	subs	r6, #1
  404ef6:	2b00      	cmp	r3, #0
  404ef8:	d0fa      	beq.n	404ef0 <__mdiff+0xd0>
  404efa:	6106      	str	r6, [r0, #16]
  404efc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f00:	2100      	movs	r1, #0
  404f02:	f7ff fd73 	bl	4049ec <_Balloc>
  404f06:	2201      	movs	r2, #1
  404f08:	2300      	movs	r3, #0
  404f0a:	6102      	str	r2, [r0, #16]
  404f0c:	6143      	str	r3, [r0, #20]
  404f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f12:	4674      	mov	r4, lr
  404f14:	e7ab      	b.n	404e6e <__mdiff+0x4e>
  404f16:	4633      	mov	r3, r6
  404f18:	f106 0414 	add.w	r4, r6, #20
  404f1c:	f102 0514 	add.w	r5, r2, #20
  404f20:	4616      	mov	r6, r2
  404f22:	2701      	movs	r7, #1
  404f24:	4698      	mov	r8, r3
  404f26:	e7a2      	b.n	404e6e <__mdiff+0x4e>

00404f28 <__d2b>:
  404f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f2c:	b082      	sub	sp, #8
  404f2e:	2101      	movs	r1, #1
  404f30:	461c      	mov	r4, r3
  404f32:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404f36:	4615      	mov	r5, r2
  404f38:	9e08      	ldr	r6, [sp, #32]
  404f3a:	f7ff fd57 	bl	4049ec <_Balloc>
  404f3e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404f42:	4680      	mov	r8, r0
  404f44:	b10f      	cbz	r7, 404f4a <__d2b+0x22>
  404f46:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404f4a:	9401      	str	r4, [sp, #4]
  404f4c:	b31d      	cbz	r5, 404f96 <__d2b+0x6e>
  404f4e:	a802      	add	r0, sp, #8
  404f50:	f840 5d08 	str.w	r5, [r0, #-8]!
  404f54:	f7ff fdda 	bl	404b0c <__lo0bits>
  404f58:	2800      	cmp	r0, #0
  404f5a:	d134      	bne.n	404fc6 <__d2b+0x9e>
  404f5c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404f60:	f8c8 2014 	str.w	r2, [r8, #20]
  404f64:	2b00      	cmp	r3, #0
  404f66:	bf0c      	ite	eq
  404f68:	2101      	moveq	r1, #1
  404f6a:	2102      	movne	r1, #2
  404f6c:	f8c8 3018 	str.w	r3, [r8, #24]
  404f70:	f8c8 1010 	str.w	r1, [r8, #16]
  404f74:	b9df      	cbnz	r7, 404fae <__d2b+0x86>
  404f76:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404f7a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404f7e:	6030      	str	r0, [r6, #0]
  404f80:	6918      	ldr	r0, [r3, #16]
  404f82:	f7ff fda3 	bl	404acc <__hi0bits>
  404f86:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f88:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404f8c:	6018      	str	r0, [r3, #0]
  404f8e:	4640      	mov	r0, r8
  404f90:	b002      	add	sp, #8
  404f92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f96:	a801      	add	r0, sp, #4
  404f98:	f7ff fdb8 	bl	404b0c <__lo0bits>
  404f9c:	9b01      	ldr	r3, [sp, #4]
  404f9e:	f8c8 3014 	str.w	r3, [r8, #20]
  404fa2:	2101      	movs	r1, #1
  404fa4:	3020      	adds	r0, #32
  404fa6:	f8c8 1010 	str.w	r1, [r8, #16]
  404faa:	2f00      	cmp	r7, #0
  404fac:	d0e3      	beq.n	404f76 <__d2b+0x4e>
  404fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404fb0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404fb4:	4407      	add	r7, r0
  404fb6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404fba:	6037      	str	r7, [r6, #0]
  404fbc:	6018      	str	r0, [r3, #0]
  404fbe:	4640      	mov	r0, r8
  404fc0:	b002      	add	sp, #8
  404fc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404fc6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404fca:	f1c0 0220 	rsb	r2, r0, #32
  404fce:	fa03 f202 	lsl.w	r2, r3, r2
  404fd2:	430a      	orrs	r2, r1
  404fd4:	40c3      	lsrs	r3, r0
  404fd6:	9301      	str	r3, [sp, #4]
  404fd8:	f8c8 2014 	str.w	r2, [r8, #20]
  404fdc:	e7c2      	b.n	404f64 <__d2b+0x3c>
  404fde:	bf00      	nop

00404fe0 <_sbrk_r>:
  404fe0:	b538      	push	{r3, r4, r5, lr}
  404fe2:	4c07      	ldr	r4, [pc, #28]	; (405000 <_sbrk_r+0x20>)
  404fe4:	2300      	movs	r3, #0
  404fe6:	4605      	mov	r5, r0
  404fe8:	4608      	mov	r0, r1
  404fea:	6023      	str	r3, [r4, #0]
  404fec:	f7fc fa94 	bl	401518 <_sbrk>
  404ff0:	1c43      	adds	r3, r0, #1
  404ff2:	d000      	beq.n	404ff6 <_sbrk_r+0x16>
  404ff4:	bd38      	pop	{r3, r4, r5, pc}
  404ff6:	6823      	ldr	r3, [r4, #0]
  404ff8:	2b00      	cmp	r3, #0
  404ffa:	d0fb      	beq.n	404ff4 <_sbrk_r+0x14>
  404ffc:	602b      	str	r3, [r5, #0]
  404ffe:	bd38      	pop	{r3, r4, r5, pc}
  405000:	20400d38 	.word	0x20400d38
	...

00405040 <strlen>:
  405040:	f890 f000 	pld	[r0]
  405044:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405048:	f020 0107 	bic.w	r1, r0, #7
  40504c:	f06f 0c00 	mvn.w	ip, #0
  405050:	f010 0407 	ands.w	r4, r0, #7
  405054:	f891 f020 	pld	[r1, #32]
  405058:	f040 8049 	bne.w	4050ee <strlen+0xae>
  40505c:	f04f 0400 	mov.w	r4, #0
  405060:	f06f 0007 	mvn.w	r0, #7
  405064:	e9d1 2300 	ldrd	r2, r3, [r1]
  405068:	f891 f040 	pld	[r1, #64]	; 0x40
  40506c:	f100 0008 	add.w	r0, r0, #8
  405070:	fa82 f24c 	uadd8	r2, r2, ip
  405074:	faa4 f28c 	sel	r2, r4, ip
  405078:	fa83 f34c 	uadd8	r3, r3, ip
  40507c:	faa2 f38c 	sel	r3, r2, ip
  405080:	bb4b      	cbnz	r3, 4050d6 <strlen+0x96>
  405082:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405086:	fa82 f24c 	uadd8	r2, r2, ip
  40508a:	f100 0008 	add.w	r0, r0, #8
  40508e:	faa4 f28c 	sel	r2, r4, ip
  405092:	fa83 f34c 	uadd8	r3, r3, ip
  405096:	faa2 f38c 	sel	r3, r2, ip
  40509a:	b9e3      	cbnz	r3, 4050d6 <strlen+0x96>
  40509c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4050a0:	fa82 f24c 	uadd8	r2, r2, ip
  4050a4:	f100 0008 	add.w	r0, r0, #8
  4050a8:	faa4 f28c 	sel	r2, r4, ip
  4050ac:	fa83 f34c 	uadd8	r3, r3, ip
  4050b0:	faa2 f38c 	sel	r3, r2, ip
  4050b4:	b97b      	cbnz	r3, 4050d6 <strlen+0x96>
  4050b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4050ba:	f101 0120 	add.w	r1, r1, #32
  4050be:	fa82 f24c 	uadd8	r2, r2, ip
  4050c2:	f100 0008 	add.w	r0, r0, #8
  4050c6:	faa4 f28c 	sel	r2, r4, ip
  4050ca:	fa83 f34c 	uadd8	r3, r3, ip
  4050ce:	faa2 f38c 	sel	r3, r2, ip
  4050d2:	2b00      	cmp	r3, #0
  4050d4:	d0c6      	beq.n	405064 <strlen+0x24>
  4050d6:	2a00      	cmp	r2, #0
  4050d8:	bf04      	itt	eq
  4050da:	3004      	addeq	r0, #4
  4050dc:	461a      	moveq	r2, r3
  4050de:	ba12      	rev	r2, r2
  4050e0:	fab2 f282 	clz	r2, r2
  4050e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4050e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4050ec:	4770      	bx	lr
  4050ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4050f2:	f004 0503 	and.w	r5, r4, #3
  4050f6:	f1c4 0000 	rsb	r0, r4, #0
  4050fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4050fe:	f014 0f04 	tst.w	r4, #4
  405102:	f891 f040 	pld	[r1, #64]	; 0x40
  405106:	fa0c f505 	lsl.w	r5, ip, r5
  40510a:	ea62 0205 	orn	r2, r2, r5
  40510e:	bf1c      	itt	ne
  405110:	ea63 0305 	ornne	r3, r3, r5
  405114:	4662      	movne	r2, ip
  405116:	f04f 0400 	mov.w	r4, #0
  40511a:	e7a9      	b.n	405070 <strlen+0x30>

0040511c <__ssprint_r>:
  40511c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405120:	6893      	ldr	r3, [r2, #8]
  405122:	b083      	sub	sp, #12
  405124:	4690      	mov	r8, r2
  405126:	2b00      	cmp	r3, #0
  405128:	d070      	beq.n	40520c <__ssprint_r+0xf0>
  40512a:	4682      	mov	sl, r0
  40512c:	460c      	mov	r4, r1
  40512e:	6817      	ldr	r7, [r2, #0]
  405130:	688d      	ldr	r5, [r1, #8]
  405132:	6808      	ldr	r0, [r1, #0]
  405134:	e042      	b.n	4051bc <__ssprint_r+0xa0>
  405136:	89a3      	ldrh	r3, [r4, #12]
  405138:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40513c:	d02e      	beq.n	40519c <__ssprint_r+0x80>
  40513e:	6965      	ldr	r5, [r4, #20]
  405140:	6921      	ldr	r1, [r4, #16]
  405142:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405146:	eba0 0b01 	sub.w	fp, r0, r1
  40514a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40514e:	f10b 0001 	add.w	r0, fp, #1
  405152:	106d      	asrs	r5, r5, #1
  405154:	4430      	add	r0, r6
  405156:	42a8      	cmp	r0, r5
  405158:	462a      	mov	r2, r5
  40515a:	bf84      	itt	hi
  40515c:	4605      	movhi	r5, r0
  40515e:	462a      	movhi	r2, r5
  405160:	055b      	lsls	r3, r3, #21
  405162:	d538      	bpl.n	4051d6 <__ssprint_r+0xba>
  405164:	4611      	mov	r1, r2
  405166:	4650      	mov	r0, sl
  405168:	f7ff f894 	bl	404294 <_malloc_r>
  40516c:	2800      	cmp	r0, #0
  40516e:	d03c      	beq.n	4051ea <__ssprint_r+0xce>
  405170:	465a      	mov	r2, fp
  405172:	6921      	ldr	r1, [r4, #16]
  405174:	9001      	str	r0, [sp, #4]
  405176:	f7ff fb93 	bl	4048a0 <memcpy>
  40517a:	89a2      	ldrh	r2, [r4, #12]
  40517c:	9b01      	ldr	r3, [sp, #4]
  40517e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405182:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405186:	81a2      	strh	r2, [r4, #12]
  405188:	eba5 020b 	sub.w	r2, r5, fp
  40518c:	eb03 000b 	add.w	r0, r3, fp
  405190:	6165      	str	r5, [r4, #20]
  405192:	6123      	str	r3, [r4, #16]
  405194:	6020      	str	r0, [r4, #0]
  405196:	60a2      	str	r2, [r4, #8]
  405198:	4635      	mov	r5, r6
  40519a:	46b3      	mov	fp, r6
  40519c:	465a      	mov	r2, fp
  40519e:	4649      	mov	r1, r9
  4051a0:	f000 fa18 	bl	4055d4 <memmove>
  4051a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4051a8:	68a2      	ldr	r2, [r4, #8]
  4051aa:	6820      	ldr	r0, [r4, #0]
  4051ac:	1b55      	subs	r5, r2, r5
  4051ae:	4458      	add	r0, fp
  4051b0:	1b9e      	subs	r6, r3, r6
  4051b2:	60a5      	str	r5, [r4, #8]
  4051b4:	6020      	str	r0, [r4, #0]
  4051b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4051ba:	b33e      	cbz	r6, 40520c <__ssprint_r+0xf0>
  4051bc:	687e      	ldr	r6, [r7, #4]
  4051be:	463b      	mov	r3, r7
  4051c0:	3708      	adds	r7, #8
  4051c2:	2e00      	cmp	r6, #0
  4051c4:	d0fa      	beq.n	4051bc <__ssprint_r+0xa0>
  4051c6:	42ae      	cmp	r6, r5
  4051c8:	f8d3 9000 	ldr.w	r9, [r3]
  4051cc:	46ab      	mov	fp, r5
  4051ce:	d2b2      	bcs.n	405136 <__ssprint_r+0x1a>
  4051d0:	4635      	mov	r5, r6
  4051d2:	46b3      	mov	fp, r6
  4051d4:	e7e2      	b.n	40519c <__ssprint_r+0x80>
  4051d6:	4650      	mov	r0, sl
  4051d8:	f000 fa60 	bl	40569c <_realloc_r>
  4051dc:	4603      	mov	r3, r0
  4051de:	2800      	cmp	r0, #0
  4051e0:	d1d2      	bne.n	405188 <__ssprint_r+0x6c>
  4051e2:	6921      	ldr	r1, [r4, #16]
  4051e4:	4650      	mov	r0, sl
  4051e6:	f000 f8f9 	bl	4053dc <_free_r>
  4051ea:	230c      	movs	r3, #12
  4051ec:	f8ca 3000 	str.w	r3, [sl]
  4051f0:	89a3      	ldrh	r3, [r4, #12]
  4051f2:	2200      	movs	r2, #0
  4051f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4051f8:	f04f 30ff 	mov.w	r0, #4294967295
  4051fc:	81a3      	strh	r3, [r4, #12]
  4051fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405202:	f8c8 2004 	str.w	r2, [r8, #4]
  405206:	b003      	add	sp, #12
  405208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40520c:	2000      	movs	r0, #0
  40520e:	f8c8 0004 	str.w	r0, [r8, #4]
  405212:	b003      	add	sp, #12
  405214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405218 <__register_exitproc>:
  405218:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40521c:	4d2c      	ldr	r5, [pc, #176]	; (4052d0 <__register_exitproc+0xb8>)
  40521e:	4606      	mov	r6, r0
  405220:	6828      	ldr	r0, [r5, #0]
  405222:	4698      	mov	r8, r3
  405224:	460f      	mov	r7, r1
  405226:	4691      	mov	r9, r2
  405228:	f7ff f830 	bl	40428c <__retarget_lock_acquire_recursive>
  40522c:	4b29      	ldr	r3, [pc, #164]	; (4052d4 <__register_exitproc+0xbc>)
  40522e:	681c      	ldr	r4, [r3, #0]
  405230:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405234:	2b00      	cmp	r3, #0
  405236:	d03e      	beq.n	4052b6 <__register_exitproc+0x9e>
  405238:	685a      	ldr	r2, [r3, #4]
  40523a:	2a1f      	cmp	r2, #31
  40523c:	dc1c      	bgt.n	405278 <__register_exitproc+0x60>
  40523e:	f102 0e01 	add.w	lr, r2, #1
  405242:	b176      	cbz	r6, 405262 <__register_exitproc+0x4a>
  405244:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405248:	2401      	movs	r4, #1
  40524a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40524e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405252:	4094      	lsls	r4, r2
  405254:	4320      	orrs	r0, r4
  405256:	2e02      	cmp	r6, #2
  405258:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40525c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405260:	d023      	beq.n	4052aa <__register_exitproc+0x92>
  405262:	3202      	adds	r2, #2
  405264:	f8c3 e004 	str.w	lr, [r3, #4]
  405268:	6828      	ldr	r0, [r5, #0]
  40526a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40526e:	f7ff f80f 	bl	404290 <__retarget_lock_release_recursive>
  405272:	2000      	movs	r0, #0
  405274:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405278:	4b17      	ldr	r3, [pc, #92]	; (4052d8 <__register_exitproc+0xc0>)
  40527a:	b30b      	cbz	r3, 4052c0 <__register_exitproc+0xa8>
  40527c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405280:	f3af 8000 	nop.w
  405284:	4603      	mov	r3, r0
  405286:	b1d8      	cbz	r0, 4052c0 <__register_exitproc+0xa8>
  405288:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40528c:	6002      	str	r2, [r0, #0]
  40528e:	2100      	movs	r1, #0
  405290:	6041      	str	r1, [r0, #4]
  405292:	460a      	mov	r2, r1
  405294:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405298:	f04f 0e01 	mov.w	lr, #1
  40529c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4052a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4052a4:	2e00      	cmp	r6, #0
  4052a6:	d0dc      	beq.n	405262 <__register_exitproc+0x4a>
  4052a8:	e7cc      	b.n	405244 <__register_exitproc+0x2c>
  4052aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4052ae:	430c      	orrs	r4, r1
  4052b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4052b4:	e7d5      	b.n	405262 <__register_exitproc+0x4a>
  4052b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4052ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4052be:	e7bb      	b.n	405238 <__register_exitproc+0x20>
  4052c0:	6828      	ldr	r0, [r5, #0]
  4052c2:	f7fe ffe5 	bl	404290 <__retarget_lock_release_recursive>
  4052c6:	f04f 30ff 	mov.w	r0, #4294967295
  4052ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4052ce:	bf00      	nop
  4052d0:	20400450 	.word	0x20400450
  4052d4:	00406d78 	.word	0x00406d78
  4052d8:	00000000 	.word	0x00000000

004052dc <_calloc_r>:
  4052dc:	b510      	push	{r4, lr}
  4052de:	fb02 f101 	mul.w	r1, r2, r1
  4052e2:	f7fe ffd7 	bl	404294 <_malloc_r>
  4052e6:	4604      	mov	r4, r0
  4052e8:	b1d8      	cbz	r0, 405322 <_calloc_r+0x46>
  4052ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4052ee:	f022 0203 	bic.w	r2, r2, #3
  4052f2:	3a04      	subs	r2, #4
  4052f4:	2a24      	cmp	r2, #36	; 0x24
  4052f6:	d818      	bhi.n	40532a <_calloc_r+0x4e>
  4052f8:	2a13      	cmp	r2, #19
  4052fa:	d914      	bls.n	405326 <_calloc_r+0x4a>
  4052fc:	2300      	movs	r3, #0
  4052fe:	2a1b      	cmp	r2, #27
  405300:	6003      	str	r3, [r0, #0]
  405302:	6043      	str	r3, [r0, #4]
  405304:	d916      	bls.n	405334 <_calloc_r+0x58>
  405306:	2a24      	cmp	r2, #36	; 0x24
  405308:	6083      	str	r3, [r0, #8]
  40530a:	60c3      	str	r3, [r0, #12]
  40530c:	bf11      	iteee	ne
  40530e:	f100 0210 	addne.w	r2, r0, #16
  405312:	6103      	streq	r3, [r0, #16]
  405314:	6143      	streq	r3, [r0, #20]
  405316:	f100 0218 	addeq.w	r2, r0, #24
  40531a:	2300      	movs	r3, #0
  40531c:	6013      	str	r3, [r2, #0]
  40531e:	6053      	str	r3, [r2, #4]
  405320:	6093      	str	r3, [r2, #8]
  405322:	4620      	mov	r0, r4
  405324:	bd10      	pop	{r4, pc}
  405326:	4602      	mov	r2, r0
  405328:	e7f7      	b.n	40531a <_calloc_r+0x3e>
  40532a:	2100      	movs	r1, #0
  40532c:	f7fc fd16 	bl	401d5c <memset>
  405330:	4620      	mov	r0, r4
  405332:	bd10      	pop	{r4, pc}
  405334:	f100 0208 	add.w	r2, r0, #8
  405338:	e7ef      	b.n	40531a <_calloc_r+0x3e>
  40533a:	bf00      	nop

0040533c <_malloc_trim_r>:
  40533c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40533e:	4f24      	ldr	r7, [pc, #144]	; (4053d0 <_malloc_trim_r+0x94>)
  405340:	460c      	mov	r4, r1
  405342:	4606      	mov	r6, r0
  405344:	f7ff fb46 	bl	4049d4 <__malloc_lock>
  405348:	68bb      	ldr	r3, [r7, #8]
  40534a:	685d      	ldr	r5, [r3, #4]
  40534c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405350:	310f      	adds	r1, #15
  405352:	f025 0503 	bic.w	r5, r5, #3
  405356:	4429      	add	r1, r5
  405358:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40535c:	f021 010f 	bic.w	r1, r1, #15
  405360:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405364:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405368:	db07      	blt.n	40537a <_malloc_trim_r+0x3e>
  40536a:	2100      	movs	r1, #0
  40536c:	4630      	mov	r0, r6
  40536e:	f7ff fe37 	bl	404fe0 <_sbrk_r>
  405372:	68bb      	ldr	r3, [r7, #8]
  405374:	442b      	add	r3, r5
  405376:	4298      	cmp	r0, r3
  405378:	d004      	beq.n	405384 <_malloc_trim_r+0x48>
  40537a:	4630      	mov	r0, r6
  40537c:	f7ff fb30 	bl	4049e0 <__malloc_unlock>
  405380:	2000      	movs	r0, #0
  405382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405384:	4261      	negs	r1, r4
  405386:	4630      	mov	r0, r6
  405388:	f7ff fe2a 	bl	404fe0 <_sbrk_r>
  40538c:	3001      	adds	r0, #1
  40538e:	d00d      	beq.n	4053ac <_malloc_trim_r+0x70>
  405390:	4b10      	ldr	r3, [pc, #64]	; (4053d4 <_malloc_trim_r+0x98>)
  405392:	68ba      	ldr	r2, [r7, #8]
  405394:	6819      	ldr	r1, [r3, #0]
  405396:	1b2d      	subs	r5, r5, r4
  405398:	f045 0501 	orr.w	r5, r5, #1
  40539c:	4630      	mov	r0, r6
  40539e:	1b09      	subs	r1, r1, r4
  4053a0:	6055      	str	r5, [r2, #4]
  4053a2:	6019      	str	r1, [r3, #0]
  4053a4:	f7ff fb1c 	bl	4049e0 <__malloc_unlock>
  4053a8:	2001      	movs	r0, #1
  4053aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053ac:	2100      	movs	r1, #0
  4053ae:	4630      	mov	r0, r6
  4053b0:	f7ff fe16 	bl	404fe0 <_sbrk_r>
  4053b4:	68ba      	ldr	r2, [r7, #8]
  4053b6:	1a83      	subs	r3, r0, r2
  4053b8:	2b0f      	cmp	r3, #15
  4053ba:	ddde      	ble.n	40537a <_malloc_trim_r+0x3e>
  4053bc:	4c06      	ldr	r4, [pc, #24]	; (4053d8 <_malloc_trim_r+0x9c>)
  4053be:	4905      	ldr	r1, [pc, #20]	; (4053d4 <_malloc_trim_r+0x98>)
  4053c0:	6824      	ldr	r4, [r4, #0]
  4053c2:	f043 0301 	orr.w	r3, r3, #1
  4053c6:	1b00      	subs	r0, r0, r4
  4053c8:	6053      	str	r3, [r2, #4]
  4053ca:	6008      	str	r0, [r1, #0]
  4053cc:	e7d5      	b.n	40537a <_malloc_trim_r+0x3e>
  4053ce:	bf00      	nop
  4053d0:	20400454 	.word	0x20400454
  4053d4:	20400c7c 	.word	0x20400c7c
  4053d8:	2040085c 	.word	0x2040085c

004053dc <_free_r>:
  4053dc:	2900      	cmp	r1, #0
  4053de:	d044      	beq.n	40546a <_free_r+0x8e>
  4053e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4053e4:	460d      	mov	r5, r1
  4053e6:	4680      	mov	r8, r0
  4053e8:	f7ff faf4 	bl	4049d4 <__malloc_lock>
  4053ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4053f0:	4969      	ldr	r1, [pc, #420]	; (405598 <_free_r+0x1bc>)
  4053f2:	f027 0301 	bic.w	r3, r7, #1
  4053f6:	f1a5 0408 	sub.w	r4, r5, #8
  4053fa:	18e2      	adds	r2, r4, r3
  4053fc:	688e      	ldr	r6, [r1, #8]
  4053fe:	6850      	ldr	r0, [r2, #4]
  405400:	42b2      	cmp	r2, r6
  405402:	f020 0003 	bic.w	r0, r0, #3
  405406:	d05e      	beq.n	4054c6 <_free_r+0xea>
  405408:	07fe      	lsls	r6, r7, #31
  40540a:	6050      	str	r0, [r2, #4]
  40540c:	d40b      	bmi.n	405426 <_free_r+0x4a>
  40540e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405412:	1be4      	subs	r4, r4, r7
  405414:	f101 0e08 	add.w	lr, r1, #8
  405418:	68a5      	ldr	r5, [r4, #8]
  40541a:	4575      	cmp	r5, lr
  40541c:	443b      	add	r3, r7
  40541e:	d06d      	beq.n	4054fc <_free_r+0x120>
  405420:	68e7      	ldr	r7, [r4, #12]
  405422:	60ef      	str	r7, [r5, #12]
  405424:	60bd      	str	r5, [r7, #8]
  405426:	1815      	adds	r5, r2, r0
  405428:	686d      	ldr	r5, [r5, #4]
  40542a:	07ed      	lsls	r5, r5, #31
  40542c:	d53e      	bpl.n	4054ac <_free_r+0xd0>
  40542e:	f043 0201 	orr.w	r2, r3, #1
  405432:	6062      	str	r2, [r4, #4]
  405434:	50e3      	str	r3, [r4, r3]
  405436:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40543a:	d217      	bcs.n	40546c <_free_r+0x90>
  40543c:	08db      	lsrs	r3, r3, #3
  40543e:	1c58      	adds	r0, r3, #1
  405440:	109a      	asrs	r2, r3, #2
  405442:	684d      	ldr	r5, [r1, #4]
  405444:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405448:	60a7      	str	r7, [r4, #8]
  40544a:	2301      	movs	r3, #1
  40544c:	4093      	lsls	r3, r2
  40544e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405452:	432b      	orrs	r3, r5
  405454:	3a08      	subs	r2, #8
  405456:	60e2      	str	r2, [r4, #12]
  405458:	604b      	str	r3, [r1, #4]
  40545a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40545e:	60fc      	str	r4, [r7, #12]
  405460:	4640      	mov	r0, r8
  405462:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405466:	f7ff babb 	b.w	4049e0 <__malloc_unlock>
  40546a:	4770      	bx	lr
  40546c:	0a5a      	lsrs	r2, r3, #9
  40546e:	2a04      	cmp	r2, #4
  405470:	d852      	bhi.n	405518 <_free_r+0x13c>
  405472:	099a      	lsrs	r2, r3, #6
  405474:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405478:	00ff      	lsls	r7, r7, #3
  40547a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40547e:	19c8      	adds	r0, r1, r7
  405480:	59ca      	ldr	r2, [r1, r7]
  405482:	3808      	subs	r0, #8
  405484:	4290      	cmp	r0, r2
  405486:	d04f      	beq.n	405528 <_free_r+0x14c>
  405488:	6851      	ldr	r1, [r2, #4]
  40548a:	f021 0103 	bic.w	r1, r1, #3
  40548e:	428b      	cmp	r3, r1
  405490:	d232      	bcs.n	4054f8 <_free_r+0x11c>
  405492:	6892      	ldr	r2, [r2, #8]
  405494:	4290      	cmp	r0, r2
  405496:	d1f7      	bne.n	405488 <_free_r+0xac>
  405498:	68c3      	ldr	r3, [r0, #12]
  40549a:	60a0      	str	r0, [r4, #8]
  40549c:	60e3      	str	r3, [r4, #12]
  40549e:	609c      	str	r4, [r3, #8]
  4054a0:	60c4      	str	r4, [r0, #12]
  4054a2:	4640      	mov	r0, r8
  4054a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4054a8:	f7ff ba9a 	b.w	4049e0 <__malloc_unlock>
  4054ac:	6895      	ldr	r5, [r2, #8]
  4054ae:	4f3b      	ldr	r7, [pc, #236]	; (40559c <_free_r+0x1c0>)
  4054b0:	42bd      	cmp	r5, r7
  4054b2:	4403      	add	r3, r0
  4054b4:	d040      	beq.n	405538 <_free_r+0x15c>
  4054b6:	68d0      	ldr	r0, [r2, #12]
  4054b8:	60e8      	str	r0, [r5, #12]
  4054ba:	f043 0201 	orr.w	r2, r3, #1
  4054be:	6085      	str	r5, [r0, #8]
  4054c0:	6062      	str	r2, [r4, #4]
  4054c2:	50e3      	str	r3, [r4, r3]
  4054c4:	e7b7      	b.n	405436 <_free_r+0x5a>
  4054c6:	07ff      	lsls	r7, r7, #31
  4054c8:	4403      	add	r3, r0
  4054ca:	d407      	bmi.n	4054dc <_free_r+0x100>
  4054cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4054d0:	1aa4      	subs	r4, r4, r2
  4054d2:	4413      	add	r3, r2
  4054d4:	68a0      	ldr	r0, [r4, #8]
  4054d6:	68e2      	ldr	r2, [r4, #12]
  4054d8:	60c2      	str	r2, [r0, #12]
  4054da:	6090      	str	r0, [r2, #8]
  4054dc:	4a30      	ldr	r2, [pc, #192]	; (4055a0 <_free_r+0x1c4>)
  4054de:	6812      	ldr	r2, [r2, #0]
  4054e0:	f043 0001 	orr.w	r0, r3, #1
  4054e4:	4293      	cmp	r3, r2
  4054e6:	6060      	str	r0, [r4, #4]
  4054e8:	608c      	str	r4, [r1, #8]
  4054ea:	d3b9      	bcc.n	405460 <_free_r+0x84>
  4054ec:	4b2d      	ldr	r3, [pc, #180]	; (4055a4 <_free_r+0x1c8>)
  4054ee:	4640      	mov	r0, r8
  4054f0:	6819      	ldr	r1, [r3, #0]
  4054f2:	f7ff ff23 	bl	40533c <_malloc_trim_r>
  4054f6:	e7b3      	b.n	405460 <_free_r+0x84>
  4054f8:	4610      	mov	r0, r2
  4054fa:	e7cd      	b.n	405498 <_free_r+0xbc>
  4054fc:	1811      	adds	r1, r2, r0
  4054fe:	6849      	ldr	r1, [r1, #4]
  405500:	07c9      	lsls	r1, r1, #31
  405502:	d444      	bmi.n	40558e <_free_r+0x1b2>
  405504:	6891      	ldr	r1, [r2, #8]
  405506:	68d2      	ldr	r2, [r2, #12]
  405508:	60ca      	str	r2, [r1, #12]
  40550a:	4403      	add	r3, r0
  40550c:	f043 0001 	orr.w	r0, r3, #1
  405510:	6091      	str	r1, [r2, #8]
  405512:	6060      	str	r0, [r4, #4]
  405514:	50e3      	str	r3, [r4, r3]
  405516:	e7a3      	b.n	405460 <_free_r+0x84>
  405518:	2a14      	cmp	r2, #20
  40551a:	d816      	bhi.n	40554a <_free_r+0x16e>
  40551c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405520:	00ff      	lsls	r7, r7, #3
  405522:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405526:	e7aa      	b.n	40547e <_free_r+0xa2>
  405528:	10aa      	asrs	r2, r5, #2
  40552a:	2301      	movs	r3, #1
  40552c:	684d      	ldr	r5, [r1, #4]
  40552e:	4093      	lsls	r3, r2
  405530:	432b      	orrs	r3, r5
  405532:	604b      	str	r3, [r1, #4]
  405534:	4603      	mov	r3, r0
  405536:	e7b0      	b.n	40549a <_free_r+0xbe>
  405538:	f043 0201 	orr.w	r2, r3, #1
  40553c:	614c      	str	r4, [r1, #20]
  40553e:	610c      	str	r4, [r1, #16]
  405540:	60e5      	str	r5, [r4, #12]
  405542:	60a5      	str	r5, [r4, #8]
  405544:	6062      	str	r2, [r4, #4]
  405546:	50e3      	str	r3, [r4, r3]
  405548:	e78a      	b.n	405460 <_free_r+0x84>
  40554a:	2a54      	cmp	r2, #84	; 0x54
  40554c:	d806      	bhi.n	40555c <_free_r+0x180>
  40554e:	0b1a      	lsrs	r2, r3, #12
  405550:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405554:	00ff      	lsls	r7, r7, #3
  405556:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40555a:	e790      	b.n	40547e <_free_r+0xa2>
  40555c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405560:	d806      	bhi.n	405570 <_free_r+0x194>
  405562:	0bda      	lsrs	r2, r3, #15
  405564:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405568:	00ff      	lsls	r7, r7, #3
  40556a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40556e:	e786      	b.n	40547e <_free_r+0xa2>
  405570:	f240 5054 	movw	r0, #1364	; 0x554
  405574:	4282      	cmp	r2, r0
  405576:	d806      	bhi.n	405586 <_free_r+0x1aa>
  405578:	0c9a      	lsrs	r2, r3, #18
  40557a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40557e:	00ff      	lsls	r7, r7, #3
  405580:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405584:	e77b      	b.n	40547e <_free_r+0xa2>
  405586:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40558a:	257e      	movs	r5, #126	; 0x7e
  40558c:	e777      	b.n	40547e <_free_r+0xa2>
  40558e:	f043 0101 	orr.w	r1, r3, #1
  405592:	6061      	str	r1, [r4, #4]
  405594:	6013      	str	r3, [r2, #0]
  405596:	e763      	b.n	405460 <_free_r+0x84>
  405598:	20400454 	.word	0x20400454
  40559c:	2040045c 	.word	0x2040045c
  4055a0:	20400860 	.word	0x20400860
  4055a4:	20400cac 	.word	0x20400cac

004055a8 <__ascii_mbtowc>:
  4055a8:	b082      	sub	sp, #8
  4055aa:	b149      	cbz	r1, 4055c0 <__ascii_mbtowc+0x18>
  4055ac:	b15a      	cbz	r2, 4055c6 <__ascii_mbtowc+0x1e>
  4055ae:	b16b      	cbz	r3, 4055cc <__ascii_mbtowc+0x24>
  4055b0:	7813      	ldrb	r3, [r2, #0]
  4055b2:	600b      	str	r3, [r1, #0]
  4055b4:	7812      	ldrb	r2, [r2, #0]
  4055b6:	1c10      	adds	r0, r2, #0
  4055b8:	bf18      	it	ne
  4055ba:	2001      	movne	r0, #1
  4055bc:	b002      	add	sp, #8
  4055be:	4770      	bx	lr
  4055c0:	a901      	add	r1, sp, #4
  4055c2:	2a00      	cmp	r2, #0
  4055c4:	d1f3      	bne.n	4055ae <__ascii_mbtowc+0x6>
  4055c6:	4610      	mov	r0, r2
  4055c8:	b002      	add	sp, #8
  4055ca:	4770      	bx	lr
  4055cc:	f06f 0001 	mvn.w	r0, #1
  4055d0:	e7f4      	b.n	4055bc <__ascii_mbtowc+0x14>
  4055d2:	bf00      	nop

004055d4 <memmove>:
  4055d4:	4288      	cmp	r0, r1
  4055d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4055d8:	d90d      	bls.n	4055f6 <memmove+0x22>
  4055da:	188b      	adds	r3, r1, r2
  4055dc:	4298      	cmp	r0, r3
  4055de:	d20a      	bcs.n	4055f6 <memmove+0x22>
  4055e0:	1884      	adds	r4, r0, r2
  4055e2:	2a00      	cmp	r2, #0
  4055e4:	d051      	beq.n	40568a <memmove+0xb6>
  4055e6:	4622      	mov	r2, r4
  4055e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4055ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4055f0:	4299      	cmp	r1, r3
  4055f2:	d1f9      	bne.n	4055e8 <memmove+0x14>
  4055f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4055f6:	2a0f      	cmp	r2, #15
  4055f8:	d948      	bls.n	40568c <memmove+0xb8>
  4055fa:	ea41 0300 	orr.w	r3, r1, r0
  4055fe:	079b      	lsls	r3, r3, #30
  405600:	d146      	bne.n	405690 <memmove+0xbc>
  405602:	f100 0410 	add.w	r4, r0, #16
  405606:	f101 0310 	add.w	r3, r1, #16
  40560a:	4615      	mov	r5, r2
  40560c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405610:	f844 6c10 	str.w	r6, [r4, #-16]
  405614:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405618:	f844 6c0c 	str.w	r6, [r4, #-12]
  40561c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405620:	f844 6c08 	str.w	r6, [r4, #-8]
  405624:	3d10      	subs	r5, #16
  405626:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40562a:	f844 6c04 	str.w	r6, [r4, #-4]
  40562e:	2d0f      	cmp	r5, #15
  405630:	f103 0310 	add.w	r3, r3, #16
  405634:	f104 0410 	add.w	r4, r4, #16
  405638:	d8e8      	bhi.n	40560c <memmove+0x38>
  40563a:	f1a2 0310 	sub.w	r3, r2, #16
  40563e:	f023 030f 	bic.w	r3, r3, #15
  405642:	f002 0e0f 	and.w	lr, r2, #15
  405646:	3310      	adds	r3, #16
  405648:	f1be 0f03 	cmp.w	lr, #3
  40564c:	4419      	add	r1, r3
  40564e:	4403      	add	r3, r0
  405650:	d921      	bls.n	405696 <memmove+0xc2>
  405652:	1f1e      	subs	r6, r3, #4
  405654:	460d      	mov	r5, r1
  405656:	4674      	mov	r4, lr
  405658:	3c04      	subs	r4, #4
  40565a:	f855 7b04 	ldr.w	r7, [r5], #4
  40565e:	f846 7f04 	str.w	r7, [r6, #4]!
  405662:	2c03      	cmp	r4, #3
  405664:	d8f8      	bhi.n	405658 <memmove+0x84>
  405666:	f1ae 0404 	sub.w	r4, lr, #4
  40566a:	f024 0403 	bic.w	r4, r4, #3
  40566e:	3404      	adds	r4, #4
  405670:	4421      	add	r1, r4
  405672:	4423      	add	r3, r4
  405674:	f002 0203 	and.w	r2, r2, #3
  405678:	b162      	cbz	r2, 405694 <memmove+0xc0>
  40567a:	3b01      	subs	r3, #1
  40567c:	440a      	add	r2, r1
  40567e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405682:	f803 4f01 	strb.w	r4, [r3, #1]!
  405686:	428a      	cmp	r2, r1
  405688:	d1f9      	bne.n	40567e <memmove+0xaa>
  40568a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40568c:	4603      	mov	r3, r0
  40568e:	e7f3      	b.n	405678 <memmove+0xa4>
  405690:	4603      	mov	r3, r0
  405692:	e7f2      	b.n	40567a <memmove+0xa6>
  405694:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405696:	4672      	mov	r2, lr
  405698:	e7ee      	b.n	405678 <memmove+0xa4>
  40569a:	bf00      	nop

0040569c <_realloc_r>:
  40569c:	2900      	cmp	r1, #0
  40569e:	f000 8095 	beq.w	4057cc <_realloc_r+0x130>
  4056a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056a6:	460d      	mov	r5, r1
  4056a8:	4616      	mov	r6, r2
  4056aa:	b083      	sub	sp, #12
  4056ac:	4680      	mov	r8, r0
  4056ae:	f106 070b 	add.w	r7, r6, #11
  4056b2:	f7ff f98f 	bl	4049d4 <__malloc_lock>
  4056b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4056ba:	2f16      	cmp	r7, #22
  4056bc:	f02e 0403 	bic.w	r4, lr, #3
  4056c0:	f1a5 0908 	sub.w	r9, r5, #8
  4056c4:	d83c      	bhi.n	405740 <_realloc_r+0xa4>
  4056c6:	2210      	movs	r2, #16
  4056c8:	4617      	mov	r7, r2
  4056ca:	42be      	cmp	r6, r7
  4056cc:	d83d      	bhi.n	40574a <_realloc_r+0xae>
  4056ce:	4294      	cmp	r4, r2
  4056d0:	da43      	bge.n	40575a <_realloc_r+0xbe>
  4056d2:	4bc4      	ldr	r3, [pc, #784]	; (4059e4 <_realloc_r+0x348>)
  4056d4:	6899      	ldr	r1, [r3, #8]
  4056d6:	eb09 0004 	add.w	r0, r9, r4
  4056da:	4288      	cmp	r0, r1
  4056dc:	f000 80b4 	beq.w	405848 <_realloc_r+0x1ac>
  4056e0:	6843      	ldr	r3, [r0, #4]
  4056e2:	f023 0101 	bic.w	r1, r3, #1
  4056e6:	4401      	add	r1, r0
  4056e8:	6849      	ldr	r1, [r1, #4]
  4056ea:	07c9      	lsls	r1, r1, #31
  4056ec:	d54c      	bpl.n	405788 <_realloc_r+0xec>
  4056ee:	f01e 0f01 	tst.w	lr, #1
  4056f2:	f000 809b 	beq.w	40582c <_realloc_r+0x190>
  4056f6:	4631      	mov	r1, r6
  4056f8:	4640      	mov	r0, r8
  4056fa:	f7fe fdcb 	bl	404294 <_malloc_r>
  4056fe:	4606      	mov	r6, r0
  405700:	2800      	cmp	r0, #0
  405702:	d03a      	beq.n	40577a <_realloc_r+0xde>
  405704:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405708:	f023 0301 	bic.w	r3, r3, #1
  40570c:	444b      	add	r3, r9
  40570e:	f1a0 0208 	sub.w	r2, r0, #8
  405712:	429a      	cmp	r2, r3
  405714:	f000 8121 	beq.w	40595a <_realloc_r+0x2be>
  405718:	1f22      	subs	r2, r4, #4
  40571a:	2a24      	cmp	r2, #36	; 0x24
  40571c:	f200 8107 	bhi.w	40592e <_realloc_r+0x292>
  405720:	2a13      	cmp	r2, #19
  405722:	f200 80db 	bhi.w	4058dc <_realloc_r+0x240>
  405726:	4603      	mov	r3, r0
  405728:	462a      	mov	r2, r5
  40572a:	6811      	ldr	r1, [r2, #0]
  40572c:	6019      	str	r1, [r3, #0]
  40572e:	6851      	ldr	r1, [r2, #4]
  405730:	6059      	str	r1, [r3, #4]
  405732:	6892      	ldr	r2, [r2, #8]
  405734:	609a      	str	r2, [r3, #8]
  405736:	4629      	mov	r1, r5
  405738:	4640      	mov	r0, r8
  40573a:	f7ff fe4f 	bl	4053dc <_free_r>
  40573e:	e01c      	b.n	40577a <_realloc_r+0xde>
  405740:	f027 0707 	bic.w	r7, r7, #7
  405744:	2f00      	cmp	r7, #0
  405746:	463a      	mov	r2, r7
  405748:	dabf      	bge.n	4056ca <_realloc_r+0x2e>
  40574a:	2600      	movs	r6, #0
  40574c:	230c      	movs	r3, #12
  40574e:	4630      	mov	r0, r6
  405750:	f8c8 3000 	str.w	r3, [r8]
  405754:	b003      	add	sp, #12
  405756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40575a:	462e      	mov	r6, r5
  40575c:	1be3      	subs	r3, r4, r7
  40575e:	2b0f      	cmp	r3, #15
  405760:	d81e      	bhi.n	4057a0 <_realloc_r+0x104>
  405762:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405766:	f003 0301 	and.w	r3, r3, #1
  40576a:	4323      	orrs	r3, r4
  40576c:	444c      	add	r4, r9
  40576e:	f8c9 3004 	str.w	r3, [r9, #4]
  405772:	6863      	ldr	r3, [r4, #4]
  405774:	f043 0301 	orr.w	r3, r3, #1
  405778:	6063      	str	r3, [r4, #4]
  40577a:	4640      	mov	r0, r8
  40577c:	f7ff f930 	bl	4049e0 <__malloc_unlock>
  405780:	4630      	mov	r0, r6
  405782:	b003      	add	sp, #12
  405784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405788:	f023 0303 	bic.w	r3, r3, #3
  40578c:	18e1      	adds	r1, r4, r3
  40578e:	4291      	cmp	r1, r2
  405790:	db1f      	blt.n	4057d2 <_realloc_r+0x136>
  405792:	68c3      	ldr	r3, [r0, #12]
  405794:	6882      	ldr	r2, [r0, #8]
  405796:	462e      	mov	r6, r5
  405798:	60d3      	str	r3, [r2, #12]
  40579a:	460c      	mov	r4, r1
  40579c:	609a      	str	r2, [r3, #8]
  40579e:	e7dd      	b.n	40575c <_realloc_r+0xc0>
  4057a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4057a4:	eb09 0107 	add.w	r1, r9, r7
  4057a8:	f002 0201 	and.w	r2, r2, #1
  4057ac:	444c      	add	r4, r9
  4057ae:	f043 0301 	orr.w	r3, r3, #1
  4057b2:	4317      	orrs	r7, r2
  4057b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4057b8:	604b      	str	r3, [r1, #4]
  4057ba:	6863      	ldr	r3, [r4, #4]
  4057bc:	f043 0301 	orr.w	r3, r3, #1
  4057c0:	3108      	adds	r1, #8
  4057c2:	6063      	str	r3, [r4, #4]
  4057c4:	4640      	mov	r0, r8
  4057c6:	f7ff fe09 	bl	4053dc <_free_r>
  4057ca:	e7d6      	b.n	40577a <_realloc_r+0xde>
  4057cc:	4611      	mov	r1, r2
  4057ce:	f7fe bd61 	b.w	404294 <_malloc_r>
  4057d2:	f01e 0f01 	tst.w	lr, #1
  4057d6:	d18e      	bne.n	4056f6 <_realloc_r+0x5a>
  4057d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4057dc:	eba9 0a01 	sub.w	sl, r9, r1
  4057e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4057e4:	f021 0103 	bic.w	r1, r1, #3
  4057e8:	440b      	add	r3, r1
  4057ea:	4423      	add	r3, r4
  4057ec:	4293      	cmp	r3, r2
  4057ee:	db25      	blt.n	40583c <_realloc_r+0x1a0>
  4057f0:	68c2      	ldr	r2, [r0, #12]
  4057f2:	6881      	ldr	r1, [r0, #8]
  4057f4:	4656      	mov	r6, sl
  4057f6:	60ca      	str	r2, [r1, #12]
  4057f8:	6091      	str	r1, [r2, #8]
  4057fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4057fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405802:	1f22      	subs	r2, r4, #4
  405804:	2a24      	cmp	r2, #36	; 0x24
  405806:	60c1      	str	r1, [r0, #12]
  405808:	6088      	str	r0, [r1, #8]
  40580a:	f200 8094 	bhi.w	405936 <_realloc_r+0x29a>
  40580e:	2a13      	cmp	r2, #19
  405810:	d96f      	bls.n	4058f2 <_realloc_r+0x256>
  405812:	6829      	ldr	r1, [r5, #0]
  405814:	f8ca 1008 	str.w	r1, [sl, #8]
  405818:	6869      	ldr	r1, [r5, #4]
  40581a:	f8ca 100c 	str.w	r1, [sl, #12]
  40581e:	2a1b      	cmp	r2, #27
  405820:	f200 80a2 	bhi.w	405968 <_realloc_r+0x2cc>
  405824:	3508      	adds	r5, #8
  405826:	f10a 0210 	add.w	r2, sl, #16
  40582a:	e063      	b.n	4058f4 <_realloc_r+0x258>
  40582c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405830:	eba9 0a03 	sub.w	sl, r9, r3
  405834:	f8da 1004 	ldr.w	r1, [sl, #4]
  405838:	f021 0103 	bic.w	r1, r1, #3
  40583c:	1863      	adds	r3, r4, r1
  40583e:	4293      	cmp	r3, r2
  405840:	f6ff af59 	blt.w	4056f6 <_realloc_r+0x5a>
  405844:	4656      	mov	r6, sl
  405846:	e7d8      	b.n	4057fa <_realloc_r+0x15e>
  405848:	6841      	ldr	r1, [r0, #4]
  40584a:	f021 0b03 	bic.w	fp, r1, #3
  40584e:	44a3      	add	fp, r4
  405850:	f107 0010 	add.w	r0, r7, #16
  405854:	4583      	cmp	fp, r0
  405856:	da56      	bge.n	405906 <_realloc_r+0x26a>
  405858:	f01e 0f01 	tst.w	lr, #1
  40585c:	f47f af4b 	bne.w	4056f6 <_realloc_r+0x5a>
  405860:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405864:	eba9 0a01 	sub.w	sl, r9, r1
  405868:	f8da 1004 	ldr.w	r1, [sl, #4]
  40586c:	f021 0103 	bic.w	r1, r1, #3
  405870:	448b      	add	fp, r1
  405872:	4558      	cmp	r0, fp
  405874:	dce2      	bgt.n	40583c <_realloc_r+0x1a0>
  405876:	4656      	mov	r6, sl
  405878:	f8da 100c 	ldr.w	r1, [sl, #12]
  40587c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405880:	1f22      	subs	r2, r4, #4
  405882:	2a24      	cmp	r2, #36	; 0x24
  405884:	60c1      	str	r1, [r0, #12]
  405886:	6088      	str	r0, [r1, #8]
  405888:	f200 808f 	bhi.w	4059aa <_realloc_r+0x30e>
  40588c:	2a13      	cmp	r2, #19
  40588e:	f240 808a 	bls.w	4059a6 <_realloc_r+0x30a>
  405892:	6829      	ldr	r1, [r5, #0]
  405894:	f8ca 1008 	str.w	r1, [sl, #8]
  405898:	6869      	ldr	r1, [r5, #4]
  40589a:	f8ca 100c 	str.w	r1, [sl, #12]
  40589e:	2a1b      	cmp	r2, #27
  4058a0:	f200 808a 	bhi.w	4059b8 <_realloc_r+0x31c>
  4058a4:	3508      	adds	r5, #8
  4058a6:	f10a 0210 	add.w	r2, sl, #16
  4058aa:	6829      	ldr	r1, [r5, #0]
  4058ac:	6011      	str	r1, [r2, #0]
  4058ae:	6869      	ldr	r1, [r5, #4]
  4058b0:	6051      	str	r1, [r2, #4]
  4058b2:	68a9      	ldr	r1, [r5, #8]
  4058b4:	6091      	str	r1, [r2, #8]
  4058b6:	eb0a 0107 	add.w	r1, sl, r7
  4058ba:	ebab 0207 	sub.w	r2, fp, r7
  4058be:	f042 0201 	orr.w	r2, r2, #1
  4058c2:	6099      	str	r1, [r3, #8]
  4058c4:	604a      	str	r2, [r1, #4]
  4058c6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4058ca:	f003 0301 	and.w	r3, r3, #1
  4058ce:	431f      	orrs	r7, r3
  4058d0:	4640      	mov	r0, r8
  4058d2:	f8ca 7004 	str.w	r7, [sl, #4]
  4058d6:	f7ff f883 	bl	4049e0 <__malloc_unlock>
  4058da:	e751      	b.n	405780 <_realloc_r+0xe4>
  4058dc:	682b      	ldr	r3, [r5, #0]
  4058de:	6003      	str	r3, [r0, #0]
  4058e0:	686b      	ldr	r3, [r5, #4]
  4058e2:	6043      	str	r3, [r0, #4]
  4058e4:	2a1b      	cmp	r2, #27
  4058e6:	d82d      	bhi.n	405944 <_realloc_r+0x2a8>
  4058e8:	f100 0308 	add.w	r3, r0, #8
  4058ec:	f105 0208 	add.w	r2, r5, #8
  4058f0:	e71b      	b.n	40572a <_realloc_r+0x8e>
  4058f2:	4632      	mov	r2, r6
  4058f4:	6829      	ldr	r1, [r5, #0]
  4058f6:	6011      	str	r1, [r2, #0]
  4058f8:	6869      	ldr	r1, [r5, #4]
  4058fa:	6051      	str	r1, [r2, #4]
  4058fc:	68a9      	ldr	r1, [r5, #8]
  4058fe:	6091      	str	r1, [r2, #8]
  405900:	461c      	mov	r4, r3
  405902:	46d1      	mov	r9, sl
  405904:	e72a      	b.n	40575c <_realloc_r+0xc0>
  405906:	eb09 0107 	add.w	r1, r9, r7
  40590a:	ebab 0b07 	sub.w	fp, fp, r7
  40590e:	f04b 0201 	orr.w	r2, fp, #1
  405912:	6099      	str	r1, [r3, #8]
  405914:	604a      	str	r2, [r1, #4]
  405916:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40591a:	f003 0301 	and.w	r3, r3, #1
  40591e:	431f      	orrs	r7, r3
  405920:	4640      	mov	r0, r8
  405922:	f845 7c04 	str.w	r7, [r5, #-4]
  405926:	f7ff f85b 	bl	4049e0 <__malloc_unlock>
  40592a:	462e      	mov	r6, r5
  40592c:	e728      	b.n	405780 <_realloc_r+0xe4>
  40592e:	4629      	mov	r1, r5
  405930:	f7ff fe50 	bl	4055d4 <memmove>
  405934:	e6ff      	b.n	405736 <_realloc_r+0x9a>
  405936:	4629      	mov	r1, r5
  405938:	4630      	mov	r0, r6
  40593a:	461c      	mov	r4, r3
  40593c:	46d1      	mov	r9, sl
  40593e:	f7ff fe49 	bl	4055d4 <memmove>
  405942:	e70b      	b.n	40575c <_realloc_r+0xc0>
  405944:	68ab      	ldr	r3, [r5, #8]
  405946:	6083      	str	r3, [r0, #8]
  405948:	68eb      	ldr	r3, [r5, #12]
  40594a:	60c3      	str	r3, [r0, #12]
  40594c:	2a24      	cmp	r2, #36	; 0x24
  40594e:	d017      	beq.n	405980 <_realloc_r+0x2e4>
  405950:	f100 0310 	add.w	r3, r0, #16
  405954:	f105 0210 	add.w	r2, r5, #16
  405958:	e6e7      	b.n	40572a <_realloc_r+0x8e>
  40595a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40595e:	f023 0303 	bic.w	r3, r3, #3
  405962:	441c      	add	r4, r3
  405964:	462e      	mov	r6, r5
  405966:	e6f9      	b.n	40575c <_realloc_r+0xc0>
  405968:	68a9      	ldr	r1, [r5, #8]
  40596a:	f8ca 1010 	str.w	r1, [sl, #16]
  40596e:	68e9      	ldr	r1, [r5, #12]
  405970:	f8ca 1014 	str.w	r1, [sl, #20]
  405974:	2a24      	cmp	r2, #36	; 0x24
  405976:	d00c      	beq.n	405992 <_realloc_r+0x2f6>
  405978:	3510      	adds	r5, #16
  40597a:	f10a 0218 	add.w	r2, sl, #24
  40597e:	e7b9      	b.n	4058f4 <_realloc_r+0x258>
  405980:	692b      	ldr	r3, [r5, #16]
  405982:	6103      	str	r3, [r0, #16]
  405984:	696b      	ldr	r3, [r5, #20]
  405986:	6143      	str	r3, [r0, #20]
  405988:	f105 0218 	add.w	r2, r5, #24
  40598c:	f100 0318 	add.w	r3, r0, #24
  405990:	e6cb      	b.n	40572a <_realloc_r+0x8e>
  405992:	692a      	ldr	r2, [r5, #16]
  405994:	f8ca 2018 	str.w	r2, [sl, #24]
  405998:	696a      	ldr	r2, [r5, #20]
  40599a:	f8ca 201c 	str.w	r2, [sl, #28]
  40599e:	3518      	adds	r5, #24
  4059a0:	f10a 0220 	add.w	r2, sl, #32
  4059a4:	e7a6      	b.n	4058f4 <_realloc_r+0x258>
  4059a6:	4632      	mov	r2, r6
  4059a8:	e77f      	b.n	4058aa <_realloc_r+0x20e>
  4059aa:	4629      	mov	r1, r5
  4059ac:	4630      	mov	r0, r6
  4059ae:	9301      	str	r3, [sp, #4]
  4059b0:	f7ff fe10 	bl	4055d4 <memmove>
  4059b4:	9b01      	ldr	r3, [sp, #4]
  4059b6:	e77e      	b.n	4058b6 <_realloc_r+0x21a>
  4059b8:	68a9      	ldr	r1, [r5, #8]
  4059ba:	f8ca 1010 	str.w	r1, [sl, #16]
  4059be:	68e9      	ldr	r1, [r5, #12]
  4059c0:	f8ca 1014 	str.w	r1, [sl, #20]
  4059c4:	2a24      	cmp	r2, #36	; 0x24
  4059c6:	d003      	beq.n	4059d0 <_realloc_r+0x334>
  4059c8:	3510      	adds	r5, #16
  4059ca:	f10a 0218 	add.w	r2, sl, #24
  4059ce:	e76c      	b.n	4058aa <_realloc_r+0x20e>
  4059d0:	692a      	ldr	r2, [r5, #16]
  4059d2:	f8ca 2018 	str.w	r2, [sl, #24]
  4059d6:	696a      	ldr	r2, [r5, #20]
  4059d8:	f8ca 201c 	str.w	r2, [sl, #28]
  4059dc:	3518      	adds	r5, #24
  4059de:	f10a 0220 	add.w	r2, sl, #32
  4059e2:	e762      	b.n	4058aa <_realloc_r+0x20e>
  4059e4:	20400454 	.word	0x20400454

004059e8 <__ascii_wctomb>:
  4059e8:	b121      	cbz	r1, 4059f4 <__ascii_wctomb+0xc>
  4059ea:	2aff      	cmp	r2, #255	; 0xff
  4059ec:	d804      	bhi.n	4059f8 <__ascii_wctomb+0x10>
  4059ee:	700a      	strb	r2, [r1, #0]
  4059f0:	2001      	movs	r0, #1
  4059f2:	4770      	bx	lr
  4059f4:	4608      	mov	r0, r1
  4059f6:	4770      	bx	lr
  4059f8:	238a      	movs	r3, #138	; 0x8a
  4059fa:	6003      	str	r3, [r0, #0]
  4059fc:	f04f 30ff 	mov.w	r0, #4294967295
  405a00:	4770      	bx	lr
  405a02:	bf00      	nop

00405a04 <__aeabi_drsub>:
  405a04:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405a08:	e002      	b.n	405a10 <__adddf3>
  405a0a:	bf00      	nop

00405a0c <__aeabi_dsub>:
  405a0c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405a10 <__adddf3>:
  405a10:	b530      	push	{r4, r5, lr}
  405a12:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405a16:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405a1a:	ea94 0f05 	teq	r4, r5
  405a1e:	bf08      	it	eq
  405a20:	ea90 0f02 	teqeq	r0, r2
  405a24:	bf1f      	itttt	ne
  405a26:	ea54 0c00 	orrsne.w	ip, r4, r0
  405a2a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405a2e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405a32:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405a36:	f000 80e2 	beq.w	405bfe <__adddf3+0x1ee>
  405a3a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405a3e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405a42:	bfb8      	it	lt
  405a44:	426d      	neglt	r5, r5
  405a46:	dd0c      	ble.n	405a62 <__adddf3+0x52>
  405a48:	442c      	add	r4, r5
  405a4a:	ea80 0202 	eor.w	r2, r0, r2
  405a4e:	ea81 0303 	eor.w	r3, r1, r3
  405a52:	ea82 0000 	eor.w	r0, r2, r0
  405a56:	ea83 0101 	eor.w	r1, r3, r1
  405a5a:	ea80 0202 	eor.w	r2, r0, r2
  405a5e:	ea81 0303 	eor.w	r3, r1, r3
  405a62:	2d36      	cmp	r5, #54	; 0x36
  405a64:	bf88      	it	hi
  405a66:	bd30      	pophi	{r4, r5, pc}
  405a68:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405a6c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405a70:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405a74:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405a78:	d002      	beq.n	405a80 <__adddf3+0x70>
  405a7a:	4240      	negs	r0, r0
  405a7c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405a80:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405a84:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405a88:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405a8c:	d002      	beq.n	405a94 <__adddf3+0x84>
  405a8e:	4252      	negs	r2, r2
  405a90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405a94:	ea94 0f05 	teq	r4, r5
  405a98:	f000 80a7 	beq.w	405bea <__adddf3+0x1da>
  405a9c:	f1a4 0401 	sub.w	r4, r4, #1
  405aa0:	f1d5 0e20 	rsbs	lr, r5, #32
  405aa4:	db0d      	blt.n	405ac2 <__adddf3+0xb2>
  405aa6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405aaa:	fa22 f205 	lsr.w	r2, r2, r5
  405aae:	1880      	adds	r0, r0, r2
  405ab0:	f141 0100 	adc.w	r1, r1, #0
  405ab4:	fa03 f20e 	lsl.w	r2, r3, lr
  405ab8:	1880      	adds	r0, r0, r2
  405aba:	fa43 f305 	asr.w	r3, r3, r5
  405abe:	4159      	adcs	r1, r3
  405ac0:	e00e      	b.n	405ae0 <__adddf3+0xd0>
  405ac2:	f1a5 0520 	sub.w	r5, r5, #32
  405ac6:	f10e 0e20 	add.w	lr, lr, #32
  405aca:	2a01      	cmp	r2, #1
  405acc:	fa03 fc0e 	lsl.w	ip, r3, lr
  405ad0:	bf28      	it	cs
  405ad2:	f04c 0c02 	orrcs.w	ip, ip, #2
  405ad6:	fa43 f305 	asr.w	r3, r3, r5
  405ada:	18c0      	adds	r0, r0, r3
  405adc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405ae0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ae4:	d507      	bpl.n	405af6 <__adddf3+0xe6>
  405ae6:	f04f 0e00 	mov.w	lr, #0
  405aea:	f1dc 0c00 	rsbs	ip, ip, #0
  405aee:	eb7e 0000 	sbcs.w	r0, lr, r0
  405af2:	eb6e 0101 	sbc.w	r1, lr, r1
  405af6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405afa:	d31b      	bcc.n	405b34 <__adddf3+0x124>
  405afc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405b00:	d30c      	bcc.n	405b1c <__adddf3+0x10c>
  405b02:	0849      	lsrs	r1, r1, #1
  405b04:	ea5f 0030 	movs.w	r0, r0, rrx
  405b08:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405b0c:	f104 0401 	add.w	r4, r4, #1
  405b10:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405b14:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405b18:	f080 809a 	bcs.w	405c50 <__adddf3+0x240>
  405b1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405b20:	bf08      	it	eq
  405b22:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405b26:	f150 0000 	adcs.w	r0, r0, #0
  405b2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405b2e:	ea41 0105 	orr.w	r1, r1, r5
  405b32:	bd30      	pop	{r4, r5, pc}
  405b34:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405b38:	4140      	adcs	r0, r0
  405b3a:	eb41 0101 	adc.w	r1, r1, r1
  405b3e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405b42:	f1a4 0401 	sub.w	r4, r4, #1
  405b46:	d1e9      	bne.n	405b1c <__adddf3+0x10c>
  405b48:	f091 0f00 	teq	r1, #0
  405b4c:	bf04      	itt	eq
  405b4e:	4601      	moveq	r1, r0
  405b50:	2000      	moveq	r0, #0
  405b52:	fab1 f381 	clz	r3, r1
  405b56:	bf08      	it	eq
  405b58:	3320      	addeq	r3, #32
  405b5a:	f1a3 030b 	sub.w	r3, r3, #11
  405b5e:	f1b3 0220 	subs.w	r2, r3, #32
  405b62:	da0c      	bge.n	405b7e <__adddf3+0x16e>
  405b64:	320c      	adds	r2, #12
  405b66:	dd08      	ble.n	405b7a <__adddf3+0x16a>
  405b68:	f102 0c14 	add.w	ip, r2, #20
  405b6c:	f1c2 020c 	rsb	r2, r2, #12
  405b70:	fa01 f00c 	lsl.w	r0, r1, ip
  405b74:	fa21 f102 	lsr.w	r1, r1, r2
  405b78:	e00c      	b.n	405b94 <__adddf3+0x184>
  405b7a:	f102 0214 	add.w	r2, r2, #20
  405b7e:	bfd8      	it	le
  405b80:	f1c2 0c20 	rsble	ip, r2, #32
  405b84:	fa01 f102 	lsl.w	r1, r1, r2
  405b88:	fa20 fc0c 	lsr.w	ip, r0, ip
  405b8c:	bfdc      	itt	le
  405b8e:	ea41 010c 	orrle.w	r1, r1, ip
  405b92:	4090      	lslle	r0, r2
  405b94:	1ae4      	subs	r4, r4, r3
  405b96:	bfa2      	ittt	ge
  405b98:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405b9c:	4329      	orrge	r1, r5
  405b9e:	bd30      	popge	{r4, r5, pc}
  405ba0:	ea6f 0404 	mvn.w	r4, r4
  405ba4:	3c1f      	subs	r4, #31
  405ba6:	da1c      	bge.n	405be2 <__adddf3+0x1d2>
  405ba8:	340c      	adds	r4, #12
  405baa:	dc0e      	bgt.n	405bca <__adddf3+0x1ba>
  405bac:	f104 0414 	add.w	r4, r4, #20
  405bb0:	f1c4 0220 	rsb	r2, r4, #32
  405bb4:	fa20 f004 	lsr.w	r0, r0, r4
  405bb8:	fa01 f302 	lsl.w	r3, r1, r2
  405bbc:	ea40 0003 	orr.w	r0, r0, r3
  405bc0:	fa21 f304 	lsr.w	r3, r1, r4
  405bc4:	ea45 0103 	orr.w	r1, r5, r3
  405bc8:	bd30      	pop	{r4, r5, pc}
  405bca:	f1c4 040c 	rsb	r4, r4, #12
  405bce:	f1c4 0220 	rsb	r2, r4, #32
  405bd2:	fa20 f002 	lsr.w	r0, r0, r2
  405bd6:	fa01 f304 	lsl.w	r3, r1, r4
  405bda:	ea40 0003 	orr.w	r0, r0, r3
  405bde:	4629      	mov	r1, r5
  405be0:	bd30      	pop	{r4, r5, pc}
  405be2:	fa21 f004 	lsr.w	r0, r1, r4
  405be6:	4629      	mov	r1, r5
  405be8:	bd30      	pop	{r4, r5, pc}
  405bea:	f094 0f00 	teq	r4, #0
  405bee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405bf2:	bf06      	itte	eq
  405bf4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405bf8:	3401      	addeq	r4, #1
  405bfa:	3d01      	subne	r5, #1
  405bfc:	e74e      	b.n	405a9c <__adddf3+0x8c>
  405bfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405c02:	bf18      	it	ne
  405c04:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c08:	d029      	beq.n	405c5e <__adddf3+0x24e>
  405c0a:	ea94 0f05 	teq	r4, r5
  405c0e:	bf08      	it	eq
  405c10:	ea90 0f02 	teqeq	r0, r2
  405c14:	d005      	beq.n	405c22 <__adddf3+0x212>
  405c16:	ea54 0c00 	orrs.w	ip, r4, r0
  405c1a:	bf04      	itt	eq
  405c1c:	4619      	moveq	r1, r3
  405c1e:	4610      	moveq	r0, r2
  405c20:	bd30      	pop	{r4, r5, pc}
  405c22:	ea91 0f03 	teq	r1, r3
  405c26:	bf1e      	ittt	ne
  405c28:	2100      	movne	r1, #0
  405c2a:	2000      	movne	r0, #0
  405c2c:	bd30      	popne	{r4, r5, pc}
  405c2e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405c32:	d105      	bne.n	405c40 <__adddf3+0x230>
  405c34:	0040      	lsls	r0, r0, #1
  405c36:	4149      	adcs	r1, r1
  405c38:	bf28      	it	cs
  405c3a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405c3e:	bd30      	pop	{r4, r5, pc}
  405c40:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405c44:	bf3c      	itt	cc
  405c46:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405c4a:	bd30      	popcc	{r4, r5, pc}
  405c4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405c50:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405c54:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405c58:	f04f 0000 	mov.w	r0, #0
  405c5c:	bd30      	pop	{r4, r5, pc}
  405c5e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405c62:	bf1a      	itte	ne
  405c64:	4619      	movne	r1, r3
  405c66:	4610      	movne	r0, r2
  405c68:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405c6c:	bf1c      	itt	ne
  405c6e:	460b      	movne	r3, r1
  405c70:	4602      	movne	r2, r0
  405c72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405c76:	bf06      	itte	eq
  405c78:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405c7c:	ea91 0f03 	teqeq	r1, r3
  405c80:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405c84:	bd30      	pop	{r4, r5, pc}
  405c86:	bf00      	nop

00405c88 <__aeabi_ui2d>:
  405c88:	f090 0f00 	teq	r0, #0
  405c8c:	bf04      	itt	eq
  405c8e:	2100      	moveq	r1, #0
  405c90:	4770      	bxeq	lr
  405c92:	b530      	push	{r4, r5, lr}
  405c94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405c98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405c9c:	f04f 0500 	mov.w	r5, #0
  405ca0:	f04f 0100 	mov.w	r1, #0
  405ca4:	e750      	b.n	405b48 <__adddf3+0x138>
  405ca6:	bf00      	nop

00405ca8 <__aeabi_i2d>:
  405ca8:	f090 0f00 	teq	r0, #0
  405cac:	bf04      	itt	eq
  405cae:	2100      	moveq	r1, #0
  405cb0:	4770      	bxeq	lr
  405cb2:	b530      	push	{r4, r5, lr}
  405cb4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405cb8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405cbc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405cc0:	bf48      	it	mi
  405cc2:	4240      	negmi	r0, r0
  405cc4:	f04f 0100 	mov.w	r1, #0
  405cc8:	e73e      	b.n	405b48 <__adddf3+0x138>
  405cca:	bf00      	nop

00405ccc <__aeabi_f2d>:
  405ccc:	0042      	lsls	r2, r0, #1
  405cce:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405cd2:	ea4f 0131 	mov.w	r1, r1, rrx
  405cd6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405cda:	bf1f      	itttt	ne
  405cdc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405ce0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ce4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405ce8:	4770      	bxne	lr
  405cea:	f092 0f00 	teq	r2, #0
  405cee:	bf14      	ite	ne
  405cf0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405cf4:	4770      	bxeq	lr
  405cf6:	b530      	push	{r4, r5, lr}
  405cf8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405cfc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405d00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405d04:	e720      	b.n	405b48 <__adddf3+0x138>
  405d06:	bf00      	nop

00405d08 <__aeabi_ul2d>:
  405d08:	ea50 0201 	orrs.w	r2, r0, r1
  405d0c:	bf08      	it	eq
  405d0e:	4770      	bxeq	lr
  405d10:	b530      	push	{r4, r5, lr}
  405d12:	f04f 0500 	mov.w	r5, #0
  405d16:	e00a      	b.n	405d2e <__aeabi_l2d+0x16>

00405d18 <__aeabi_l2d>:
  405d18:	ea50 0201 	orrs.w	r2, r0, r1
  405d1c:	bf08      	it	eq
  405d1e:	4770      	bxeq	lr
  405d20:	b530      	push	{r4, r5, lr}
  405d22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405d26:	d502      	bpl.n	405d2e <__aeabi_l2d+0x16>
  405d28:	4240      	negs	r0, r0
  405d2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405d2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405d3a:	f43f aedc 	beq.w	405af6 <__adddf3+0xe6>
  405d3e:	f04f 0203 	mov.w	r2, #3
  405d42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d46:	bf18      	it	ne
  405d48:	3203      	addne	r2, #3
  405d4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405d4e:	bf18      	it	ne
  405d50:	3203      	addne	r2, #3
  405d52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405d56:	f1c2 0320 	rsb	r3, r2, #32
  405d5a:	fa00 fc03 	lsl.w	ip, r0, r3
  405d5e:	fa20 f002 	lsr.w	r0, r0, r2
  405d62:	fa01 fe03 	lsl.w	lr, r1, r3
  405d66:	ea40 000e 	orr.w	r0, r0, lr
  405d6a:	fa21 f102 	lsr.w	r1, r1, r2
  405d6e:	4414      	add	r4, r2
  405d70:	e6c1      	b.n	405af6 <__adddf3+0xe6>
  405d72:	bf00      	nop

00405d74 <__aeabi_dmul>:
  405d74:	b570      	push	{r4, r5, r6, lr}
  405d76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405d7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405d7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405d82:	bf1d      	ittte	ne
  405d84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405d88:	ea94 0f0c 	teqne	r4, ip
  405d8c:	ea95 0f0c 	teqne	r5, ip
  405d90:	f000 f8de 	bleq	405f50 <__aeabi_dmul+0x1dc>
  405d94:	442c      	add	r4, r5
  405d96:	ea81 0603 	eor.w	r6, r1, r3
  405d9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405d9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405da2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405da6:	bf18      	it	ne
  405da8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405dac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405db0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405db4:	d038      	beq.n	405e28 <__aeabi_dmul+0xb4>
  405db6:	fba0 ce02 	umull	ip, lr, r0, r2
  405dba:	f04f 0500 	mov.w	r5, #0
  405dbe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405dc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405dc6:	fbe0 e503 	umlal	lr, r5, r0, r3
  405dca:	f04f 0600 	mov.w	r6, #0
  405dce:	fbe1 5603 	umlal	r5, r6, r1, r3
  405dd2:	f09c 0f00 	teq	ip, #0
  405dd6:	bf18      	it	ne
  405dd8:	f04e 0e01 	orrne.w	lr, lr, #1
  405ddc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405de0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405de4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405de8:	d204      	bcs.n	405df4 <__aeabi_dmul+0x80>
  405dea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405dee:	416d      	adcs	r5, r5
  405df0:	eb46 0606 	adc.w	r6, r6, r6
  405df4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405df8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405dfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405e00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405e04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405e08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405e0c:	bf88      	it	hi
  405e0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405e12:	d81e      	bhi.n	405e52 <__aeabi_dmul+0xde>
  405e14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405e18:	bf08      	it	eq
  405e1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405e1e:	f150 0000 	adcs.w	r0, r0, #0
  405e22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405e26:	bd70      	pop	{r4, r5, r6, pc}
  405e28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405e2c:	ea46 0101 	orr.w	r1, r6, r1
  405e30:	ea40 0002 	orr.w	r0, r0, r2
  405e34:	ea81 0103 	eor.w	r1, r1, r3
  405e38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405e3c:	bfc2      	ittt	gt
  405e3e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405e42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405e46:	bd70      	popgt	{r4, r5, r6, pc}
  405e48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e4c:	f04f 0e00 	mov.w	lr, #0
  405e50:	3c01      	subs	r4, #1
  405e52:	f300 80ab 	bgt.w	405fac <__aeabi_dmul+0x238>
  405e56:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405e5a:	bfde      	ittt	le
  405e5c:	2000      	movle	r0, #0
  405e5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405e62:	bd70      	pople	{r4, r5, r6, pc}
  405e64:	f1c4 0400 	rsb	r4, r4, #0
  405e68:	3c20      	subs	r4, #32
  405e6a:	da35      	bge.n	405ed8 <__aeabi_dmul+0x164>
  405e6c:	340c      	adds	r4, #12
  405e6e:	dc1b      	bgt.n	405ea8 <__aeabi_dmul+0x134>
  405e70:	f104 0414 	add.w	r4, r4, #20
  405e74:	f1c4 0520 	rsb	r5, r4, #32
  405e78:	fa00 f305 	lsl.w	r3, r0, r5
  405e7c:	fa20 f004 	lsr.w	r0, r0, r4
  405e80:	fa01 f205 	lsl.w	r2, r1, r5
  405e84:	ea40 0002 	orr.w	r0, r0, r2
  405e88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405e8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405e90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405e94:	fa21 f604 	lsr.w	r6, r1, r4
  405e98:	eb42 0106 	adc.w	r1, r2, r6
  405e9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ea0:	bf08      	it	eq
  405ea2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ea6:	bd70      	pop	{r4, r5, r6, pc}
  405ea8:	f1c4 040c 	rsb	r4, r4, #12
  405eac:	f1c4 0520 	rsb	r5, r4, #32
  405eb0:	fa00 f304 	lsl.w	r3, r0, r4
  405eb4:	fa20 f005 	lsr.w	r0, r0, r5
  405eb8:	fa01 f204 	lsl.w	r2, r1, r4
  405ebc:	ea40 0002 	orr.w	r0, r0, r2
  405ec0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ec4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405ec8:	f141 0100 	adc.w	r1, r1, #0
  405ecc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405ed0:	bf08      	it	eq
  405ed2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ed6:	bd70      	pop	{r4, r5, r6, pc}
  405ed8:	f1c4 0520 	rsb	r5, r4, #32
  405edc:	fa00 f205 	lsl.w	r2, r0, r5
  405ee0:	ea4e 0e02 	orr.w	lr, lr, r2
  405ee4:	fa20 f304 	lsr.w	r3, r0, r4
  405ee8:	fa01 f205 	lsl.w	r2, r1, r5
  405eec:	ea43 0302 	orr.w	r3, r3, r2
  405ef0:	fa21 f004 	lsr.w	r0, r1, r4
  405ef4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ef8:	fa21 f204 	lsr.w	r2, r1, r4
  405efc:	ea20 0002 	bic.w	r0, r0, r2
  405f00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405f04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f08:	bf08      	it	eq
  405f0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f0e:	bd70      	pop	{r4, r5, r6, pc}
  405f10:	f094 0f00 	teq	r4, #0
  405f14:	d10f      	bne.n	405f36 <__aeabi_dmul+0x1c2>
  405f16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405f1a:	0040      	lsls	r0, r0, #1
  405f1c:	eb41 0101 	adc.w	r1, r1, r1
  405f20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405f24:	bf08      	it	eq
  405f26:	3c01      	subeq	r4, #1
  405f28:	d0f7      	beq.n	405f1a <__aeabi_dmul+0x1a6>
  405f2a:	ea41 0106 	orr.w	r1, r1, r6
  405f2e:	f095 0f00 	teq	r5, #0
  405f32:	bf18      	it	ne
  405f34:	4770      	bxne	lr
  405f36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405f3a:	0052      	lsls	r2, r2, #1
  405f3c:	eb43 0303 	adc.w	r3, r3, r3
  405f40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405f44:	bf08      	it	eq
  405f46:	3d01      	subeq	r5, #1
  405f48:	d0f7      	beq.n	405f3a <__aeabi_dmul+0x1c6>
  405f4a:	ea43 0306 	orr.w	r3, r3, r6
  405f4e:	4770      	bx	lr
  405f50:	ea94 0f0c 	teq	r4, ip
  405f54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405f58:	bf18      	it	ne
  405f5a:	ea95 0f0c 	teqne	r5, ip
  405f5e:	d00c      	beq.n	405f7a <__aeabi_dmul+0x206>
  405f60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405f64:	bf18      	it	ne
  405f66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405f6a:	d1d1      	bne.n	405f10 <__aeabi_dmul+0x19c>
  405f6c:	ea81 0103 	eor.w	r1, r1, r3
  405f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f74:	f04f 0000 	mov.w	r0, #0
  405f78:	bd70      	pop	{r4, r5, r6, pc}
  405f7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405f7e:	bf06      	itte	eq
  405f80:	4610      	moveq	r0, r2
  405f82:	4619      	moveq	r1, r3
  405f84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405f88:	d019      	beq.n	405fbe <__aeabi_dmul+0x24a>
  405f8a:	ea94 0f0c 	teq	r4, ip
  405f8e:	d102      	bne.n	405f96 <__aeabi_dmul+0x222>
  405f90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405f94:	d113      	bne.n	405fbe <__aeabi_dmul+0x24a>
  405f96:	ea95 0f0c 	teq	r5, ip
  405f9a:	d105      	bne.n	405fa8 <__aeabi_dmul+0x234>
  405f9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405fa0:	bf1c      	itt	ne
  405fa2:	4610      	movne	r0, r2
  405fa4:	4619      	movne	r1, r3
  405fa6:	d10a      	bne.n	405fbe <__aeabi_dmul+0x24a>
  405fa8:	ea81 0103 	eor.w	r1, r1, r3
  405fac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405fb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405fb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405fb8:	f04f 0000 	mov.w	r0, #0
  405fbc:	bd70      	pop	{r4, r5, r6, pc}
  405fbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405fc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405fc6:	bd70      	pop	{r4, r5, r6, pc}

00405fc8 <__aeabi_ddiv>:
  405fc8:	b570      	push	{r4, r5, r6, lr}
  405fca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405fce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405fd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405fd6:	bf1d      	ittte	ne
  405fd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405fdc:	ea94 0f0c 	teqne	r4, ip
  405fe0:	ea95 0f0c 	teqne	r5, ip
  405fe4:	f000 f8a7 	bleq	406136 <__aeabi_ddiv+0x16e>
  405fe8:	eba4 0405 	sub.w	r4, r4, r5
  405fec:	ea81 0e03 	eor.w	lr, r1, r3
  405ff0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405ff4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405ff8:	f000 8088 	beq.w	40610c <__aeabi_ddiv+0x144>
  405ffc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406000:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406004:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406008:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40600c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406010:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406014:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406018:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40601c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406020:	429d      	cmp	r5, r3
  406022:	bf08      	it	eq
  406024:	4296      	cmpeq	r6, r2
  406026:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40602a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40602e:	d202      	bcs.n	406036 <__aeabi_ddiv+0x6e>
  406030:	085b      	lsrs	r3, r3, #1
  406032:	ea4f 0232 	mov.w	r2, r2, rrx
  406036:	1ab6      	subs	r6, r6, r2
  406038:	eb65 0503 	sbc.w	r5, r5, r3
  40603c:	085b      	lsrs	r3, r3, #1
  40603e:	ea4f 0232 	mov.w	r2, r2, rrx
  406042:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406046:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40604a:	ebb6 0e02 	subs.w	lr, r6, r2
  40604e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406052:	bf22      	ittt	cs
  406054:	1ab6      	subcs	r6, r6, r2
  406056:	4675      	movcs	r5, lr
  406058:	ea40 000c 	orrcs.w	r0, r0, ip
  40605c:	085b      	lsrs	r3, r3, #1
  40605e:	ea4f 0232 	mov.w	r2, r2, rrx
  406062:	ebb6 0e02 	subs.w	lr, r6, r2
  406066:	eb75 0e03 	sbcs.w	lr, r5, r3
  40606a:	bf22      	ittt	cs
  40606c:	1ab6      	subcs	r6, r6, r2
  40606e:	4675      	movcs	r5, lr
  406070:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406074:	085b      	lsrs	r3, r3, #1
  406076:	ea4f 0232 	mov.w	r2, r2, rrx
  40607a:	ebb6 0e02 	subs.w	lr, r6, r2
  40607e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406082:	bf22      	ittt	cs
  406084:	1ab6      	subcs	r6, r6, r2
  406086:	4675      	movcs	r5, lr
  406088:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40608c:	085b      	lsrs	r3, r3, #1
  40608e:	ea4f 0232 	mov.w	r2, r2, rrx
  406092:	ebb6 0e02 	subs.w	lr, r6, r2
  406096:	eb75 0e03 	sbcs.w	lr, r5, r3
  40609a:	bf22      	ittt	cs
  40609c:	1ab6      	subcs	r6, r6, r2
  40609e:	4675      	movcs	r5, lr
  4060a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4060a4:	ea55 0e06 	orrs.w	lr, r5, r6
  4060a8:	d018      	beq.n	4060dc <__aeabi_ddiv+0x114>
  4060aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4060ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4060b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4060b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4060ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4060be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4060c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4060c6:	d1c0      	bne.n	40604a <__aeabi_ddiv+0x82>
  4060c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4060cc:	d10b      	bne.n	4060e6 <__aeabi_ddiv+0x11e>
  4060ce:	ea41 0100 	orr.w	r1, r1, r0
  4060d2:	f04f 0000 	mov.w	r0, #0
  4060d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4060da:	e7b6      	b.n	40604a <__aeabi_ddiv+0x82>
  4060dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4060e0:	bf04      	itt	eq
  4060e2:	4301      	orreq	r1, r0
  4060e4:	2000      	moveq	r0, #0
  4060e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4060ea:	bf88      	it	hi
  4060ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4060f0:	f63f aeaf 	bhi.w	405e52 <__aeabi_dmul+0xde>
  4060f4:	ebb5 0c03 	subs.w	ip, r5, r3
  4060f8:	bf04      	itt	eq
  4060fa:	ebb6 0c02 	subseq.w	ip, r6, r2
  4060fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406102:	f150 0000 	adcs.w	r0, r0, #0
  406106:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40610a:	bd70      	pop	{r4, r5, r6, pc}
  40610c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406110:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406114:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406118:	bfc2      	ittt	gt
  40611a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40611e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406122:	bd70      	popgt	{r4, r5, r6, pc}
  406124:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406128:	f04f 0e00 	mov.w	lr, #0
  40612c:	3c01      	subs	r4, #1
  40612e:	e690      	b.n	405e52 <__aeabi_dmul+0xde>
  406130:	ea45 0e06 	orr.w	lr, r5, r6
  406134:	e68d      	b.n	405e52 <__aeabi_dmul+0xde>
  406136:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40613a:	ea94 0f0c 	teq	r4, ip
  40613e:	bf08      	it	eq
  406140:	ea95 0f0c 	teqeq	r5, ip
  406144:	f43f af3b 	beq.w	405fbe <__aeabi_dmul+0x24a>
  406148:	ea94 0f0c 	teq	r4, ip
  40614c:	d10a      	bne.n	406164 <__aeabi_ddiv+0x19c>
  40614e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406152:	f47f af34 	bne.w	405fbe <__aeabi_dmul+0x24a>
  406156:	ea95 0f0c 	teq	r5, ip
  40615a:	f47f af25 	bne.w	405fa8 <__aeabi_dmul+0x234>
  40615e:	4610      	mov	r0, r2
  406160:	4619      	mov	r1, r3
  406162:	e72c      	b.n	405fbe <__aeabi_dmul+0x24a>
  406164:	ea95 0f0c 	teq	r5, ip
  406168:	d106      	bne.n	406178 <__aeabi_ddiv+0x1b0>
  40616a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40616e:	f43f aefd 	beq.w	405f6c <__aeabi_dmul+0x1f8>
  406172:	4610      	mov	r0, r2
  406174:	4619      	mov	r1, r3
  406176:	e722      	b.n	405fbe <__aeabi_dmul+0x24a>
  406178:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40617c:	bf18      	it	ne
  40617e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406182:	f47f aec5 	bne.w	405f10 <__aeabi_dmul+0x19c>
  406186:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40618a:	f47f af0d 	bne.w	405fa8 <__aeabi_dmul+0x234>
  40618e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406192:	f47f aeeb 	bne.w	405f6c <__aeabi_dmul+0x1f8>
  406196:	e712      	b.n	405fbe <__aeabi_dmul+0x24a>

00406198 <__gedf2>:
  406198:	f04f 3cff 	mov.w	ip, #4294967295
  40619c:	e006      	b.n	4061ac <__cmpdf2+0x4>
  40619e:	bf00      	nop

004061a0 <__ledf2>:
  4061a0:	f04f 0c01 	mov.w	ip, #1
  4061a4:	e002      	b.n	4061ac <__cmpdf2+0x4>
  4061a6:	bf00      	nop

004061a8 <__cmpdf2>:
  4061a8:	f04f 0c01 	mov.w	ip, #1
  4061ac:	f84d cd04 	str.w	ip, [sp, #-4]!
  4061b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4061b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4061b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4061bc:	bf18      	it	ne
  4061be:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4061c2:	d01b      	beq.n	4061fc <__cmpdf2+0x54>
  4061c4:	b001      	add	sp, #4
  4061c6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4061ca:	bf0c      	ite	eq
  4061cc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4061d0:	ea91 0f03 	teqne	r1, r3
  4061d4:	bf02      	ittt	eq
  4061d6:	ea90 0f02 	teqeq	r0, r2
  4061da:	2000      	moveq	r0, #0
  4061dc:	4770      	bxeq	lr
  4061de:	f110 0f00 	cmn.w	r0, #0
  4061e2:	ea91 0f03 	teq	r1, r3
  4061e6:	bf58      	it	pl
  4061e8:	4299      	cmppl	r1, r3
  4061ea:	bf08      	it	eq
  4061ec:	4290      	cmpeq	r0, r2
  4061ee:	bf2c      	ite	cs
  4061f0:	17d8      	asrcs	r0, r3, #31
  4061f2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4061f6:	f040 0001 	orr.w	r0, r0, #1
  4061fa:	4770      	bx	lr
  4061fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406200:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406204:	d102      	bne.n	40620c <__cmpdf2+0x64>
  406206:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40620a:	d107      	bne.n	40621c <__cmpdf2+0x74>
  40620c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406210:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406214:	d1d6      	bne.n	4061c4 <__cmpdf2+0x1c>
  406216:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40621a:	d0d3      	beq.n	4061c4 <__cmpdf2+0x1c>
  40621c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406220:	4770      	bx	lr
  406222:	bf00      	nop

00406224 <__aeabi_cdrcmple>:
  406224:	4684      	mov	ip, r0
  406226:	4610      	mov	r0, r2
  406228:	4662      	mov	r2, ip
  40622a:	468c      	mov	ip, r1
  40622c:	4619      	mov	r1, r3
  40622e:	4663      	mov	r3, ip
  406230:	e000      	b.n	406234 <__aeabi_cdcmpeq>
  406232:	bf00      	nop

00406234 <__aeabi_cdcmpeq>:
  406234:	b501      	push	{r0, lr}
  406236:	f7ff ffb7 	bl	4061a8 <__cmpdf2>
  40623a:	2800      	cmp	r0, #0
  40623c:	bf48      	it	mi
  40623e:	f110 0f00 	cmnmi.w	r0, #0
  406242:	bd01      	pop	{r0, pc}

00406244 <__aeabi_dcmpeq>:
  406244:	f84d ed08 	str.w	lr, [sp, #-8]!
  406248:	f7ff fff4 	bl	406234 <__aeabi_cdcmpeq>
  40624c:	bf0c      	ite	eq
  40624e:	2001      	moveq	r0, #1
  406250:	2000      	movne	r0, #0
  406252:	f85d fb08 	ldr.w	pc, [sp], #8
  406256:	bf00      	nop

00406258 <__aeabi_dcmplt>:
  406258:	f84d ed08 	str.w	lr, [sp, #-8]!
  40625c:	f7ff ffea 	bl	406234 <__aeabi_cdcmpeq>
  406260:	bf34      	ite	cc
  406262:	2001      	movcc	r0, #1
  406264:	2000      	movcs	r0, #0
  406266:	f85d fb08 	ldr.w	pc, [sp], #8
  40626a:	bf00      	nop

0040626c <__aeabi_dcmple>:
  40626c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406270:	f7ff ffe0 	bl	406234 <__aeabi_cdcmpeq>
  406274:	bf94      	ite	ls
  406276:	2001      	movls	r0, #1
  406278:	2000      	movhi	r0, #0
  40627a:	f85d fb08 	ldr.w	pc, [sp], #8
  40627e:	bf00      	nop

00406280 <__aeabi_dcmpge>:
  406280:	f84d ed08 	str.w	lr, [sp, #-8]!
  406284:	f7ff ffce 	bl	406224 <__aeabi_cdrcmple>
  406288:	bf94      	ite	ls
  40628a:	2001      	movls	r0, #1
  40628c:	2000      	movhi	r0, #0
  40628e:	f85d fb08 	ldr.w	pc, [sp], #8
  406292:	bf00      	nop

00406294 <__aeabi_dcmpgt>:
  406294:	f84d ed08 	str.w	lr, [sp, #-8]!
  406298:	f7ff ffc4 	bl	406224 <__aeabi_cdrcmple>
  40629c:	bf34      	ite	cc
  40629e:	2001      	movcc	r0, #1
  4062a0:	2000      	movcs	r0, #0
  4062a2:	f85d fb08 	ldr.w	pc, [sp], #8
  4062a6:	bf00      	nop

004062a8 <__aeabi_dcmpun>:
  4062a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4062ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062b0:	d102      	bne.n	4062b8 <__aeabi_dcmpun+0x10>
  4062b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4062b6:	d10a      	bne.n	4062ce <__aeabi_dcmpun+0x26>
  4062b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4062bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062c0:	d102      	bne.n	4062c8 <__aeabi_dcmpun+0x20>
  4062c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4062c6:	d102      	bne.n	4062ce <__aeabi_dcmpun+0x26>
  4062c8:	f04f 0000 	mov.w	r0, #0
  4062cc:	4770      	bx	lr
  4062ce:	f04f 0001 	mov.w	r0, #1
  4062d2:	4770      	bx	lr

004062d4 <__aeabi_d2iz>:
  4062d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4062d8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4062dc:	d215      	bcs.n	40630a <__aeabi_d2iz+0x36>
  4062de:	d511      	bpl.n	406304 <__aeabi_d2iz+0x30>
  4062e0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4062e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4062e8:	d912      	bls.n	406310 <__aeabi_d2iz+0x3c>
  4062ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4062ee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4062f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4062f6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4062fa:	fa23 f002 	lsr.w	r0, r3, r2
  4062fe:	bf18      	it	ne
  406300:	4240      	negne	r0, r0
  406302:	4770      	bx	lr
  406304:	f04f 0000 	mov.w	r0, #0
  406308:	4770      	bx	lr
  40630a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40630e:	d105      	bne.n	40631c <__aeabi_d2iz+0x48>
  406310:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406314:	bf08      	it	eq
  406316:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40631a:	4770      	bx	lr
  40631c:	f04f 0000 	mov.w	r0, #0
  406320:	4770      	bx	lr
  406322:	bf00      	nop

00406324 <sysfont_glyphs>:
	...
  406344:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406354:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406364:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  40637c:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  40638c:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  40639c:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  4063b4:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  4063c4:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  4063d4:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4063ec:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406408:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406418:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406428:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406438:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  406460:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406488:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406498:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  4064bc:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  4064cc:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  4064dc:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4064ec:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406504:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406514:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406524:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  40653c:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  40654c:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  40655c:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406574:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406584:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406594:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  4065ac:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  4065bc:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  4065cc:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4065e4:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4065f4:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406604:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  406620:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  406630:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406640:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  40665c:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406674:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  40668c:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  40669c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  4066ac:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  4066c4:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  4066d4:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4066e4:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4066fc:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  40670c:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  40671c:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406734:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406744:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406754:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  40676c:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  40677c:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  40678c:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  4067a4:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4067b4:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4067c4:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  4067dc:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4067ec:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4067fc:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406814:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406824:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406834:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  40684c:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  40685c:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  40686c:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406884:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406894:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  4068a4:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  4068bc:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  4068cc:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4068dc:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4068f4:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406904:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406914:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  40692c:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  40693c:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  40694c:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406964:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406974:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406984:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  40699c:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  4069ac:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  4069bc:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  4069d4:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  4069e4:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  4069f4:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406a1c:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406a2c:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406a48:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406a60:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406a70:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406a80:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406a98:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406aa8:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406ab8:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406ad0:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406ae0:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406af0:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406b00:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406b10:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406b20:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406b30:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406b40:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406b50:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406b60:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406b78:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406b88:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b98:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406bb4:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406bd0:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406bec:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406bfc:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406c0c:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406c24:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406c40:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406c5c:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406c78:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406c94:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406cb0:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406ccc:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406ce8:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406cf8:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406d08:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406d18:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406d28:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406d38:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406d48:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406d58:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406d68:	0000 0000 2020 2020 0020 0000 6425 0000     ....     ...%d..

00406d78 <_global_impure_ptr>:
  406d78:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406d88:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406d98:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406da8:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406db8:	296c 0000 0030 0000                         l)..0...

00406dc0 <blanks.7223>:
  406dc0:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406dd0 <zeroes.7224>:
  406dd0:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406de0:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406df0 <__mprec_bigtens>:
  406df0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406e00:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406e10:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406e18 <__mprec_tens>:
  406e18:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406e28:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406e38:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406e48:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406e58:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406e68:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406e78:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406e88:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406e98:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406ea8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406eb8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406ec8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406ed8:	9db4 79d9 7843 44ea                         ...yCx.D

00406ee0 <p05.6055>:
  406ee0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406ef0:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406efc <_ctype_>:
  406efc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406f0c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406f1c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406f2c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406f3c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406f4c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406f5c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406f6c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406f7c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407000 <_init>:
  407000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407002:	bf00      	nop
  407004:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407006:	bc08      	pop	{r3}
  407008:	469e      	mov	lr, r3
  40700a:	4770      	bx	lr

0040700c <__init_array_start>:
  40700c:	004032a1 	.word	0x004032a1

00407010 <__frame_dummy_init_array_entry>:
  407010:	00400165                                e.@.

00407014 <_fini>:
  407014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407016:	bf00      	nop
  407018:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40701a:	bc08      	pop	{r3}
  40701c:	469e      	mov	lr, r3
  40701e:	4770      	bx	lr

00407020 <__fini_array_start>:
  407020:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6324 0040 0e0a 7d20               ....$c@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <frequencia>:
20400020:	0064 0000                                   d...

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0d14 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	59e9 0040 55a9 0040 0000 0000 6efc 0040     .Y@..U@......n@.
20400954:	6ef8 0040 6d9c 0040 6d9c 0040 6d9c 0040     .n@..m@..m@..m@.
20400964:	6d9c 0040 6d9c 0040 6d9c 0040 6d9c 0040     .m@..m@..m@..m@.
20400974:	6d9c 0040 6d9c 0040 ffff ffff ffff ffff     .m@..m@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
